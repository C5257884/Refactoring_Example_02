*----------------------------------------------------------------------*
* РТК, ERP2005                                                         *
*----------------------------------------------------------------------*
* RESPONSIBLE :
* AUTHOR      :
* DATE        : Июнь 2012                                              *
*----------------------------------------------------------------------*
* TITLE       : ZMM_EXEC_STOCK_FOR_PRD_01                              *
* DESCRIPTION :  <описание>                                            *
*----------------------------------------------------------------------*
* FUNCTIONAL AREA    : <функц.обл. из специф.>                         *
* TASK SPECIFICATION : <имя файла>                                     *
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
REPORT  zmm_exec_stock_test MESSAGE-ID zmm2 LINE-SIZE 256.

TABLES: mara, t001k, zmmcorr16, eina, lfa1.
TABLES sscrfields.                          " ----  RT0K917548.RTKDEVSAP-184

TYPE-POOLS: slis, icon.
CLASS cl_alv01_hdlr DEFINITION DEFERRED.

RANGES: gr_budat FOR mkpf-budat,
        gr_matnr FOR mseg-matnr.

* ---- { RT0K915737.ERP-259
*   C O N S T A N T S
* ------------------------------
CONSTANTS:
  cc_cell_mode_dsp(1)        TYPE           c       VALUE 'D'           ##needed, " cl_gui_alv_grid=>mc_style_disabled
  cc_cell_mode_chg(1)        TYPE           c       VALUE 'C'           ##needed. " cl_gui_alv_grid=>mc_style_enabled
CONSTANTS:
  cc_fc_chgkor16             TYPE           syucomm VALUE 'CH_KOR16'    ##needed, " Изм/просм.Корр16
  cc_fc_savkor16             TYPE           syucomm VALUE 'SAVE_KOR16'  ##needed, " Сохр.Корр16
  cc_fc_postkor16            TYPE           syucomm VALUE 'POST_KOR16'  ##needed, " Проводка Корр16
  cc_fc_strnkor16            TYPE           syucomm VALUE 'STRN_KOR16'  ##needed. " Сторно Корр16       " ----   RT0K916109.RTKDEVSAP-33
CONSTANTS:
  cc_msgty_x(1)              TYPE           c       VALUE 'X'           ##needed,   "Dump
  cc_msgty_a(1)              TYPE           c       VALUE 'A'           ##needed,   "Abort
  cc_msgty_e(1)              TYPE           c       VALUE 'E'           ##needed,   "Error
  cc_msgty_w(1)              TYPE           c       VALUE 'W'           ##needed,   "Warning
  cc_msgty_i(1)              TYPE           c       VALUE 'I'           ##needed,   "Information
  cc_msgty_s(1)              TYPE           c       VALUE 'S'           ##needed.   "Success
CONSTANTS:
  ci_retval_s                TYPE           sysubrc VALUE 0             ##needed,   "Success
  ci_retval_i                TYPE           sysubrc VALUE 1             ##needed,   "Information
  ci_retval_w                TYPE           sysubrc VALUE 2             ##needed,   "Warning
  ci_retval_e                TYPE           sysubrc VALUE 4             ##needed,   "Error
  ci_retval_x                TYPE           sysubrc VALUE 8             ##needed,   "Abort
  ci_retval_a                TYPE           sysubrc VALUE 9             ##needed.   "Dump

* ------------------------------
*   T Y P E S
* ------------------------------
* Типы для контролей и данных ALV-объектов
* -- ALV технические поля
TYPES:
  BEGIN OF t_alv_fcat_techfld,
    rowcolor(4)              TYPE           c         , " Entire row color field (Cxyz;x:1=gry-blu,2=l.gry,
                                                        "                 3=ylw,4=bl-grn,5=grn,6=red,7=orng)
    cellcolors               TYPE           lvc_t_scol, " Cells coloring table
    cellstyles               TYPE           lvc_t_styl, " Cells as pushbuttons(individual editions)
    sel(1)                   TYPE           c         , " Selected rows contain 'X'
    mark(1)                  TYPE           c         , " row marked for business process 'X'
  END   OF t_alv_fcat_techfld.

TYPES:
  BEGIN OF t_zmmcorr16_key,
*    MANDT                     TYPE          MANDT,
    bukrs	                   TYPE           bukrs,
    matnr	                   TYPE           matnr,
    spmon	                   TYPE           spmon,
  END   OF t_zmmcorr16_key,
  tt_zmmcorr16_key           TYPE STANDARD TABLE OF t_zmmcorr16_key
                              WITH NON-UNIQUE KEY primary_key COMPONENTS bukrs matnr spmon.

* BAPI interface 'BAPI_ACC_DOCUMENT_POST'
TYPES:
* -- Importing
  BEGIN OF t_bapi_accdocpost_i,
   s_documentheader	         TYPE           bapiache09,
   s_customercpd             TYPE           bapiacpa09,
   s_contractheader          TYPE           bapiaccahd,
  END   OF t_bapi_accdocpost_i,

* -- Exporting
  BEGIN OF t_imp_bapi_objky,
    awref                    TYPE           awref,  " Source document number
    aworg                    TYPE           aworg,  " Number range ID (if required)
  END   OF t_imp_bapi_objky,
  BEGIN OF t_bapi_accdocpost_e,
    obj_type                 TYPE           bapiache09-obj_type,
    obj_key	                 TYPE           bapiache09-obj_key ,
    obj_sys	                 TYPE           bapiache09-obj_sys ,
    doc                      TYPE           t_imp_bapi_objky   ,
  END   OF t_bapi_accdocpost_e,

* -- Tables
  BEGIN OF t_bapi_accdocpost_t,
    t_accountgl              TYPE           bapiacgl09_tab ,
    t_accountreceivable      TYPE           bapiacar09_tab ,
    t_accountpayable         TYPE           bapiacap09_tab ,
    t_accounttax             TYPE           bapiactx09_tab ,
    t_currencyamount         TYPE           bapiaccr09_tab ,
    t_criteria               TYPE           bapiackec9_tab ,
    t_valuefield             TYPE           bapiackev9_tab ,
    t_extension1             TYPE           bapiacextc_tab ,
    t_return                 TYPE           bapiret2_tab   ,
    t_paymentcard            TYPE           bapiacpc09_tab ,
    t_contractitem           TYPE           bapiaccait_tab ,
    t_extension2             TYPE           bapiparex_tab  ,
    t_realestate             TYPE           bapiacre09_tab ,
    t_accountwt              TYPE           bapiacwt09_tab ,
  END   OF t_bapi_accdocpost_t,
*
  BEGIN OF t_bapi_accdocpost_if,
    import                   TYPE          t_bapi_accdocpost_i,
    export                   TYPE          t_bapi_accdocpost_e,
    tables                   TYPE          t_bapi_accdocpost_t,
  END   OF t_bapi_accdocpost_if,
  tt_bapi_accdocpost_if      TYPE STANDARD TABLE OF   t_bapi_accdocpost_if  ##needed.
* ---- } RT0K915737.ERP-259
* ---- {  RT0K916109.RTKDEVSAP-33
TYPES:
  BEGIN OF t_bapi_accdocrevpost_i,
    s_reversal               TYPE           bapiacrev,
    bus_act                  TYPE           bapiache09-bus_act,
  END   OF t_bapi_accdocrevpost_i,

  BEGIN OF t_bapi_accdocrevpost_e,
    obj_type                 TYPE          bapiacrev-obj_type,
    obj_key	                 TYPE          bapiacrev-obj_key,
    obj_sys	                 TYPE          bapiacrev-obj_sys,
  END   OF t_bapi_accdocrevpost_e,

  BEGIN OF t_bapi_accdocrevpost_t,
    t_return                 TYPE           bapiret2_tab   ,
  END   OF t_bapi_accdocrevpost_t,

  BEGIN OF t_bapi_accdocrevpost_if,
    import                   TYPE          t_bapi_accdocrevpost_i  ,
    export                   TYPE          t_bapi_accdocrevpost_e  ,
    tables                   TYPE          t_bapi_accdocrevpost_t  ,
* ---- {  RT0K916368.RTKDEVSAP-33
*    s_db_corr16_key          TYPE          t_zmmcorr16_key         ,
* ----
    t_db_corr16_key          TYPE          tt_zmmcorr16_key        ,
* ---- }  RT0K916368.RTKDEVSAP-33
    belnr_kor16_st           TYPE          zmmcorr16-belnr_kor16_st,
    gjahr_kor16_st           TYPE          zmmcorr16-gjahr_kor16_st,
    monat_kor16_st           TYPE          zmmcorr16-monat_kor16_st,
  END   OF t_bapi_accdocrevpost_if,
  tt_bapi_accdocrevpost_if   TYPE STANDARD TABLE OF   t_bapi_accdocrevpost_if  ##needed.
* ---- }  RT0K916109.RTKDEVSAP-33

DATA:
       gs_fcat            TYPE slis_fieldcat_alv    ##NEEDED,
       gt_fcat            TYPE slis_t_fieldcat_alv  ##NEEDED,
       gs_layo            TYPE slis_layout_alv      ##NEEDED,
       gs_sort            TYPE slis_sortinfo_alv    ##NEEDED,
       gt_sort            TYPE slis_t_sortinfo_alv  ##NEEDED,
       sy_repid           LIKE sy-repid             ##NEEDED.

* ---- { RT0K915737.ERP-259
*DATA:  BEGIN OF gs_output,
*          stock_41 LIKE mseg-menge,
*          grs_41 LIKE mseg-menge,
*          gro_41 LIKE mseg-menge,
**          stock_16 LIKE mseg-menge,
*          gr_16 LIKE mseg-menge,
*          gi_9002 LIKE mseg-menge,
*          gi_900201 LIKE mseg-menge,
*          gi_900202 LIKE mseg-menge,
*          gi_9102 LIKE mseg-menge,
*          gi_94 LIKE mseg-menge,
*          koef_out(8) TYPE p DECIMALS 3.
**          gi_9002_16 LIKE mseg-menge,
**          gi_9102_16 LIKE mseg-menge,
**          gi_94_16 LIKE mseg-menge.
**          stock_16_fin   LIKE mseg-menge.
*        INCLUDE STRUCTURE zmmcorr16.
*DATA:    maktx  LIKE makt-maktx,
*         waers  LIKE mseg-waers,
*         name(100),
*         selected,
*         status(4),
*         warning(4),
*       END OF gs_output,
*
*       ls_output LIKE gs_output,
*       gt_output LIKE TABLE OF gs_output.
*
* ----
TYPES:
  BEGIN OF t_output,
    stock_41                 TYPE           mseg-menge  ,
    grs_41                   TYPE           mseg-menge  ,
    gro_41                   TYPE           mseg-menge  ,
*    stock_16                 TYPE           mseg-menge  ,
    gr_16                    TYPE           mseg-menge  ,
    gi_9002                  TYPE           mseg-menge  ,
    gi_900201                TYPE           mseg-menge  ,
    gi_900202                TYPE           mseg-menge  ,
    gi_9102                  TYPE           mseg-menge  ,
    gi_94                    TYPE           mseg-menge  ,
    koef_out(8)              TYPE           p DECIMALS 3.
*    gi_9002_16               TYPE           mseg-menge  ,
*    gi_9102_16               TYPE           mseg-menge  ,
*    gi_94_16                 TYPE           mseg-menge  ,
*    stock_16_fin             TYPE           mseg-menge  ,
INCLUDE                      TYPE           zmmcorr16   .
TYPES:
    maktx                    TYPE           makt-maktx  ,
    waers                    TYPE           mseg-waers  ,
    name(100)                TYPE           c           ,
    selected                 TYPE           c           ,
    status(4)                TYPE           c           ,
    warning(4)               TYPE           c           ,
  END   OF t_output,
  tt_output                  TYPE STANDARD TABLE OF   t_output.

* ------- ALV: Контроли -------------------------
TYPES:
  BEGIN OF t_ctrl_kor16,
    cell_mode(1)             TYPE           c              , " 'C' (Change)/ 'D' (Display)
    flg_pst_allow            TYPE           boole_d        , " Флаг разрешения создания документов
    flg_fld_changed          TYPE           boole_d        , " Флаг изменения данных в поле 'STOCK_16_FIN'
  END   OF t_ctrl_kor16,

  BEGIN OF t_ctrl_alv,
    r_alv                    TYPE REF TO    cl_gui_alv_grid,
    r_evthlr                 TYPE REF TO    cl_alv01_hdlr  ,
    t_fcat                   TYPE           lvc_t_fcat     ,
    t_fcat*                  TYPE           lvc_t_fcat     ,  " Current
    t_fcat_lst_dm*           TYPE           lvc_t_fcat     ,  " Lastest state in Display mode
    s_layo                   TYPE           lvc_s_layo     ,
    s_layo*                  TYPE           lvc_s_layo     ,
    t_sort                   TYPE           lvc_t_sort     ,
    flg_alv_changed          TYPE           boole_d        , "
    s_kor16                  TYPE           t_ctrl_kor16   , "  контроли управления по KOR16
  END   OF t_ctrl_alv,

* ------- ALV: Данные ---------------------------
  BEGIN OF t_data_alv.
INCLUDE                      TYPE           t_output         .
INCLUDE                      TYPE           t_alv_fcat_techfld.
TYPES:
  END   OF t_data_alv,
  tt_data_alv                TYPE STANDARD TABLE OF   t_data_alv.
*
* ----
DATA:
  ls_output                  TYPE           t_output       ##NEEDED,
  gs_output                  TYPE           t_output       ##NEEDED,
  gt_output                  TYPE           tt_output      ##NEEDED,
  gs_ctrl_alv                TYPE           t_ctrl_alv     ##NEEDED,
  gt_data_alv                TYPE           tt_data_alv    ##NEEDED.
DATA:
  gs_sort_lvc                TYPE           slis_sortinfo_alv        ##NEEDED,
  gt_sort_lvc                TYPE           slis_t_sortinfo_alv      ##NEEDED,
  lv_c_repid                 TYPE           syrepid                  ##NEEDED.
* ---- } RT0K915737.ERP-259

DATA:  gs_s031 LIKE s031                    ##NEEDED,
       gt_s031 LIKE TABLE OF gs_s031        ##NEEDED,

       BEGIN OF gs_mseg                     ##NEEDED,
         mblnr   LIKE mseg-mblnr,
         zeile   LIKE mseg-zeile, " по просьбе Зубова Николая
         matnr   LIKE mseg-matnr,
         bwart   LIKE mseg-bwart,
         shkzg   LIKE mseg-shkzg,
         werks   LIKE mseg-werks,
         umwrk   LIKE mseg-umwrk,
         bwmod   LIKE t001k-bwmod,
         bwmod_u LIKE t001k-bwmod,
         bsakz   LIKE ekko-bsakz,
         menge   LIKE mseg-menge,
         dmbtr   LIKE mseg-dmbtr,
         ummat   LIKE mseg-ummat,
         mvmtp16 LIKE zmm_mvtp_rasp16-mvmtp16,
         intr    LIKE zmm_mvtp_rasp16-intr,
         ebeln   TYPE ekko-ebeln,
       END OF gs_mseg,

       gt_mseg LIKE TABLE OF gs_mseg        ##NEEDED,

       BEGIN OF gs_t001k                    ##NEEDED,
         werks LIKE mseg-werks,
       END OF gs_t001k,

       gt_t001k LIKE TABLE OF gs_t001k      ##NEEDED,

       BEGIN OF gs_bonus                    ##NEEDED,
         matnr       LIKE zmmbonusp-matnr,
         lifnr       LIKE zmmbonush-lifnr,
         wrbtr_diff  LIKE zmmbonusp-wrbtr_diff,
         hkont       LIKE zmmbonush-hkont,
         monat       LIKE zmmbonush-monat,
         gjahr       LIKE zmmbonush-gjahr,
       END OF gs_bonus,

       gt_bonus LIKE TABLE OF gs_bonus      ##NEEDED,

       BEGIN OF gs_inforec                  ##NEEDED,
         matnr LIKE mara-matnr,
         lifnr LIKE lfa1-lifnr,
       END OF gs_inforec,

       gt_inforec LIKE TABLE OF gs_inforec  ##NEEDED,

       BEGIN OF gs_lifnr                    ##NEEDED,
         lifnr LIKE lfa1-lifnr,
       END OF gs_lifnr,

       gt_lifnr LIKE TABLE OF gs_lifnr      ##NEEDED,

       BEGIN OF gs_scr_0110                 ##NEEDED,
         mode(1) TYPE c ,                " 1 - запрос поставщика, 2 - сторнируемого документа
         lifnr LIKE lfa1-lifnr,
         belnr LIKE mseg-belnr,
         budat LIKE bkpf-budat,
         bldat LIKE bkpf-bldat,
         stgrd               TYPE           trls_reversal_reason-stgrd,   " ----   RT0K916270.RTKDEVSAP-33
         run_mode            TYPE           syucomm                   ,   " ----   RT0K916270.RTKDEVSAP-33
       END OF gs_scr_0110,

       gs_zmmcorr16 LIKE zmmcorr16                    ##NEEDED,
       gt_zmmcorr16 LIKE TABLE OF gs_zmmcorr16        ##NEEDED.

DATA:  l_error(1) TYPE c                    ##NEEDED,
       l_spmon TYPE spmon                   ##NEEDED,
       l_answer(1) TYPE c                   ##NEEDED,
       l_stroka(150) TYPE c                 ##NEEDED,
       ok_code LIKE sy-ucomm                ##NEEDED,
       l_tabix LIKE sy-tabix                ##NEEDED,
       ls_return LIKE bapiret2              ##NEEDED,
       gt_return TYPE TABLE OF bapiret2     ##NEEDED.

* ---- {  RT0K916270.RTKDEVSAP-33
DATA:
  lv_s_msgtxt*               TYPE           string    ##NEEDED.
* ---- }  RT0K916270.RTKDEVSAP-33

* ---- { RT0K915819.ERP-266
DATA:
  gv_c_single_lifnr          TYPE           lfa1-lifnr ##NEEDED.          " Поставщик
* ---- } RT0K915819.ERP-266

* ---- { RT0K917548.RTKDEVSAP-184
* Проверка типов движения в мастер-таблице T156
TYPES:
  BEGIN OF t_bwart_shkzg,
    bwart                    TYPE           bwart,
    shkzg                    TYPE           shkzg,
  END   OF t_bwart_shkzg,
  tt_bwart_shkzg             TYPE STANDARD TABLE OF   t_bwart_shkzg
                              WITH NON-UNIQUE KEY primary_key COMPONENTS bwart shkzg,
  BEGIN OF t_chkmvty_data_alv.
INCLUDE                      TYPE           t_bwart_shkzg     .
INCLUDE                      TYPE           t_alv_fcat_techfld.
TYPES:
  END   OF t_chkmvty_data_alv,
  tt_chkmvty_data_alv        TYPE STANDARD TABLE OF   t_chkmvty_data_alv
                              WITH NON-UNIQUE KEY primary_key COMPONENTS bwart shkzg,

  BEGIN OF t_chkmvty_ctrl_alv,
*      r_gui_cont             TYPE REF TO    cl_gui_container    ,
      r_alvgrid              TYPE REF TO    cl_gui_alv_grid     ,
      fcat_tabname           TYPE           tabname             ,
      t_fcat                 TYPE           lvc_t_fcat          ,  " Fieldcatalog
      s_layo                 TYPE           lvc_s_layo          ,  " Layout
      s_variant      	        TYPE 	        disvariant          ,  " параметр ФМ is_variant
      save(1)      	          TYPE 	        c                   ,  " параметр ФМ i_save
*      t_fcat_lbxddwn         TYPE           lvc_t_drop          ,  " ListBox DropDownTable
*      t_selrows              TYPE           lvc_t_roid          ,  " selected rows
*      t_events               TYPE           slis_t_event        ,  " events
*      t_evtexit              TYPE           slis_t_event_exit   ,  " Events exit-commands
*      t_tbar_excl            TYPE           ui_functions        ,  " Excluded tollbar
*      first(1)               TYPE           c                   ,  " 'X' = flag of first time Display
*      refresh_data(1)        TYPE           c                   ,  " 'X' = обновить данные в ALV
  END   OF t_chkmvty_ctrl_alv.

* ----
DATA:
  gv_c_start_allow_flg       TYPE           boole_d   ##NEEDED.          " Флаг разрешения запуска
DATA:
  gs_chkmvty_ctrl_alv        TYPE           t_chkmvty_ctrl_alv  ##NEEDED,
  gt_chkmvty_data_alv        TYPE           tt_chkmvty_data_alv ##NEEDED.

SELECTION-SCREEN: FUNCTION KEY 1.     " Кнопка проверки видов движения
* ---- } RT0K915819.ERP-266

* -----------------------------------------------
SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE text-h01.
PARAMETERS: p_bukrs LIKE t001-bukrs DEFAULT '1000' OBLIGATORY,
            p_spmon TYPE spmon OBLIGATORY.
SELECT-OPTIONS: so_bwmod FOR t001k-bwmod,
                so_lifnr FOR eina-lifnr,
                so_matnr FOR mara-matnr.
* ----- Begin block of changes <RT0K908345.SAPERP-130> ---------
*PARAMETERS: p_db RADIOBUTTON GROUP gr1 ,
PARAMETERS: p_db RADIOBUTTON GROUP gr1 USER-COMMAND rb_mode,
* ----- End block of changes <RT0K908345.SAPERP-130>   ---------
            p_save RADIOBUTTON GROUP gr1.
SELECTION-SCREEN END OF BLOCK b01.

* ----- Begin block of changes <RT0K908345.SAPERP-130> ---------
SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-h02.
PARAMETERS:
  p_bchsav                   TYPE           c AS CHECKBOX DEFAULT ''
                              MODIF ID bch.
* 01/06/20 otikhomirov for aermolenko  76076 Доработка программ ввода и расчета Ретро-бонусов
*PARAMETERS:
*  p_test                     TYPE           c AS CHECKBOX DEFAULT ''.
*                              MODIF ID bch.
SELECTION-SCREEN END OF BLOCK b02.
* ----- End block of changes <RT0K908345.SAPERP-130>   ---------
INCLUDE zvvv_messages   ##INCL_OK.
INCLUDE zbc_incl_macro  ##INCL_OK.

* ---- << RT0K915439.SAPERP-320
INCLUDE:
  zmm_uso_dms_aws_cls01        ##INCL_OK,
  zmm_exec_stock_for_prd_cl01  ##INCL_OK.
* ---- >> RT0K915439.SAPERP-320

*---------------------------------------------------------------- Macro
DATA mc_pos(3) TYPE n                       ##NEEDED.

DEFINE add_fcat   ##NEEDED.
  clear gs_fcat.
  gs_fcat-fieldname = &1.
  if gs_fcat-fieldname cs 'NETWR'.
    gs_fcat-datatype = 'CURR'.
  endif.
  gs_fcat-seltext_m = &2.
  gs_fcat-outputlen = &3.
  gs_fcat-cfieldname = &4.
  gs_fcat-no_zero = &5.
  gs_fcat-do_sum = &6.
  gs_fcat-key = &7.
  gs_fcat-edit_mask = &8.
  gs_fcat-no_out = &9.
  gs_fcat-ctabname = 'GT_OUTPUT'.
  if gs_fcat-fieldname = 'STATUS' or  gs_fcat-fieldname = 'WARNING'.
    gs_fcat-icon = 'X'.
  endif.
  append gs_fcat to gt_fcat.
END-OF-DEFINITION.

DEFINE add_sort     ##NEEDED.
  mc_pos = gs_sort-spos.
  clear: gs_sort.
  gs_sort-fieldname = &1.
  gs_sort-spos = mc_pos + 1.
  gs_sort-up = &2.
  gs_sort-subtot = &3.
  append gs_sort to gt_sort.
END-OF-DEFINITION.


*---------------------------------------------------------------------*
INITIALIZATION.
*---------------------------------------------------------------------*
  CLEAR so_bwmod[].
  APPEND 'IEQ1000' TO so_bwmod.
  APPEND 'IEQ2000' TO so_bwmod.
* --  { RT0K911559.SAPERP-225
*   APPEND 'IEQ3000' TO so_bwmod. " RT0K911431.SAPERP-225
* --  } RT0K911559.SAPERP-225

* --------{ RT0K917548.RTKDEVSAP-184
  PERFORM init_fkey.

  IMPORT start_allow_flag TO gv_c_start_allow_flg FROM MEMORY ID 'ZZC16N_STRALW'.
  IF gv_c_start_allow_flg = abap_false.
*    MESSAGE 'Перед началом работы отчета проведите Проверку Видов движения'(105)
*      TYPE cc_msgty_i  DISPLAY LIKE cc_msgty_w.
*
    CALL FUNCTION 'POPUP_TO_DISPLAY_TEXT'
      EXPORTING
        titel        = ' Attension'(114)
        textline1    = 'Перед началом работы отчета проведите Проверку Видов движения.'(105)
        textline2    = '(нажмите кнопку ПровВидДв)'(109)
        start_column = 25
        start_row    = 6.
  ENDIF.
* --------} RT0K917548.RTKDEVSAP-184

*---------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.
*---------------------------------------------------------------------*
* --------{ RT0K917548.RTKDEVSAP-184
* Изменение стандартного PF-STATUS в соотвествии результатами проверки Видов движения
  PERFORM chg_stndt_sspfsta
    USING gv_c_start_allow_flg.
* --------{ RT0K917548.RTKDEVSAP-184

  LOOP AT SCREEN.
* --------{ RT0K917548.RTKDEVSAP-184
    CASE gv_c_start_allow_flg.
      WHEN abap_false.            " проверка не проведена или отрицательный результат
        screen-active = 0.

      WHEN OTHERS.                " 'X' - проверка пройдена
        screen-active = 1.
* --------} RT0K917548.RTKDEVSAP-184

*    IF screen-name = 'SO_BWMOD-LOW' OR screen-name = 'SO_BWMOD-HIGH'.
*      screen-input = 0.
*    ENDIF.
* ----- Begin block of changes <RT0K908345.SAPERP-130> ---------
        IF screen-group1 = 'BCH'.
          IF      p_db    = 'X'.
            screen-active = 1.
          ELSEIF  p_save  = 'X'.
            screen-active = 0.
          ENDIF.
        ENDIF.
* ----- End block of changes <RT0K908345.SAPERP-130>   ---------
    ENDCASE.                                " ----  RT0K917548.RTKDEVSAP-184

    MODIFY SCREEN.
  ENDLOOP.

* --------{ RT0K917548.RTKDEVSAP-184
*---------------------------------------------------------------------*
AT SELECTION-SCREEN .
*---------------------------------------------------------------------*
  CASE sy-ucomm.
    WHEN 'FC01'.             " 'Проверка видов движения'
      PERFORM chk_movtypes
        USING    '1'                        " output result in ALV-Grid
        CHANGING gv_c_start_allow_flg
                 gs_chkmvty_ctrl_alv
                 gt_chkmvty_data_alv.
      EXPORT start_allow_flag FROM gv_c_start_allow_flg TO MEMORY ID 'ZZC16N_STRALW'.

    WHEN OTHERS.
*     <...do_nothing>
  ENDCASE.

*---------------------------------------------------------------------*
AT SELECTION-SCREEN ON EXIT-COMMAND.
*---------------------------------------------------------------------*
  FREE MEMORY ID 'ZZC16N_STRALW'.
* --------} RT0K917548.RTKDEVSAP-184

*---------------------------------------------------------------------*
START-OF-SELECTION.
*---------------------------------------------------------------------*
* ---- { RT0K915819.ERP-266
  PERFORM chk4single_supplier
    CHANGING gv_c_single_lifnr.
* ---- } RT0K915819.ERP-266

  PERFORM main_selection.

* ---- { RT0K915737.ERP-259
*  PERFORM output_list.
*
* ----
  PERFORM output_alv.
* ---- } RT0K915737.ERP-259

* ----- Begin block of changes <RT0K908349.SAPERP-130> ---------
*---------------------------------------------------------------------*
END-OF-SELECTION.
*---------------------------------------------------------------------*
  DATA:
    lv_i_retval                TYPE           i       ##NEEDED.

* -----------------------------------------------
*  Запуск сохранения ретрокоррекции при работе в фоновом режиме
  IF p_db = 'X' AND p_bchsav = 'X' AND sy-batch = 'X'.
    PERFORM save_data
      USING     'X'
                ''
      CHANGING  l_error. "в интерактивном режиме флаг не анализируется

    IF NOT gt_return[] IS INITIAL.
      PERFORM  msg_write_bapi_
        USING     gt_return[]
        CHANGING  lv_i_retval.
*      PERFORM  msg_write_bapi USING gt_return[].
      CASE lv_i_retval.
        WHEN 0 OR 1.
          FORMAT COLOR COL_POSITIVE.
          WRITE: / 'Сохранение распределения ретрокоррекции успешно завершено'(001).
        WHEN 2.
          FORMAT COLOR COL_TOTAL.
          WRITE: / 'При сохранении распределения ретрокоррекции возникли предупреждения'(003).
        WHEN 4 OR 8.
          FORMAT COLOR COL_NEGATIVE.
          WRITE: / 'При сохранении распределения ретрокоррекции возникли ошибки'(002).
      ENDCASE.
      FORMAT COLOR COL_NORMAL .
    ELSE.
*     Add    MESSAGE s139 to log. - как в интреактивном режиме
      _add_bapi_message gt_return 'S' '139' 'ZMM2'  '' '' '' ''.
      PERFORM  msg_write_bapi_
        USING     gt_return[]
        CHANGING  lv_i_retval.
      FORMAT COLOR COL_POSITIVE.
      WRITE: / 'Сохранение распределения ретрокоррекции успешно завершено'(001).
      FORMAT COLOR COL_NORMAL .
    ENDIF.
  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  msg_write_bapi
*&---------------------------------------------------------------------*
*   Вывод сообщений журнала в LIST при выполнении в фоновом режиме
*----------------------------------------------------------------------*
FORM msg_write_bapi_
  USING     it_api_msg         TYPE           api_msg_list
  CHANGING  ei_retval          TYPE           i.
* -----------------------------------------------
  DATA:
    ls_bapi_msg              TYPE           bapiret2,
    lv_s_msgtxt              TYPE           string.

* -----------------------------------------------
  CHECK sy-batch = 'X'.
  ei_retval = 0.
  LOOP AT it_api_msg INTO ls_bapi_msg.
    MESSAGE ID ls_bapi_msg-id TYPE ls_bapi_msg-type NUMBER ls_bapi_msg-number
      WITH  ls_bapi_msg-message_v1 ls_bapi_msg-message_v2 ls_bapi_msg-message_v3 ls_bapi_msg-message_v4
      INTO lv_s_msgtxt.
    CASE ls_bapi_msg-type.
      WHEN 'X' OR 'A'.
        IF ei_retval < 8.   ei_retval = 8. ENDIF.
        WRITE / '@0A@' AS ICON.
      WHEN 'E' .
        IF ei_retval < 4.   ei_retval = 4. ENDIF.
        WRITE / '@0A@' AS ICON.
      WHEN 'W' .
        IF ei_retval < 2.   ei_retval = 2. ENDIF.
        WRITE / '@09@' AS ICON.
      WHEN 'I' OR 'S'.
        IF ei_retval <= 1.  ei_retval = 1. ENDIF.
        WRITE / '@08@' AS ICON.
    ENDCASE.
    WRITE lv_s_msgtxt.
  ENDLOOP.

ENDFORM.                    "msg_write_bapi
* ----- End block of changes <RT0K908349.SAPERP-130>   ---------

*---------------------------------------------------------------- Forms

*---------------------------------------------------------------------*
*      Form  main_selection
*---------------------------------------------------------------------*
FORM main_selection .

  _show_statusbar_message '' 'Поиск данных...'(067).

  CLEAR: gt_output[], gr_budat[], gt_t001k, gt_inforec[], gt_lifnr[].

  gr_budat = 'IBT'.
  CONCATENATE p_spmon '01' INTO gr_budat-low.
* ---- {  RT0K916109.RTKDEVSAP-33
*  CALL FUNCTION 'LAST_DAY_OF_MONTHS'
*    EXPORTING
*      day_in            = gr_budat-low
*    IMPORTING
*      last_day_of_month = gr_budat-high
*    EXCEPTIONS
*      day_in_no_date    = 1
*      OTHERS            = 2.
** ---- { RT0K915737.ERP-259
*  IF sy-subrc <> 0.
*    MESSAGE e401(5d) WITH gr_budat-low.
*    STOP.
*  ENDIF.
* ---- } RT0K915737.ERP-259
*
* ----
  PERFORM get_last_day_of_period
    USING     p_spmon
    CHANGING  gr_budat-high.
* ---- }  RT0K916109.RTKDEVSAP-33
  APPEND gr_budat.

  SELECT bwkey AS werks
    INTO CORRESPONDING FIELDS OF TABLE gt_t001k
    FROM t001k
   WHERE bukrs = p_bukrs
     AND bwmod IN so_bwmod.

  IF sy-subrc <> 0.
    MESSAGE s024 WITH 'Данные не выбраны'(068).
    STOP.
  ENDIF.

  IF p_db = 'X'.

    CLEAR l_error.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_zmmcorr16
      FROM zmmcorr16
* ---{RT0K908517.ERP-36
*     WHERE w_stock_16_fin <> 0
*       AND spmon < p_spmon
     WHERE spmon < p_spmon
* ---}RT0K908517.ERP-36
       AND matnr IN so_matnr
       AND lifnr IN so_lifnr.

    SORT gt_zmmcorr16 BY matnr spmon DESCENDING.

    DO 1 TIMES.

      CHECK NOT gt_zmmcorr16[] IS INITIAL.

      LOOP AT gt_zmmcorr16 INTO gs_zmmcorr16 WHERE belnr_fi = ''.
        l_error = 'X'.
      ENDLOOP.

      CHECK l_error <> 'X'.

      l_error = 'X'.

      LOOP AT gt_zmmcorr16 INTO gs_zmmcorr16 WHERE NOT ( belnr_fi <> '' AND belnr_st <> '' ).
        CLEAR l_error.
      ENDLOOP.

    ENDDO.

    IF l_error = 'X'.
      MESSAGE s024 WITH 'Расчет ретрокоррекции за предыдущий период'(m06)
        'еще не завершен.'(m07) 'Начальное сальдо 16 счета не корректно'(m08).
      STOP.
    ENDIF.

* Достаем сальдо 16 по материалу на начало = сальдо на конец за прошлый период
    LOOP AT gt_zmmcorr16 INTO gs_zmmcorr16.
      AT NEW matnr.
        READ TABLE gt_zmmcorr16 INTO gs_zmmcorr16 INDEX sy-tabix.
        CLEAR gs_output.
        gs_output-matnr = gs_zmmcorr16-matnr.
*        gs_output-lifnr = gs_zmmcorr16-lifnr.
* ---- { RT0K915737.ERP-259
*     <<< таблица gt_zmmcorr16 неявно отсортирована по убыванию поля SPMON, т.о. при 'AT NEW matnr'
*         оказывается запись за предыдущий период >>>
*        gs_output-w_stock_16 = gs_zmmcorr16-w_stock_16_fin.
* ----
        IF ( NOT gs_zmmcorr16-belnr_kor16    IS INITIAL AND   " Ecть сумма и документ проводки - коррекция учитывыается
             NOT gs_zmmcorr16-gjahr_kor16    IS INITIAL ) AND
           (     gs_zmmcorr16-belnr_kor16_st IS INITIAL AND   " и нет документов сторно
                 gs_zmmcorr16-gjahr_kor16_st IS INITIAL ) .
          gs_output-w_stock_16 = gs_zmmcorr16-w_stock_16_fin - gs_zmmcorr16-stock_16_fin_kor.
        ELSE.
          gs_output-w_stock_16 = gs_zmmcorr16-w_stock_16_fin.
        ENDIF.
* ---- } RT0K915737.ERP-259

        COLLECT gs_output INTO gt_output.
      ENDAT.
    ENDLOOP.

    SELECT matnr wrbtr_diff hkont lifnr     ##TOO_MANY_ITAB_FIELDS
      INTO CORRESPONDING FIELDS OF TABLE gt_bonus
      FROM zmmbonush
      JOIN zmmbonusp
        ON zmmbonusp~docnum = zmmbonush~docnum
     WHERE bukrs = p_bukrs
       AND monat = p_spmon+4(2)
       AND gjahr = p_spmon(4)
       AND status = 'P'
       AND matnr IN so_matnr
       AND lifnr IN so_lifnr.

* Собираем связки материал-поставщик
    LOOP AT gt_bonus INTO gs_bonus.
      gs_inforec-matnr = gs_bonus-matnr.
      gs_inforec-lifnr = gs_bonus-lifnr.
      COLLECT gs_inforec INTO gt_inforec.
    ENDLOOP.
    LOOP AT gt_zmmcorr16 INTO gs_zmmcorr16.
      gs_inforec-matnr = gs_zmmcorr16-matnr.
      gs_inforec-lifnr = gs_zmmcorr16-lifnr.
      COLLECT gs_inforec INTO gt_inforec.
    ENDLOOP.

* Проверка что один материал связан только с одним поставщиком
    SORT gt_inforec.
    LOOP AT gt_inforec INTO  gs_inforec.
      AT NEW matnr.
        CONTINUE.
      ENDAT.
      MESSAGE s144 WITH  gs_inforec-matnr.
      STOP.
    ENDLOOP.

    LOOP AT gt_bonus INTO gs_bonus.
      CLEAR gs_output.
      MOVE-CORRESPONDING gs_bonus TO gs_output.             "#EC ENHOK
      gs_output-w_gr_16 = gs_bonus-wrbtr_diff.
      CLEAR gs_output-lifnr. " для того чтобы коллекты ниже работали с одной и той же строчкой по материалу
      COLLECT gs_output INTO gt_output.
    ENDLOOP.

    IF gt_output[] IS INITIAL.
      RETURN.       " ----  RT0K915737.ERP-259 --{ EXIT.
    ENDIF.

    CLEAR gr_matnr[].
    LOOP AT gt_output INTO gs_output.
      gr_matnr = 'IEQ'.
      gr_matnr-low = gs_output-matnr.
      APPEND gr_matnr.
    ENDLOOP.

    PERFORM get_mseg_data TABLES gt_mseg.

    CLEAR gt_return[].

    DELETE gt_mseg WHERE bwmod NOT IN so_bwmod.

    LOOP AT gt_mseg INTO gs_mseg
    WHERE werks <> ''
      AND umwrk <> ''
      AND bwmod IN so_bwmod
      AND bwmod_u IN so_bwmod.
      CHECK gs_mseg-matnr = gs_mseg-ummat.
      CHECK gs_mseg-intr = 'X'.
      DELETE gt_mseg.
    ENDLOOP.

    DELETE gt_mseg
     WHERE mvmtp16 = 'GRS' AND bsakz = 'T'.

    LOOP AT gt_mseg INTO gs_mseg.
      CLEAR gs_output.
      IF gs_mseg-shkzg = 'H'.
        gs_mseg-menge = - gs_mseg-menge.
      ENDIF.
      IF gs_mseg-mvmtp16(1) = '9'.
        gs_mseg-menge = - gs_mseg-menge.
      ENDIF.
      IF gs_mseg-menge < 0.
        gs_mseg-dmbtr = - gs_mseg-dmbtr.
      ENDIF.
      MOVE-CORRESPONDING gs_mseg TO gs_output.              "#EC ENHOK
      CASE gs_mseg-mvmtp16.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
        WHEN '9022'.
          ADD gs_mseg-menge TO gs_output-gi_900202.
          ADD gs_mseg-dmbtr TO gs_output-w_gi_900202.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
        WHEN 'GRS'.
          ADD gs_mseg-menge TO gs_output-grs_41.
          ADD gs_mseg-dmbtr TO gs_output-w_grs_41.
        WHEN 'GRO'.
          ADD gs_mseg-menge TO gs_output-gro_41.
          ADD gs_mseg-dmbtr TO gs_output-w_gro_41.
        WHEN '902'.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*          ADD gs_mseg-menge TO gs_output-gi_9002.
*          ADD gs_mseg-dmbtr TO gs_output-w_gi_9002.
          ADD gs_mseg-menge TO gs_output-gi_900201.
          ADD gs_mseg-dmbtr TO gs_output-w_gi_900201.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
        WHEN '912'.
          ADD gs_mseg-menge TO gs_output-gi_9102.
          ADD gs_mseg-dmbtr TO gs_output-w_gi_9102.
        WHEN '94'.
          ADD gs_mseg-menge TO gs_output-gi_94.
          ADD gs_mseg-dmbtr TO gs_output-w_gi_94.
        WHEN 'N'.
          CONTINUE.
        WHEN ''.
          l_error = 'X'.
          _add_bapi_message gt_return 'E' '134' 'ZMM2' gs_mseg-bwart gs_mseg-shkzg '' ''.
          CONTINUE.
      ENDCASE.
      COLLECT gs_output INTO gt_output.
    ENDLOOP.

    IF NOT gt_return[] IS INITIAL.
      SORT gt_return.
      DELETE ADJACENT DUPLICATES FROM gt_return.
      PERFORM msg_show_bapi USING gt_return.
      STOP.
    ENDIF.

    SELECT * FROM s031
      INTO CORRESPONDING FIELDS OF TABLE gt_s031
      FOR ALL ENTRIES IN gt_t001k
     WHERE matnr IN gr_matnr
       AND spmon < p_spmon
       AND werks = gt_t001k-werks.

    LOOP AT gt_s031 INTO gs_s031.
      CLEAR gs_output.
      gs_output-matnr = gs_s031-matnr.
      IF gs_s031-spmon < p_spmon.
        gs_output-stock_41 = gs_s031-mzubb - gs_s031-magbb.
        gs_output-w_stock_41 = gs_s031-wzubb - gs_s031-wagbb.
      ELSE.
        gs_output-stock_41 = gs_s031-mzubb - gs_s031-magbb.
        gs_output-w_stock_41 = gs_s031-wzubb - gs_s031-wagbb.
      ENDIF.
      COLLECT gs_output INTO gt_output.
    ENDLOOP.

    LOOP AT gt_output INTO gs_output.
*Коэф
      gs_output-koef = gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41.
      IF gs_output-koef <> 0.
        gs_output-koef = (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) / (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
      ENDIF.
*      gs_output-gi_9002_16 = gs_output-gi_9002 * (  gs_output-stock_16 +  gs_output-gr_16 ) / (  gs_output-stock_41 +  gs_output-grs_41 +  gs_output-gro_41 ).
*      gs_output-gi_9102_16 = gs_output-gi_9102 *  (  gs_output-stock_16 +  gs_output-gr_16 ) / (  gs_output-stock_41 +  gs_output-grs_41 +  gs_output-gro_41 ).
*      gs_output-gi_94_16 = gs_output-gi_94 * (  gs_output-stock_16 +  gs_output-gr_16 ) / (  gs_output-stock_41 +  gs_output-grs_41 +  gs_output-gro_41 ).
*      gs_output-stock_16_fin = ( gs_output-stock_16 + gs_output-gr_16 ) -
*        ( gs_output-gi_9002_16 + gs_output-gi_9102_16 + gs_output-gi_94_16 ).

*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      gs_output-w_gi_9002 = gs_output-w_gi_900201 + gs_output-w_gi_900202.  " !!!
      IF (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ) NE 0.
        gs_output-w_gi_9002_16 = gs_output-w_gi_9002 * (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
          (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
      ENDIF.
      gs_output-gi_9002 = gs_output-gi_900201 + gs_output-gi_900202.
      IF (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ) NE 0.
        gs_output-w_gi_900202_16 = gs_output-w_gi_900202 * (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
          (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
        gs_output-w_gi_900201_16 = gs_output-w_gi_900201 * (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
          (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
        gs_output-w_gi_9102_16 = gs_output-w_gi_9102 *  (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
         (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
        gs_output-w_gi_94_16 = gs_output-w_gi_94 * (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
          (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
      ENDIF.
*      gs_output-w_gi_9102_16 = gs_output-w_gi_9102 *  (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
*       (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
*      gs_output-w_gi_94_16 = gs_output-w_gi_94 * (  gs_output-w_stock_16 +  gs_output-w_gr_16 ) /
*        (  gs_output-w_stock_41 +  gs_output-w_grs_41 +  gs_output-w_gro_41 ).
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002

*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*      gs_output-w_stock_16_fin = ( gs_output-w_stock_16 + gs_output-w_gr_16 ) -
*        ( gs_output-w_gi_9002_16 + gs_output-w_gi_9102_16 + gs_output-w_gi_94_16 ).
      gs_output-w_stock_16_fin = ( gs_output-w_stock_16 + gs_output-w_gr_16 ) -
        ( gs_output-w_gi_900201_16 + gs_output-w_gi_900202_16 + gs_output-w_gi_9102_16 + gs_output-w_gi_94_16 ).
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002

* подтягиваем поставщика
      READ TABLE gt_inforec INTO gs_inforec WITH KEY matnr = gs_output-matnr.
      IF sy-subrc = 0.
        gs_output-lifnr = gs_inforec-lifnr.
      ENDIF.

      MODIFY gt_output FROM gs_output.

    ENDLOOP.

  ELSEIF p_save = 'X'.

    SELECT *                                ##TOO_MANY_ITAB_FIELDS
      INTO CORRESPONDING FIELDS OF TABLE gt_output
      FROM zmmcorr16
     WHERE spmon = p_spmon
       AND bukrs = p_bukrs
       AND matnr IN so_matnr.

    LOOP AT gt_output INTO gs_output.
      MOVE-CORRESPONDING gs_output TO gs_inforec.
      COLLECT gs_inforec INTO gt_inforec.
    ENDLOOP.

  ENDIF.

  DELETE gt_output WHERE NOT lifnr IN so_lifnr.

* Дообработка выбранных данных
  IF lines( gt_output ) = 0.
    MESSAGE s024(zmm2) WITH 'Не было выбрано данных'(069).
    STOP.
  ENDIF.

  SORT gt_inforec.
  LOOP AT gt_inforec INTO gs_inforec.
    gs_lifnr-lifnr = gs_inforec-lifnr.
    COLLECT gs_lifnr INTO gt_lifnr.
  ENDLOOP.

  LOOP AT gt_output INTO gs_output.
    SELECT SINGLE maktx
      INTO gs_output-maktx
      FROM makt
     WHERE matnr = gs_output-matnr
       AND spras = sy-langu.
    SELECT SINGLE *
      FROM lfa1
     WHERE lifnr = gs_output-lifnr.
    IF sy-subrc = 0.
      CONCATENATE lfa1-name1 lfa1-name2 lfa1-name3 lfa1-name4 INTO gs_output-name.
    ENDIF.
    gs_output-koef_out = gs_output-koef.
    MODIFY gt_output FROM gs_output.
  ENDLOOP.

  PERFORM set_info_status.        " Обновление данных в GT_OUTPUT[]

ENDFORM.                    " process_data

* ---- { RT0K915737.ERP-259
**---------------------------------------------------------------------*
**      Form  output_list
**---------------------------------------------------------------------*
*FORM output_list .
*
*  _show_statusbar_message '' 'Формирование вывода...'(016).
*  CLEAR: gt_sort[], gt_fcat[], gs_layo.
*  sy_repid = sy-repid.
*
*  add_fcat 'STATUS'       'Стс'                       '4'  ''  ''  ''   'X'  '' ''.
*  add_fcat 'WARNING'      'Рсх'                       '4'  ''  ''  ''   'X'  '' ''.
*  add_fcat 'MATNR'        'Артикул'                   '12'  ''  ''  ''   'X'  '' ''.
*  add_fcat 'MAKTX'        'КраткийТекс'               '40'  ''  ''  ''   'X'  '' ''.
*  add_fcat 'LIFNR'        'Поставщик'                 '10'  ''  ''  ''   ''  '' ''.
*  add_fcat 'NAME'         'Имя'                       '20'  ''  ''  ''   ''  '' ''.
*  add_fcat 'STOCK_41'     'ОстНачПер41'               '17'  ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'GRS_41'       'ПостОтПствщ41'             '17'  ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'GRO_41'       'ПрочПоступ41'              '13'  ''  'X'  'X'   ''  '' 'X'.
**  add_fcat 'STOCK_16'     'ОстНачПер16'               '13'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'GR_16'        'ПостЗаПер16'               '17'  ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'GI_9002'      'Спис9002'                  '17'  ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'GI_9102'      'Спис9102'                  '17'  ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'GI_94'        'Спис94'                    '17'  ''  'X'  'X'   ''  '' 'X'.
**  add_fcat 'GI_9002_16'   'СписОткл9002'              '13'  ''  'X'  'X'   ''  '' ''.
**  add_fcat 'GI_9102_16'   'СписОткл9102'              '13'  ''  'X'  'X'   ''  '' ''.
**  add_fcat 'GI_94_16'     'СписОткл94'                '13'  ''  'X'  'X'   ''  '' ''.
**  add_fcat 'STOCK_16_FIN' 'ОстКонПер16'               '13'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_STOCK_41'   'СумОстНачПер41'             '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GRS_41'     'СумПостОтПствщ41'           '18'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GRO_41'     'СумПрочПоступ41'            '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_STOCK_16'   'СумОстНачПер16'             '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GR_16'      'СумПостЗаПер16'             '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'KOEF_OUT'     'Коэф'                       '17'  ''  ''  ''   ''  '' ''.
**--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*  add_fcat 'W_GI_9002'    'СумСписТов9002'             '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_900201'    'СумСписТов900201'             '19'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_900202'    'СумСписТов900202'             '19'  ''  'X'  'X'   ''  '' ''.
**--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*  add_fcat 'W_GI_9102'    'СумСписТовара9102'          '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_94'      'СумСписТовара94'            '17'  ''  'X'  'X'   ''  '' ''.
**--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*  add_fcat 'W_GI_9002_16' 'СумСписОткл9002'            '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_900201_16' 'СумСписОткл900201'            '19'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_900202_16' 'СумСписОткл900202'            '19'  ''  'X'  'X'   ''  '' ''.
**--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*  add_fcat 'W_GI_9102_16' 'СумСписОткл9102'            '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_GI_94_16'   'СумСписОткл94'              '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'W_STOCK_16_FIN' 'СумОстКонПер16'           '17'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'BELNR_FI'     'Проводка16/9*'              '12'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'GJAHR_FI'     'ГдДкм'                      '5'   ''  'X'  'X'   ''  '' 'X'.
*  add_fcat 'BELNR_ST'     'Сторно16/9*'                '12'  ''  'X'  'X'   ''  '' ''.
*  add_fcat 'GJAHR_ST'     'ГдСтрн'                     '5'   ''  'X'  'X'   ''  '' 'X'.
*
** Настройки грида
*  gs_layo-zebra = 'X'.
*  gs_layo-totals_before_items = 'X'.
*  gs_layo-box_fieldname = 'SELECTED'.
*
** Настраиваем сортировку с группировкой
*  add_sort 'MATNR'      'X' ''.
*
*  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
*    EXPORTING
*      i_callback_program       = sy_repid
*      i_callback_pf_status_set = 'PF_STATUS_SET'
*      i_callback_user_command  = 'USER_COMMAND'
*      is_layout                = gs_layo
*      it_fieldcat              = gt_fcat[]
*      it_sort                  = gt_sort[]
*      i_save                   = 'A'
*    TABLES
*      t_outtab                 = gt_output[]
*    EXCEPTIONS
*      program_error            = 1
*      OTHERS                   = 2.
*
*ENDFORM.                    " outpuit_data
* ---- } RT0K915737.ERP-259

*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM pf_status_set  USING pt_extab TYPE kkblo_t_extab  ##CALLED.

* ---- { RT0K915737.ERP-259
*
*------------------------------------------------
* Получение ссылки на объект ALV
  IF gs_ctrl_alv-r_alv IS INITIAL.
    CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
      IMPORTING
        e_grid = gs_ctrl_alv-r_alv.

    IF gs_ctrl_alv-r_evthlr IS INITIAL AND NOT gs_ctrl_alv-r_alv IS INITIAL.
      CREATE OBJECT gs_ctrl_alv-r_evthlr.
* SET Handler for ALV Events
      SET HANDLER:       " ALV11 для режима формирования ГМ с остатками
             gs_ctrl_alv-r_evthlr->ehalv_cntxtmnureq FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_dblclick    FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_ucomm       FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_tbar        FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_tpage       FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_btnclck     FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_hsptclck    FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_dtachg      FOR gs_ctrl_alv-r_alv,
             gs_ctrl_alv-r_evthlr->ehalv_dtachgfin   FOR gs_ctrl_alv-r_alv.
    ENDIF.

* событие handle_data_changed и handle_top_of_page будут генерироваться при изменении содержимого ячейки
    gs_ctrl_alv-r_alv->register_edit_event(
          EXPORTING i_event_id = cl_gui_alv_grid=>mc_evt_modified ).
* событие handle_top_of_page будет гененрироваться при нажатии Enter
    gs_ctrl_alv-r_alv->register_edit_event(
          EXPORTING   i_event_id = cl_gui_alv_grid=>mc_evt_enter ).
  ENDIF.

* При нажатии на Изм/Просм.Корр16 - смена режима ALV
  DO 1 TIMES.
    CHECK NOT gs_ctrl_alv-r_alv IS INITIAL.
    CHECK sy-ucomm = cc_fc_chgkor16.

    PERFORM trgr_alv_kor16_mode
      CHANGING  gs_ctrl_alv.
  ENDDO.

* ---- { RT0K915819.ERP-266
*  Вывод Кнопок отв.за проводку в зависимости от условий
* -- Если НЕ единствкнный поставщик - кнопки недоступны
  IF gv_c_single_lifnr IS INITIAL.
    APPEND:
      'POST'          TO pt_extab,
      'SAVE'          TO pt_extab,
      'STORNO'        TO pt_extab,
      cc_fc_chgkor16  TO pt_extab,
      cc_fc_savkor16  TO pt_extab,
      cc_fc_postkor16 TO pt_extab,
      cc_fc_strnkor16 TO pt_extab.

  ELSE.
* ---- } RT0K915819.ERP-266
*  Вывод Кнопок семейства *Kорр16 в зависимости от условий
    CASE abap_true.
      WHEN p_db.
        APPEND:
          cc_fc_chgkor16  TO pt_extab,
          cc_fc_savkor16  TO pt_extab,
          cc_fc_postkor16 TO pt_extab.
        APPEND cc_fc_strnkor16 TO pt_extab.                     " -- Кнопка 'Сторно Док.корр.16'    " ----   RT0K916109.RTKDEVSAP-33

      WHEN p_save.
        IF gs_ctrl_alv-s_kor16-cell_mode = cc_cell_mode_chg.          " (C)hange  [cc_cell_mode_chg]
          APPEND  cc_fc_postkor16 TO pt_extab.                  " -- Кнопка Post Korr16 - НЕ активна
          APPEND cc_fc_strnkor16 TO pt_extab.                   " -- Кнопка 'Сторно Док.корр.16'    " ----   RT0K916109.RTKDEVSAP-33

          IF  gs_ctrl_alv-s_kor16-flg_fld_changed = abap_false. " Данные в поле ALV STOCK_16_FIN НЕ измененялись
            APPEND cc_fc_savkor16 TO pt_extab.                  " -- Кнопка Save Korr16 - НЕ актина
          ENDIF.

        ELSE.                                                         " (D)isplay [cc_cell_mode_dsp]
          APPEND cc_fc_savkor16 TO pt_extab.                    " -- Кнопка Save Korr16 - НЕ актина

          IF gs_ctrl_alv-s_kor16-flg_pst_allow = abap_false.    " не было сохранения значений поля STOCK_16_FIN
            APPEND  cc_fc_postkor16 TO pt_extab.                " -- Кнопка Post Korr16 - НЕ активна
          ENDIF.
        ENDIF.
    ENDCASE.
  ENDIF.                                              " ----  RT0K915819.ERP-266
* ---- } RT0K915737.ERP-259

  IF p_save = 'X'.
    APPEND 'SAVE' TO pt_extab.
  ENDIF.
  SET PF-STATUS 'MAIN' EXCLUDING pt_extab.

ENDFORM.                    "PF_STATUS_SET

*---------------------------------------------------------------------*
*      Form  user_command
*---------------------------------------------------------------------*
FORM user_command                  ##CALLED
  USING
    p_comm                   TYPE           c
    p_wa                     TYPE           slis_selfield.

* ---- { RT0K915737.ERP-259
* -----------------------------------------------
  DATA:
    lv_c_refresh_alv         TYPE           boole_d   ,
    ls_stable                TYPE           lvc_s_stbl.
* ---- } RT0K915737.ERP-259

* ---- {  RT0K916109.RTKDEVSAP-33
  DATA:
    ls_output                TYPE           t_output.
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- { RT0K915737.ERP-259
* -----------------------------------------------
* Синхронизация табл.ALV -> табл.OUT
  PERFORM convtb_alv2out
    USING     gt_data_alv
    CHANGING  gt_output[].

*  PERFORM set_info_status.   " ----  RT0K915931.ERP-259
* ---- } RT0K915737.ERP-259

  DO 1 TIMES.                               " ---- RT0K915737.ERP-259
    IF p_comm = '&IC1'.
      READ TABLE gt_output[] INTO ls_output INDEX p_wa-tabindex.      " ----   RT0K916109.RTKDEVSAP-33

      CASE p_wa-fieldname.
        WHEN 'VBELN'.
          SET PARAMETER ID 'VF' FIELD p_wa-value.
          CALL TRANSACTION 'VF03' AND SKIP FIRST SCREEN.
* ---- {  RT0K916109.RTKDEVSAP-33
        WHEN 'BELNR_FI' OR
             'GJAHR_FI'.
          SET PARAMETER ID:
            'BUK' FIELD p_bukrs           ,
            'BLN' FIELD ls_output-belnr_fi,
            'GJR' FIELD ls_output-gjahr_fi.
          CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

        WHEN 'BELNR_ST' OR
             'GJAHR_ST' OR 'MONAT_ST'.
          SET PARAMETER ID:
            'BUK' FIELD p_bukrs,
            'BLN' FIELD ls_output-belnr_st,
            'GJR' FIELD ls_output-gjahr_st.
          CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

        WHEN 'BELNR_KOR16' OR
             'GJAHR_KOR16' OR 'MONAT_KOR16'.
          SET PARAMETER ID:
            'BUK' FIELD p_bukrs              ,
            'BLN' FIELD ls_output-belnr_kor16,
            'GJR' FIELD ls_output-gjahr_kor16.
          CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.

        WHEN 'BELNR_KOR16_ST' OR
             'GJAHR_KOR16_ST'.
          SET PARAMETER ID:
            'BUK' FIELD p_bukrs                 ,
            'BLN' FIELD ls_output-belnr_kor16_st,
            'GJR' FIELD ls_output-gjahr_kor16_st.
          CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
* ---- }  RT0K916109.RTKDEVSAP-33
      ENDCASE.

    ELSEIF p_comm = 'POST'.
      _call_popup_dialog 'Предупреждение'(050) 'Провести распределение ретрокоррекции?'(057)
        'Да'(052) 'Нет'(053) '2' '' l_answer.
      CHECK l_answer = '1'.
      PERFORM post_data.
      p_wa-refresh = 'X'.
      PERFORM set_info_status.              " Обновление данных в GT_OUTPUT[]

    ELSEIF p_comm = 'SAVE'.
      _call_popup_dialog 'Предупреждение'(050) 'Сохранить распределение ретрокоррекции?'(056)
        'Да'(052) 'Нет'(053) '2' '' l_answer.
      CHECK l_answer = '1'.
      CLEAR gt_return[].
      PERFORM save_data USING 'X' '' CHANGING l_error.
      IF NOT gt_return[] IS INITIAL.
        PERFORM msg_show_bapi USING gt_return[].
      ELSE.
        MESSAGE s139
          WITH p_spmon 	space.  "  ----  RT0K915737.ERP-259
      ENDIF.
      PERFORM set_info_status.              " Обновление данных в GT_OUTPUT[]

    ELSEIF p_comm = 'STORNO'.
      _call_popup_dialog  'Предупреждение'(050) 'Сторнировать распределение ретрокоррекции?'(055)
        'Да'(052) 'Нет'(053) '2' '' l_answer.
      CHECK l_answer = '1'.
      PERFORM cancel_posting CHANGING l_error.
      IF l_error = ''.
        MESSAGE s140.
        p_wa-refresh = 'X'.
      ENDIF.
      PERFORM set_info_status.              " Обновление данных в GT_OUTPUT[]

    ELSEIF p_comm = 'PRINT_REP'.
      PERFORM output_excel.

* ---- { RT0K915737.ERP-259
*  Переключение между режимом Display/ Change (STOCK_16_FIN)
* -----------------------------------------------
    ELSEIF p_comm = cc_fc_chgkor16.
      CASE gs_ctrl_alv-s_kor16-cell_mode.
        WHEN cc_cell_mode_chg.                          " (C)hange [Change -> Display]
          gs_ctrl_alv-s_kor16-cell_mode = cc_cell_mode_dsp.

        WHEN OTHERS.                                    " (D)isplay [Display -> Change]
* -- сохранение последнего Field Catalog при смене режима Display -> Change
*    (для восcтановления режимов [колонки суммир., ...] для обраб-ки при обратном переключении в Display mode)
          gs_ctrl_alv-r_alv->get_frontend_fieldcatalog(
            IMPORTING et_fieldcatalog = gs_ctrl_alv-t_fcat_lst_dm* ).

          gs_ctrl_alv-s_kor16-cell_mode = cc_cell_mode_chg.
      ENDCASE.
*      p_wa-refresh = abap_true.

* Изменение значений поля 'STOCK_16_FIN_KOR'
* -----------------------------------------------
    ELSEIF p_comm = 'SAVE_KOR16'.
      IF  gs_ctrl_alv-s_kor16-flg_fld_changed = abap_false.    " проверка флага: Данные изменены
        MESSAGE text-m05          " 'Сохранение ручных корректировок исходящего сальдо по сч.16 НЕ требуется'
          TYPE 'I' DISPLAY LIKE 'W'.
        EXIT.
      ENDIF.

      _call_popup_dialog 'Предупреждение'(050) 'Сохранить ручные значения корректировок исходящего сальдо по сч.16?'(066)
        'Да'(052) 'Нет'(053) '2' '' l_answer.
      CHECK l_answer = '1'.

      PERFORM save_kor16_val
        USING     gt_output[]
                  abap_true                 " Commit - Yes
                  abap_false                " All types messages are journalied - No (only W,E and higher)
        CHANGING  l_error
                  gt_return[].
      IF lines( gt_return[] ) > 0.
        PERFORM msg_show_bapi USING gt_return[].
      ENDIF.
      IF l_error = abap_true.
        MESSAGE text-m01          " 'Ошибки при сохранении ручных корректировок исходящего сальдо по сч.16'
          TYPE 'S' DISPLAY LIKE 'E'.
        EXIT.
      ELSE.
        gs_ctrl_alv-s_kor16-flg_fld_changed = abap_false.    " сброс флага: Данные изменены
        gs_ctrl_alv-s_kor16-flg_pst_allow   = abap_true.     " установка флага: разрешено создание док-тов KOR16
        MESSAGE text-m02          " 'Значения ручных корректировок исходящего сальдо по сч.16 успешно сохранены'
          TYPE 'S'.
      ENDIF.
* ---- { RT0K915931.ERP-259
*      p_wa-refresh = abap_true.             " ----  RT0K915929.ERP-259
* ----
      lv_c_refresh_alv = abap_true.
* ---- } RT0K915931.ERP-259

* Создание документов по значениям из 'STOCK_16_FIN_KOR'
* -----------------------------------------------
    ELSEIF p_comm = cc_fc_postkor16.
      gs_ctrl_alv-s_kor16-flg_pst_allow   = abap_true.     " проверка флага: разрешено создание док-тов KOR16
      _call_popup_dialog 'Предупреждение'(050) 'Вы действительно хотите сделать проводку коррекции сальдо 16 сч?'(051)
            'Да'(052) 'Нет'(053) '2' '' l_answer.
      CHECK l_answer = '1'.

      PERFORM post_kor16_docs
        USING   gt_output[]
                abap_true                 " Commit - Yes
       CHANGING l_error
                gt_return[].
      IF NOT gt_return[] IS INITIAL.
        PERFORM msg_show_bapi USING gt_return[].
      ENDIF.
      IF l_error = abap_true.
        MESSAGE text-m03          " 'Ошибка создания документов ручных корректировок исходящего сальдо по сч.16'
          TYPE 'S' DISPLAY LIKE 'E'.
        EXIT.
      ELSE.
        gs_ctrl_alv-s_kor16-flg_fld_changed = abap_false.    " сброс флага: Данные изменены
        gs_ctrl_alv-s_kor16-flg_pst_allow   = abap_false.    " сброс флага: разрешено создание док-тов KOR16
        MESSAGE text-m04          " 'Документы по корректировке остатков на начало месяца успешно созданы'
          TYPE 'S'.
      ENDIF.
      PERFORM set_info_status.    " Обновление данных в GT_OUTPUT[]
* ---- { RT0K915931.ERP-259
*      p_wa-refresh = abap_true.             " ----  RT0K915929.ERP-259
* ----
      lv_c_refresh_alv = abap_true.
* ---- } RT0K915931.ERP-259
* ---- } RT0K915737.ERP-259

* ---- {  RT0K916109.RTKDEVSAP-33
*  Сторно документов по корректировке (STOCK_16_FIN)
* -----------------------------------------------
    ELSEIF p_comm = cc_fc_strnkor16.
      CASE gs_ctrl_alv-s_kor16-cell_mode.
        WHEN cc_cell_mode_chg.                          " (C)hange [Change -> Display]
          RETURN.

        WHEN OTHERS.                                    " (D)isplay [Display -> Change]
* ---- {  RT0K916270.RTKDEVSAP-33
          _call_popup_dialog 'Предупреждение'(050) 'Вы действительно хотите сторнировать проводку коррекции сальдо 16 сч?'(090)
            'Да'(052) 'Нет'(053) '2' '' l_answer.
          CHECK l_answer = '1'.
* ---- }  RT0K916270.RTKDEVSAP-33

          PERFORM cancel_posting_kor16_docs
            USING   abap_true                 " Commit - Yes
           CHANGING gt_output[]
                    gs_ctrl_alv               " ALV
                    l_error
                    lv_s_msgtxt*              " ----   RT0K916270.RTKDEVSAP-33
                    gt_return[].
          IF NOT gt_return[] IS INITIAL.
            PERFORM msg_show_bapi USING gt_return[].
          ENDIF.

* -- формирование текста вых.сообщения
          IF lv_s_msgtxt* IS INITIAL.
            IF l_error = abap_true.
              lv_s_msgtxt* = text-m10.           " 'Ошибка сторнирования документов ручных корректировок исходящего сальдо по сч.16'
            ELSE.
              lv_s_msgtxt* = text-m11.           " 'Сторнировнание документов корректировки остатков на начало месяца выполнено успешно'
            ENDIF.
          ENDIF.

          IF l_error = abap_true.
            MESSAGE lv_s_msgtxt*  TYPE 'S' DISPLAY LIKE 'E'.
            EXIT.
          ELSE.
            MESSAGE lv_s_msgtxt*  TYPE 'S'.
          ENDIF.
          PERFORM set_info_status.          " Обновление данных в GT_OUTPUT[]
          lv_c_refresh_alv = abap_true.     "  ----   RT0K916270.RTKDEVSAP-33
      ENDCASE.

      p_wa-refresh = abap_true.
* ---- }  RT0K916109.RTKDEVSAP-33
    ENDIF.
  ENDDO.                                    " ---- RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
* Синхронизация табл.ALV -> табл.OUT
  PERFORM convtb_out2alv
    USING     gt_output[]
              gs_ctrl_alv
    CHANGING  gt_data_alv.

* ---- { RT0K915931.ERP-259
  DO 1 TIMES.
    CHECK lv_c_refresh_alv = abap_true.
* -- Refresh table Display
    ls_stable-row = ls_stable-col = abap_true.
    gs_ctrl_alv-r_alv->refresh_table_display(
      EXPORTING  is_stable      = ls_stable
      EXCEPTIONS OTHERS         = 0 ).
  ENDDO.
* ---- } RT0K915931.ERP-259
* ---- } RT0K915737.ERP-259

ENDFORM.                    "user_command

*---------------------------------------------------------------------*
*      Form  SAVE_DATA
*---------------------------------------------------------------------*
FORM save_data USING p_commit p_lifnr CHANGING p_error.

  RANGES:  lr_lifnr FOR lfa1-lifnr.
  DATA: lt_zmmcorr16 LIKE TABLE OF zmmcorr16.

  CLEAR: p_error, lr_lifnr[].

  IF NOT so_matnr[] IS INITIAL.
    p_error = 'X'.
    _add_bapi_message gt_return 'E' '137' 'ZMM2' '' '' '' ''. " ERP-53 MM: Ошибка при сохранении отчета - 1
*    MESSAGE s137. " ERP-53 MM: Ошибка при сохранении отчета - 1
    RETURN.
  ENDIF.

  IF p_lifnr <> ''.
    lr_lifnr = 'IEQ'.
    lr_lifnr-low = p_lifnr.
    APPEND lr_lifnr.
  ENDIF.

  LOOP AT gt_lifnr INTO gs_lifnr WHERE lifnr IN lr_lifnr.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE lt_zmmcorr16
      FROM zmmcorr16
     WHERE spmon = p_spmon
       AND bukrs = p_bukrs
       AND matnr IN so_matnr
       AND lifnr = gs_lifnr-lifnr.

    LOOP AT lt_zmmcorr16 TRANSPORTING NO FIELDS WHERE belnr_fi <> '' AND belnr_st = ''.
      EXIT.
    ENDLOOP.

    IF sy-subrc = 0.
      _add_bapi_message gt_return 'E' '138' 'ZMM2' p_spmon gs_lifnr-lifnr '' ''.
      p_error = 'X'.
      CONTINUE.
    ENDIF.

    LOOP AT lt_zmmcorr16 TRANSPORTING NO FIELDS
    WHERE belnr_fi <> '' AND belnr_st <> ''
       OR belnr_fi = '' AND belnr_st = ''.
      EXIT.
    ENDLOOP.

    IF sy-batch = ' '. " ERP-53 MM: Ошибка при сохранении отчета - 1
      IF sy-subrc = 0.
        CONCATENATE 'За данный период по поставщику'(071) gs_lifnr-lifnr
          'существует временно сохраненный или отсторнированный отчет.'(072) 'Заменить его?'(073)
          INTO l_stroka SEPARATED BY space.
        _call_popup_dialog 'Предупреждение'(050) l_stroka 'Да'(052) 'Нет'(053) '2' '' l_answer.
        IF l_answer = '2'.
          "      p_error = 'X'.
          CONTINUE.
        ENDIF.
      ENDIF.
    ENDIF. " ERP-53 MM: Ошибка при сохранении отчета - 1

*--------------- Сохранение --------------------
    CLEAR: zmmcorr16, lt_zmmcorr16[].

    LOOP AT gt_output INTO gs_output WHERE lifnr = gs_lifnr-lifnr.
      MOVE-CORRESPONDING gs_output TO zmmcorr16.            "#EC ENHOK
      zmmcorr16-mandt = sy-mandt.
      zmmcorr16-bukrs = p_bukrs.
      zmmcorr16-spmon = p_spmon.
      APPEND  zmmcorr16 TO lt_zmmcorr16.
      DELETE FROM zmmcorr16 WHERE bukrs = p_bukrs AND spmon = p_spmon AND matnr = gs_output-matnr.
    ENDLOOP.

    INSERT zmmcorr16 FROM TABLE lt_zmmcorr16.

    IF sy-subrc <> 0.
      MESSAGE a135.
    ENDIF.

    _add_bapi_message gt_return 'S' '139' 'ZMM2' p_spmon gs_lifnr-lifnr '' ''.
  ENDLOOP.

  IF p_commit = 'X'.
    COMMIT WORK AND WAIT.
    WAIT UP TO 1 SECONDS.
  ENDIF.

ENDFORM.                    " SAVE_DATA

*---------------------------------------------------------------------*
*      Form  POST_DATA
*---------------------------------------------------------------------*
FORM post_data.

  DATA: lt_zmmcorr16 LIKE TABLE OF zmmcorr16,
        lt_bonus LIKE TABLE OF gs_bonus.

  DATA: BEGIN OF lt_docnum OCCURS 0,
          docnum LIKE zmmbonush-docnum,
        END OF lt_docnum.

  DATA: ls_header LIKE  bapiache09,
        lt_accountgl LIKE TABLE OF  bapiacgl09,
        lt_currencyamount LIKE TABLE OF bapiaccr09,
        lt_return  LIKE TABLE OF bapiret2.

* --{  RT0K909832.SAPERP-193
  DATA:
    li_retval                TYPE           sysubrc,
    ls_message               TYPE           bapiret2,
    lv_c_error               TYPE           c.
  DATA:
    ls_data_hist             TYPE          zmmcorr16_hist.
* --}  RT0K909832.SAPERP-193

* ---- { RT0K915819.ERP-266
  DATA:
    lt_index_rows            TYPE          lvc_t_row.
*    lt_row_id                TYPE          lvc_t_roid.
* ---- } RT0K915819.ERP-266

* ---- {  RT0K916354.RTKDEVSAP-33
  DATA:
    ls_output*               TYPE           t_output,
    lv_s_msgtext             TYPE           string  ,
    lv_c_tabix(11)           TYPE           c.
* ---- }  RT0K916354.RTKDEVSAP-33

* -----------------------------------------------
* ---- { RT0K915819.ERP-266
  gs_ctrl_alv-r_alv->get_selected_rows(
    IMPORTING et_index_rows = lt_index_rows ).

  CASE lines( lt_index_rows ).
    WHEN 0.
      MESSAGE text-m23                      " 'Выделите строку для проведения финансового документа'
        TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
      RETURN.
    WHEN 1.
*     OK - nothing to do
    WHEN OTHERS.
      MESSAGE text-m24                      " 'Выделите ОДНУ строку для проведения финансового документа'
        TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
      RETURN.
  ENDCASE.
* ---- } RT0K915819.ERP-266

  CLEAR gs_scr_0110.
  gs_scr_0110-mode = '1'.
  READ TABLE gt_output INTO gs_output WITH KEY selected = 'X'.
  IF sy-subrc = 0.
* ---- {  RT0K916335.RTKDEVSAP-33
*    gs_scr_0110-lifnr = gs_output-lifnr.
*
* ----
*  Если имеюится неотсторнированные позиции KORR_16 основная проводка запрещается
*   в ЛЮБОЙ из строк по данному поставшику
* ---- {  RT0K916354.RTKDEVSAP-33
*    IF NOT gs_output-belnr_kor16    IS INITIAL AND
*       NOT gs_output-gjahr_kor16    IS INITIAL AND
*           gs_output-belnr_kor16_st IS INITIAL AND
*           gs_output-gjahr_kor16_st IS INITIAL.
*      MESSAGE text-m25                      " Проводка невозможна - имеется неотсторнированная проводка по Кор16.
*        TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
*      RETURN.
*    ENDIF.
*
* ----
    LOOP AT gt_output INTO ls_output* WHERE lifnr = gv_c_single_lifnr.
      IF NOT ls_output*-belnr_kor16    IS INITIAL AND
         NOT ls_output*-gjahr_kor16    IS INITIAL AND
             ls_output*-belnr_kor16_st IS INITIAL AND
             ls_output*-gjahr_kor16_st IS INITIAL.
        WRITE sy-tabix TO lv_c_tabix. CONDENSE lv_c_tabix.
        CONCATENATE:
          'Проводка невозможна'(082) '-' 'в строке'(098)
          lv_c_tabix 'имеется неотсторнированная проводка по Кор16.'(099)
            INTO lv_s_msgtext SEPARATED BY space.
        MESSAGE lv_s_msgtext
          TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
        RETURN.
      ENDIF.
    ENDLOOP.
* ---- }  RT0K916354.RTKDEVSAP-33

    gs_scr_0110-lifnr = gv_c_single_lifnr.
* ---- }  RT0K916335.RTKDEVSAP-33
  ENDIF.
  gs_scr_0110-budat = gs_scr_0110-bldat = sy-datum.

* ---- {  RT0K916109.RTKDEVSAP-33
  PERFORM get_last_day_of_period
    USING     p_spmon
    CHANGING  gs_scr_0110-bldat.
* ---- }  RT0K916109.RTKDEVSAP-33

  gs_scr_0110-run_mode = 'POST'.                      " ----   RT0K916270.RTKDEVSAP-33
  CALL SCREEN 0110 STARTING AT 25 5 ENDING AT 55 8.
  CHECK ok_code = 'OK'.

* Сохраним данные отчета при необходимости
  PERFORM save_data USING '' gs_scr_0110-lifnr CHANGING l_error.

  IF l_error = 'X'.
    PERFORM msg_show_bapi USING gt_return[].
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

*----------- Проверка ретрокоррекции за прошлый период ----------*

  l_spmon = p_spmon - 1.
  CLEAR l_error.

* ---{RT0K908517.ERP-36
*  SELECT *
*    INTO CORRESPONDING FIELDS OF TABLE lt_zmmcorr16
*    FROM zmmcorr16
*   WHERE w_stock_16_fin <> 0
*     AND spmon =  l_spmon.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE lt_zmmcorr16
    FROM zmmcorr16
    WHERE  spmon =  l_spmon AND
           lifnr IN so_lifnr.
* ---}RT0K908517.ERP-36

  DO 1 TIMES.
    CHECK sy-subrc = 0.

    READ TABLE lt_zmmcorr16 TRANSPORTING NO FIELDS WITH KEY belnr_fi = ''.
    IF sy-subrc = 0.
      l_error = 'X'.
      EXIT.
    ENDIF.

    LOOP AT lt_zmmcorr16 INTO zmmcorr16 WHERE belnr_fi <> '' AND belnr_st <> ''.
      l_error = 'X'.
      EXIT.
    ENDLOOP.
  ENDDO.

  IF l_error = 'X'.
    MESSAGE s024
      WITH 'Расчет ретрокоррекции за предыдущий период'(m06) 'еще не завершен.'(m07) 'Проводка НЕ возможна'(m09) space.
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

*--------- Проверка, что все документы ретрокоррекции проведены в периоде проводки -----*
  SELECT docnum
    INTO CORRESPONDING FIELDS OF TABLE lt_docnum
    FROM zmmbonush
   WHERE bukrs = p_bukrs
     AND status = ' '
     AND lifnr = gs_scr_0110-lifnr
     AND monat = p_spmon+4(2)
     AND gjahr = p_spmon(4).

  CLEAR gt_return[].
  LOOP AT lt_docnum.
    _add_bapi_message gt_return 'E' '136' 'ZMM2' p_spmon lt_docnum-docnum '' ''.
  ENDLOOP.

  IF NOT gt_return[] IS INITIAL.
    SORT gt_return.
    DELETE ADJACENT DUPLICATES FROM gt_return.
    PERFORM msg_show_bapi USING gt_return.
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

  SELECT matnr hkont monat gjahr            ##TOO_MANY_ITAB_FIELDS
    INTO CORRESPONDING FIELDS OF TABLE lt_bonus
    FROM zmmbonush
    JOIN zmmbonusp
      ON zmmbonusp~docnum = zmmbonush~docnum
   WHERE bukrs = p_bukrs
     AND matnr IN so_matnr.

  DELETE lt_bonus WHERE gjahr > p_spmon(4).
  DELETE lt_bonus WHERE gjahr = p_spmon(4) AND monat > p_spmon+4(2).

  SORT lt_bonus BY gjahr DESCENDING monat DESCENDING matnr.

  ls_header-neg_postng = 'X'.
  ls_header-username = sy-uname.
  ls_header-bus_act = 'RFBU'.
  ls_header-comp_code = p_bukrs.
  READ TABLE gr_budat.                                      "#EC WARNOK
  ls_header-doc_date = gs_scr_0110-budat.
  ls_header-pstng_date = gs_scr_0110-budat.
  ls_header-ref_doc_no = ''.
  ls_header-doc_type = 'AB'.

  CLEAR gt_return[].

  LOOP AT gt_lifnr INTO gs_lifnr WHERE lifnr = gs_scr_0110-lifnr.
    CLEAR: lt_accountgl[], lt_currencyamount[], lt_return[].

    LOOP AT gt_output INTO gs_output WHERE lifnr = gs_lifnr-lifnr.
      PERFORM fill_bapi_acc_doc_items TABLES lt_accountgl lt_currencyamount lt_bonus
        USING '9002010000' gs_output.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      PERFORM fill_bapi_acc_doc_items TABLES lt_accountgl lt_currencyamount lt_bonus
        USING '9002020000' gs_output.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      PERFORM fill_bapi_acc_doc_items TABLES lt_accountgl lt_currencyamount lt_bonus
        USING '9102010000' gs_output.
      PERFORM fill_bapi_acc_doc_items TABLES lt_accountgl lt_currencyamount lt_bonus
        USING '9408000000' gs_output.
    ENDLOOP.

    IF lt_accountgl[] IS INITIAL.
      _add_bapi_message gt_return 'W' '147' 'ZMM2' gs_lifnr-lifnr p_spmon  '' ''.
      CONTINUE.
    ENDIF.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader = ls_header
      TABLES
        accountgl      = lt_accountgl
        currencyamount = lt_currencyamount
        return         = lt_return.

    APPEND LINES OF lt_return TO gt_return.
    READ TABLE lt_return INTO ls_return WITH KEY id = 'RW' number = '605'.

    IF sy-subrc = 0.
      LOOP AT gt_output INTO gs_output WHERE lifnr = gs_lifnr-lifnr.
        gs_output-belnr_fi = ls_return-message_v2(10).
        gs_output-gjahr_fi = ls_return-message_v2+14(4).
        CLEAR: gs_output-belnr_st, gs_output-gjahr_st.
* ---- {  RT0K916335.RTKDEVSAP-33
        CLEAR:
          gs_output-stock_16_fin_kor,
          gs_output-belnr_kor16     , gs_output-gjahr_kor16   ,
          gs_output-belnr_kor16_st  , gs_output-gjahr_kor16_st.
        CLEAR: gs_output-monat_st, gs_output-monat_kor16, gs_output-monat_kor16_st.
* ---- }  RT0K916335.RTKDEVSAP-33
        MODIFY gt_output FROM gs_output.
        UPDATE zmmcorr16
           SET belnr_fi = gs_output-belnr_fi
               gjahr_fi = gs_output-gjahr_fi
               belnr_st = ''
               gjahr_st = ''
               monat_st = ''
               aenam = sy-uname
               aedat = sy-datum
               aetim = sy-uzeit
* ---- {  RT0K916335.RTKDEVSAP-33
               stock_16_fin_kor = gs_output-stock_16_fin_kor
               belnr_kor16      = gs_output-belnr_kor16
               gjahr_kor16      = gs_output-gjahr_kor16
               MONAT_KOR16      = gs_output-monat_kor16
               belnr_kor16_st   = gs_output-belnr_kor16_st
               gjahr_kor16_st   = gs_output-gjahr_kor16_st
               MONAT_KOR16_ST   = gs_output-monat_kor16_st
* ---- }  RT0K916335.RTKDEVSAP-33
         WHERE bukrs = p_bukrs
           AND spmon = p_spmon
           AND matnr = gs_output-matnr
           AND lifnr = gs_lifnr-lifnr.
        IF sy-subrc <> 0.
          CLEAR zmmcorr16.
          MOVE-CORRESPONDING gs_output TO zmmcorr16.        "#EC ENHOK
          zmmcorr16-mandt = sy-mandt.
          INSERT zmmcorr16.
          IF sy-subrc <> 0.
            MESSAGE a135.
          ENDIF.
        ENDIF.

* --{  RT0K909832.SAPERP-193
        MOVE-CORRESPONDING:
          gs_output       TO ls_data_hist.                  "#EC ENHOK
        MOVE:
          sy-mandt        TO ls_data_hist-mandt,
          p_bukrs         TO ls_data_hist-bukrs,
          p_spmon         TO ls_data_hist-spmon,
          sy-uname        TO ls_data_hist-aenam,
          sy-datum        TO ls_data_hist-aedat,
          sy-uzeit        TO ls_data_hist-aetim,
          gs_lifnr-lifnr  TO ls_data_hist-lifnr.

        PERFORM save_history
          USING     'POST'
                    ls_data_hist
          CHANGING  li_retval
                    ls_message.
        IF NOT ls_message IS INITIAL.
          APPEND ls_message  TO gt_return[].
        ENDIF.
        IF li_retval <> 0.
          lv_c_error = abap_true.
        ENDIF.
* --}  RT0K909832.SAPERP-193
      ENDLOOP.

* --{  RT0K909832.SAPERP-193
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          wait = 'X'.
*
* ------
      CASE lv_c_error.
        WHEN abap_false.
          CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
            EXPORTING
              wait = 'X'.
          MESSAGE s142 WITH gs_output-belnr_fi.

        WHEN abap_true.
          CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
          CLEAR: ls_message.
          ls_message-type       = 'E'.
          ls_message-id         = 'ZMM'.
          ls_message-number     = 106.
          ls_message-message_v1 = 'Ошибки при сохранении в табл.'(004).
          ls_message-message_v2 = 'ZMMCORR16 и ZMMCORR16_HIST.'(006).
          ls_message-message_v3 = 'Операция отменена'(007).
          ls_message-message_v4 = ''.
          APPEND ls_message  TO gt_return[].
      ENDCASE.
* --}  RT0K909832.SAPERP-193
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    ENDIF.
  ENDLOOP.

  IF NOT gt_return[] IS INITIAL.
    PERFORM msg_show_bapi USING gt_return[].
  ENDIF.

ENDFORM.                    " POST_DATA

*---------------------------------------------------------------------*
*      Form  FILL_BAPI_ACC_DOC_ITEMS
*---------------------------------------------------------------------*
FORM fill_bapi_acc_doc_items TABLES pt_accountgl      STRUCTURE bapiacgl09
                                    pt_currencyamount STRUCTURE bapiaccr09
                                    pt_bonus          LIKE gt_bonus
                             USING  p_hkont ps_output LIKE gs_output
                             .
  DATA: ls_accountgl      LIKE  bapiacgl09,
        ls_currencyamount LIKE bapiaccr09.

  CLEAR: ls_accountgl, ls_accountgl.

  IF p_hkont = '9002010000'.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*    ls_currencyamount-amt_doccur = ps_output-w_gi_9002_16.
    ls_currencyamount-amt_doccur = ps_output-w_gi_900201_16.
  ELSEIF p_hkont = '9002020000'.
    ls_currencyamount-amt_doccur = ps_output-w_gi_900202_16.
    ls_accountgl-tax_code = 'K0'.                             " RT0K911559.SAPERP-225
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
  ELSEIF p_hkont = '9102010000'.
    ls_currencyamount-amt_doccur = ps_output-w_gi_9102_16.
  ELSEIF p_hkont = '9408000000'.
    ls_currencyamount-amt_doccur = ps_output-w_gi_94_16.
  ENDIF.

  CHECK ls_currencyamount-amt_doccur <> ''.

  ls_accountgl-itemno_acc = lines( pt_accountgl ) + 1.
  ls_accountgl-comp_code = p_bukrs.
  READ TABLE pt_bonus INTO gs_bonus WITH KEY matnr = ps_output-matnr.
  IF sy-subrc <> 0.
    MESSAGE a135.
  ENDIF.
  ls_accountgl-gl_account = gs_bonus-hkont.
  ls_accountgl-material = ps_output-matnr.
  ls_accountgl-plant = 'Z500'.
  APPEND ls_accountgl TO pt_accountgl.
  ls_currencyamount-itemno_acc = ls_accountgl-itemno_acc.
  ls_currencyamount-curr_type = '00'.
  ps_output-waers = 'RUB'.
  ls_currencyamount-currency = ps_output-waers.
  APPEND ls_currencyamount TO pt_currencyamount.

  ls_accountgl-itemno_acc = lines( pt_accountgl ) + 1.
  ls_accountgl-comp_code = p_bukrs.
  ls_accountgl-gl_account = p_hkont.
  ls_accountgl-material = ps_output-matnr.
  ls_accountgl-plant = 'Z500'.
  APPEND ls_accountgl TO pt_accountgl.
  ls_currencyamount-itemno_acc = ls_accountgl-itemno_acc.
  ls_currencyamount-curr_type = '00'.
  ls_currencyamount-currency = ps_output-waers.
  ls_currencyamount-amt_doccur = - ls_currencyamount-amt_doccur.
  APPEND ls_currencyamount TO pt_currencyamount.

ENDFORM.                    " FILL_BAPI_ACC_DOC_ITEMS

*---------------------------------------------------------------------*
*      Form  CANCEL_POSTING
*---------------------------------------------------------------------*
*  Использвание глобальных переменных
*  - gs_ctrl_alv-r_alv...
*  - <...>
*
*  Измененение глобальных переменных
*  - <...>
*
* -----------------------------------------------
FORM cancel_posting  CHANGING  p_error.

  DATA: BEGIN OF lt_belnr OCCURS 0,
          belnr LIKE bseg-belnr,
          gjahr LIKE bseg-gjahr,
        END OF lt_belnr.

  DATA: " lt_zmmcorr16 LIKE TABLE OF zmmcorr16,       " ----  RT0K915737.ERP-259
        lt_return LIKE TABLE OF bapiret2.


  DATA: rev_key LIKE  bapiacrev,
        gs_documentheader LIKE  bapiache09.

* --{  RT0K909832.SAPERP-193
  DATA:
    li_retval                TYPE           sysubrc,
    ls_message               TYPE           bapiret2,
    lv_c_error               TYPE           c.
  DATA:
    ls_data_hist             TYPE          zmmcorr16_hist.
* --}  RT0K909832.SAPERP-193

* ---- { RT0K915819.ERP-266
  DATA:
    lt_index_rows            TYPE          lvc_t_row.
*    lt_row_id                TYPE          lvc_t_roid.
* ---- } RT0K915819.ERP-266

* ---- {  RT0K916354.RTKDEVSAP-33
  DATA:
    ls_output*               TYPE           t_output,
    lv_s_msgtext             TYPE           string  ,
    lv_c_tabix(11)           TYPE           c.
* ---- }  RT0K916354.RTKDEVSAP-33

* -----------------------------------------------
  IF NOT so_matnr[] IS INITIAL.
    p_error = 'X'.
    MESSAGE s137.
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

* ---- { RT0K915819.ERP-266
  gs_ctrl_alv-r_alv->get_selected_rows(
    IMPORTING et_index_rows = lt_index_rows ).

  CASE lines( lt_index_rows ).
    WHEN 0.
      MESSAGE text-m21                      " 'Выделите строку для проведения сторнирования'
        TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
      RETURN.
    WHEN 1.
*        OK - nothing to do
    WHEN OTHERS.
      MESSAGE text-m22                      " 'Выделите ОДНУ строку для проведения сторнирования'
        TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
      RETURN.
  ENDCASE.
* ---- } RT0K915819.ERP-266

  CLEAR gs_scr_0110.
  READ TABLE gt_output INTO gs_output WITH KEY selected = 'X'.
  IF sy-subrc = 0.
* ---- {  RT0K916335.RTKDEVSAP-33
*    gs_scr_0110-lifnr = gs_output-lifnr.
* ----
* ---- {  RT0K916335.RTKDEVSAP-33

*  Если имеюится неотсторнированные позиции KORR_16 основная проводка запрещается
*   в ЛЮБОЙ из строк по данному поставшику
* ----
    LOOP AT gt_output INTO ls_output* WHERE lifnr = gv_c_single_lifnr.
      IF NOT ls_output*-belnr_kor16    IS INITIAL AND
         NOT ls_output*-gjahr_kor16    IS INITIAL AND
             ls_output*-belnr_kor16_st IS INITIAL AND
             ls_output*-gjahr_kor16_st IS INITIAL.
        WRITE sy-tabix TO lv_c_tabix. CONDENSE lv_c_tabix.
        CONCATENATE:
          'Сторно проводки невозможно'(097) '-' 'в строке'(098)
          lv_c_tabix 'имеется неотсторнированная проводка по Кор16.'(099)
            INTO lv_s_msgtext SEPARATED BY space.
        MESSAGE lv_s_msgtext
          TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
        RETURN.
      ENDIF.
    ENDLOOP.
* ---- }  RT0K916354.RTKDEVSAP-33

    gs_scr_0110-lifnr = gv_c_single_lifnr.
* ---- }  RT0K916335.RTKDEVSAP-33

    SELECT SINGLE budat bldat                               "#EC WARNOK
      INTO (gs_scr_0110-budat, gs_scr_0110-bldat)
      FROM bkpf
     WHERE belnr = gs_output-belnr_fi
       AND gjahr = gs_output-gjahr_fi.
  ENDIF.

  gs_scr_0110-mode     = '1'.
  gs_scr_0110-run_mode = 'STORNO'.                                  " ----   RT0K916270.RTKDEVSAP-33
  IF gs_scr_0110-stgrd IS INITIAL. gs_scr_0110-stgrd = '03'. ENDIF. " ----   RT0K916270.RTKDEVSAP-33
  CALL SCREEN 0110 STARTING AT 25 5
*                   ENDING   AT 55 8.     " ----   RT0K916270.RTKDEVSAP-33
                   ENDING   AT 55 9.      " ----   RT0K916270.RTKDEVSAP-33
* ---- {  RT0K916129.ERP-260
*  CHECK ok_code = 'OK'.
* ----
  CASE ok_code.
    WHEN 'CANCEL'.
      p_error = abap_true.
      MESSAGE text-062            " Операция отменена пользователем
        TYPE 'S' DISPLAY LIKE  'E'.
      RETURN.
    WHEN OTHERS.
*     <...>
  ENDCASE.
* ---- }  RT0K916129.ERP-260

* проверка на отсутствие проводок в следующих периодах
  SELECT COUNT(*)
    FROM zmmcorr16
   WHERE belnr_fi <> ''
     AND belnr_st = ''
     AND lifnr = gs_scr_0110-lifnr
     AND spmon > p_spmon
     AND bukrs = p_bukrs.

  IF sy-dbcnt > 0.
    p_error = 'X'.
    MESSAGE s148.
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

* ---- {  RT0K916354.RTKDEVSAP-33
  LOOP AT gt_output INTO gs_output WHERE lifnr = gs_scr_0110-lifnr  ##NEEDED.

  ENDLOOP.
* ---- }  RT0K916354.RTKDEVSAP-33

  LOOP AT gt_output INTO gs_output WHERE belnr_fi <> '' AND lifnr = gs_scr_0110-lifnr
  AND belnr_st = ''.
    lt_belnr-belnr = gs_output-belnr_fi.
    lt_belnr-gjahr = gs_output-gjahr_fi.
    COLLECT lt_belnr.
  ENDLOOP.

  IF sy-subrc <> 0.
    p_error = 'X'.
    MESSAGE s141.
    RETURN.       " ----  RT0K915737.ERP-259 --{     EXIT.
  ENDIF.

  CLEAR gt_return[].
  READ TABLE lt_belnr INDEX 1.

  LOOP AT lt_belnr.
*    rev_key-ac_doc_no = lt_belnr-belnr.
    CLEAR: lt_return[].
    CONCATENATE lt_belnr-belnr '1000' lt_belnr-gjahr INTO rev_key-obj_key.
    CONCATENATE lt_belnr-belnr '1000' lt_belnr-gjahr INTO rev_key-obj_key_r.
    rev_key-obj_type = 'BKPFF'.
    rev_key-pstng_date = gs_scr_0110-budat.
    rev_key-reason_rev = gs_scr_0110-stgrd.           " ----   RT0K916172.inc.DWH-9163735
    gs_documentheader-bus_act = 'RFBU'.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_REV_POST'
      EXPORTING
        reversal = rev_key
        bus_act  = gs_documentheader-bus_act
      TABLES
        return   = lt_return.

    APPEND LINES OF lt_return TO gt_return.
    READ TABLE lt_return INTO ls_return WITH KEY id = 'RW' number = '605'.

    IF sy-subrc = 0.
      LOOP AT gt_output INTO gs_output WHERE belnr_fi = lt_belnr-belnr.
        gs_output-belnr_st = ls_return-message_v2(10).
        gs_output-gjahr_st = ls_return-message_v2+14(4).
        gs_output-monat_st = rev_key-pstng_date+4(2).
        MODIFY gt_output FROM gs_output.
      ENDLOOP.

      UPDATE zmmcorr16
         SET belnr_st = gs_output-belnr_st
             gjahr_st = gs_output-gjahr_st
             monat_st = gs_output-monat_st
             aenam = sy-uname
             aedat = sy-datum
             aetim = sy-uzeit
       WHERE belnr_fi = lt_belnr-belnr
         AND gjahr_fi = lt_belnr-gjahr.

      IF sy-subrc <> 0.
        MESSAGE a135.
      ENDIF.

* --{  RT0K909832.SAPERP-193
*      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*        EXPORTING
*          wait = 'X'.
*
* ------
      MOVE:
        sy-mandt            TO ls_data_hist-mandt,
        p_bukrs             TO ls_data_hist-bukrs,
        gs_output-matnr     TO ls_data_hist-matnr,
        p_spmon             TO ls_data_hist-spmon,
        lt_belnr-belnr      TO ls_data_hist-belnr_fi,
        lt_belnr-gjahr      TO ls_data_hist-gjahr_fi,
        gs_output-belnr_st  TO ls_data_hist-belnr_st,
        gs_output-gjahr_st  TO ls_data_hist-gjahr_st,
        gs_output-monat_st  TO ls_data_hist-monat_st,
        sy-uname            TO ls_data_hist-aenam,
        sy-datum            TO ls_data_hist-aedat,
        sy-uzeit            TO ls_data_hist-aetim.

      PERFORM save_history
        USING     'STORNO'
                  ls_data_hist
        CHANGING  li_retval
                  ls_message.
      IF NOT ls_message IS INITIAL.
        APPEND ls_message  TO gt_return[].
      ENDIF.
      IF li_retval <> 0.
        lv_c_error = abap_true.
      ENDIF.

      CASE lv_c_error.
        WHEN abap_false.
          CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
            EXPORTING
              wait = 'X'.
          MESSAGE s142 WITH gs_output-belnr_fi.

        WHEN abap_true.
          CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
          CLEAR: ls_message.
          ls_message-type       = 'E'.
          ls_message-id         = 'ZMM'.
          ls_message-number     = 106.
          ls_message-message_v1 = 'Ошибки при сохранении в табл.'(004).
          ls_message-message_v2 = 'ZMMCORR16 и ZMMCORR16_HIST.'(006).
          ls_message-message_v3 = 'Операция отменена'(007).
          ls_message-message_v4 = ''.
          APPEND ls_message  TO gt_return[].
      ENDCASE.
* --{  RT0K909832.SAPERP-193
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    ENDIF.

  ENDLOOP.

  WAIT UP TO 1 SECONDS.
  READ TABLE gt_return TRANSPORTING NO FIELDS WITH KEY type = 'E'.
  IF sy-subrc = 0.
    PERFORM msg_show_bapi USING gt_return[].
  ENDIF.

ENDFORM.                    " CANCEL_POSTING

*---------------------------------------------------------------------*
*      Module  STATUS_0110  OUTPUT
*---------------------------------------------------------------------*
MODULE status_0110 OUTPUT.

  SET PF-STATUS 'GUI_0110'.
*  SET TITLEBAR 'xxx'.

  LOOP AT SCREEN.
    IF screen-name CS 'LIFNR' AND gs_scr_0110-mode = '2'
    OR screen-name CS 'BELNR' AND gs_scr_0110-mode = '1'.
      screen-active = 0.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.

* ---- {  RT0K916270.RTKDEVSAP-33
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN 'GS_SCR_0110-LIFNR'.
        IF gv_c_single_lifnr IS INITIAL.
          screen-input  = 0.
          screen-output = 1.
        ELSE.
          screen-input  = 0.
          screen-output = 1.
        ENDIF.
      WHEN 'GS_SCR_0110-STGRD'.
        CASE gs_scr_0110-run_mode.
          WHEN 'POST'  .
            screen-active   = 0.
            screen-required = 0.
          WHEN 'STORNO'.
            screen-active   = 1.
            screen-required = 1.
        ENDCASE.
      WHEN 'GS_SCR_0110-BLDAT'.
        CASE gs_scr_0110-run_mode.
          WHEN 'POST'  .
            screen-input  = 1.
            screen-output = 1.
          WHEN 'STORNO'.
            screen-input  = 0.
            screen-output = 1.
        ENDCASE.

      WHEN OTHERS  .
        CONTINUE.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.
* ---- }  RT0K916270.RTKDEVSAP-33
ENDMODULE.                 " STATUS_0110  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  output_excel
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM output_excel.

  CONSTANTS: c_excelform TYPE wwwdatatab-objid VALUE 'ZCORR_16'.
  DATA:  gv_valuechar(255),
         l_tabix LIKE sy-tabix,
         gt_val TYPE STANDARD TABLE OF zwww_values,
         gs_val LIKE LINE OF gt_val .

  DEFINE setval.
    clear gs_val.
    gs_val-var_name  = &1.
    gs_val-var_num   = &2.
    gs_val-find_text = &3.
    gs_val-val_type  = &4.
*  write &5 to gv_valuechar no-zero no-grouping left-justified.
    write &5 to gv_valuechar no-grouping left-justified ##UOM_IN_MES.
    gs_val-value = gv_valuechar.
    append gs_val to gt_val.
  END-OF-DEFINITION.

  CONCATENATE p_spmon+4(2) '.' p_spmon(4) INTO l_stroka.
  CONCATENATE 'РАСЧЕТ СПИСАНИЯ СЧЕТА 16 за'(070) l_stroka INTO l_stroka SEPARATED BY space.
  setval '' '' '[SPMON]' '' l_stroka.

  TABLES: user_addr.

  SELECT SINGLE *                                           "#EC WARNOK
    FROM user_addr
   WHERE bname = sy-uname.

  setval '' '' '[FIO]' ''  user_addr-name_textc.

  LOOP AT gt_output INTO gs_output.
    l_tabix = sy-tabix.
    setval 'stroka' l_tabix '[MATNR]'           '' gs_output-matnr                    ##NO_TEXT.
    setval 'stroka' l_tabix '[MAKTX]'           '' gs_output-maktx                    ##NO_TEXT.
    setval 'stroka' l_tabix '[W_STOCK_41]'      '' gs_output-w_stock_41               ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GRS_41]'        '' gs_output-w_grs_41                 ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GRO_41]'        '' gs_output-w_gro_41                 ##NO_TEXT.
    setval 'stroka' l_tabix '[W_STOCK_16]'      '' gs_output-w_stock_16               ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GR_16]'         '' gs_output-w_gr_16                  ##NO_TEXT.
    setval 'stroka' l_tabix '[KOEF]'            '' gs_output-koef_out                 ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_9002]'       '' gs_output-w_gi_9002                ##NO_TEXT.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
    setval 'stroka' l_tabix '[W_GI_900201]'     '' gs_output-w_gi_900201              ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_900202]'     '' gs_output-w_gi_900202              ##NO_TEXT.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
    setval 'stroka' l_tabix '[W_GI_9102]'       '' gs_output-w_gi_9102                ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_94]'         '' gs_output-w_gi_94                  ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_9002_16]'    '' gs_output-w_gi_9002_16             ##NO_TEXT.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
    setval 'stroka' l_tabix '[W_GI_900201_16]'  '' gs_output-w_gi_900201_16           ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_900202_16]'  '' gs_output-w_gi_900202_16           ##NO_TEXT.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
    setval 'stroka' l_tabix '[W_GI_9102_16]'    '' gs_output-w_gi_9102_16             ##NO_TEXT.
    setval 'stroka' l_tabix '[W_GI_94_16]'      '' gs_output-w_gi_94_16               ##NO_TEXT.
    setval 'stroka' l_tabix '[W_STOCK_16_FIN]'  '' gs_output-w_stock_16_fin           ##NO_TEXT.
    AT LAST.
      SUM.
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*      setval '' '' '[TOT_W_GI_9002]'            '' gs_output-w_gi_9002    .
      setval '' '' '[TOT_W_GI_900201]'          '' gs_output-w_gi_900201  .
      setval '' '' '[TOT_W_GI_900202]'          '' gs_output-w_gi_900202  .
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      setval '' '' '[TOT_W_GI_9102]'            '' gs_output-w_gi_9102    .
      setval '' '' '[TOT_W_GI_94]'              '' gs_output-w_gi_94      .
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*      setval '' '' '[TOT_W_GI_9002_16]'         '' gs_output-w_gi_9002_16  .
      setval '' '' '[TOT_W_GI_900201_16]'       '' gs_output-w_gi_900201_16.
      setval '' '' '[TOT_W_GI_900202_16]'       '' gs_output-w_gi_900202_16.
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      setval '' '' '[TOT_W_GI_9102_16]'         '' gs_output-w_gi_9102_16  .
      setval '' '' '[TOT_W_GI_94_16]'           '' gs_output-w_gi_94_16    .
      setval '' '' '[TOT_W_STOCK_16_FIN]'       '' gs_output-w_stock_16_fin.
    ENDAT.
  ENDLOOP.

  CALL FUNCTION 'ZWWW_OPENFORM'
    EXPORTING
      form_name         = c_excelform
      printdialog       = ''
      protect           = ''
*     without_ole       =
*     debug_mode        =
*     decimal_separator = lv_dsr
      optimize          = 999999
    TABLES
      it_values         = gt_val
    EXCEPTIONS
      printcancel       = 1
      OTHERS            = 99.
* ---- { RT0K915737.ERP-259
  IF sy-subrc <> 0.
    MESSAGE 'Ошибка вывода в Excel'(005) TYPE cc_msgty_e.
    STOP.
  ENDIF.
* ---- } RT0K915737.ERP-259
ENDFORM.                    "output_excel

*---------------------------------------------------------------------*
*      Module  CHECK_LIFNR_0110  INPUT
*---------------------------------------------------------------------*
MODULE check_lifnr_0110 INPUT.
  READ TABLE gt_lifnr TRANSPORTING NO FIELDS WITH KEY lifnr = gs_scr_0110-lifnr.
  IF sy-subrc <> 0.
    MESSAGE e145 WITH gs_scr_0110-lifnr.
  ENDIF.
ENDMODULE.                 " CHECK_LIFNR_0110  INPUT

*---------------------------------------------------------------------*
*      Module  USER_COMMAND_0110  INPUT
*---------------------------------------------------------------------*
MODULE user_command_0110 INPUT.

  IF ok_code = 'CANCEL'.
    LEAVE TO SCREEN 0.
  ENDIF.

  IF ok_code = 'OK'.
    IF gs_scr_0110-mode = '1' AND ( gs_scr_0110-lifnr = '' OR gs_scr_0110-budat = '' OR gs_scr_0110-bldat = '' ).
      MESSAGE s146.
    ELSEIF gs_scr_0110-mode = '2' AND ( gs_scr_0110-belnr = '' OR gs_scr_0110-budat = '' OR gs_scr_0110-bldat = '' ).
      MESSAGE s146.
    ELSE.
      LEAVE TO SCREEN 0.
    ENDIF.
  ENDIF.

ENDMODULE.                 " USER_COMMAND_0110  INPUT

*---------------------------------------------------------------------*
*      Form  SET_INFO_STATUS
*---------------------------------------------------------------------*
FORM set_info_status .

  DATA:  lt_output_bd LIKE TABLE OF gs_output.

  SELECT *                                  ##TOO_MANY_ITAB_FIELDS
    INTO CORRESPONDING FIELDS OF TABLE lt_output_bd
    FROM zmmcorr16
   WHERE spmon = p_spmon
     AND bukrs = p_bukrs
     AND matnr IN so_matnr.

  LOOP AT gt_output INTO gs_output.

*  проверяем на наличие в сохранненой версии
    READ TABLE lt_output_bd INTO ls_output WITH KEY matnr = gs_output-matnr.

    IF sy-subrc = 0.

      IF ls_output-belnr_fi <> '' AND ls_output-belnr_st = ''.
        gs_output-status = icon_complete.
      ELSE.
        gs_output-status = icon_save_as_template.
      ENDIF.

      IF NOT ( gs_output-w_stock_41 = ls_output-w_stock_41
      AND gs_output-w_grs_41 = ls_output-w_grs_41
      AND gs_output-w_gro_41 = ls_output-w_gro_41
      AND gs_output-w_stock_16 = ls_output-w_stock_16
      AND gs_output-w_gr_16 = ls_output-w_gr_16
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*      AND gs_output-w_gi_9002 = ls_output-w_gi_9002
      AND gs_output-w_gi_900201 = ls_output-w_gi_900201
      AND gs_output-w_gi_900202 = ls_output-w_gi_900202
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      AND gs_output-w_gi_9102 = ls_output-w_gi_9102
      AND gs_output-w_gi_94 = ls_output-w_gi_94
*--< CQ11619. MM: Ретрокоррекция, деление по счетам 9002
*      AND gs_output-w_gi_9002_16 = ls_output-w_gi_9002_16
      AND gs_output-w_gi_900201_16 = ls_output-w_gi_900201_16
      AND gs_output-w_gi_900202_16 = ls_output-w_gi_900202_16
*--> CQ11619. MM: Ретрокоррекция, деление по счетам 9002
      AND gs_output-w_gi_9102_16 = ls_output-w_gi_9102_16
      AND gs_output-w_gi_94_16 = ls_output-w_gi_94_16
      AND gs_output-w_stock_16_fin = ls_output-w_stock_16_fin ).
        gs_output-warning = icon_warning.
      ENDIF.

      gs_output-belnr_fi = ls_output-belnr_fi.
      gs_output-gjahr_fi = ls_output-gjahr_fi.
      gs_output-belnr_st = ls_output-belnr_st.
      gs_output-gjahr_st = ls_output-gjahr_st.
      gs_output-monat_st = ls_output-monat_st.
* ---- { RT0K915931.ERP-259
      gs_output-stock_16_fin_kor = ls_output-stock_16_fin_kor.
      gs_output-belnr_kor16      = ls_output-belnr_kor16     .
      gs_output-gjahr_kor16      = ls_output-gjahr_kor16     .
      gs_output-monat_kor16      = ls_output-monat_kor16     .

* ---- } RT0K915931.ERP-259
* ---- {  RT0K916270.RTKDEVSAP-33
      gs_output-belnr_kor16_st = ls_output-belnr_kor16_st.
      gs_output-gjahr_kor16_st = ls_output-gjahr_kor16_st.
      gs_output-monat_kor16_st = ls_output-monat_kor16_st.

* ---- }  RT0K916270.RTKDEVSAP-33

    ELSE.
      CLEAR: gs_output-warning, gs_output-status.
    ENDIF.

    MODIFY gt_output FROM gs_output.

  ENDLOOP.

ENDFORM.                    " SET_INFO_STATUS
*&---------------------------------------------------------------------*
*&      Form  GET_MSEG_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_MSEG  text
*----------------------------------------------------------------------*
FORM get_mseg_data TABLES pt_mseg STRUCTURE gs_mseg.
  TYPES: BEGIN OF ty_mkpfkey  ##NEEDED,
         mblnr TYPE mseg-mblnr,
       END   OF ty_mkpfkey,
         BEGIN OF ty_mvtp_rasp16key,
           bwart TYPE zmm_mvtp_rasp16-bwart,
           shkzg TYPE zmm_mvtp_rasp16-shkzg,
           intr TYPE zmm_mvtp_rasp16-intr,
         END   OF ty_mvtp_rasp16key,
         BEGIN OF ty_mvtp_rasp16.
          INCLUDE TYPE ty_mvtp_rasp16key.
  TYPES:   mvmtp16 TYPE zmm_mvtp_rasp16-mvmtp16,
         END   OF ty_mvtp_rasp16,
         tt_mvtp_rasp16 TYPE SORTED TABLE OF ty_mvtp_rasp16 WITH NON-UNIQUE KEY bwart shkzg,
         BEGIN OF ty_bwkey,
           werks TYPE mseg-werks,
         END   OF ty_bwkey,
         BEGIN OF ty_t001k,
           werks TYPE mseg-werks,
           bwmod TYPE t001k-bwmod,
         END   OF ty_t001k,
         tt_t001k TYPE SORTED TABLE OF ty_t001k WITH NON-UNIQUE KEY werks,
         BEGIN OF ty_ebeln,
           ebeln TYPE ekko-ebeln,
         END   OF ty_ebeln,
         BEGIN OF ty_ekko,
           ebeln TYPE ekko-ebeln,
           bsakz TYPE ekko-bsakz,
         END   OF ty_ekko,
         tt_ekko TYPE SORTED TABLE OF ty_ekko WITH NON-UNIQUE KEY ebeln.
  DATA: " lt_mkpf  TYPE TABLE OF ty_mkpfkey,          " ----  RT0K915737.ERP-259
        ls_mseg  LIKE LINE OF pt_mseg,
*определение ключей
        lt_mvtpk TYPE TABLE OF ty_mvtp_rasp16key,
        ls_mvtpk LIKE LINE OF lt_mvtpk,
        lt_bwkey TYPE TABLE OF ty_bwkey,
        ls_bwkey LIKE LINE OF lt_bwkey,
        lt_ebeln TYPE TABLE OF ty_ebeln,
        ls_ebeln LIKE LINE OF lt_ebeln,
*Определение таблиц данных
        lt_mvtp  TYPE tt_mvtp_rasp16,
        ls_mvtp  LIKE LINE OF lt_mvtp,
        lt_t001k TYPE tt_t001k,
        ls_t001k LIKE LINE OF lt_t001k,
        lt_ekko  TYPE tt_ekko,
        ls_ekko  LIKE LINE OF lt_ekko.

  REFRESH pt_mseg.

*  SELECT mblnr FROM mkpf INTO TABLE lt_mkpf
*    WHERE budat IN gr_budat.
*  CHECK lt_mkpf[] IS NOT INITIAL.
*
*  SELECT mseg~mblnr mseg~matnr mseg~werks mseg~umwrk mseg~bwart
*         mseg~menge mseg~shkzg mseg~ummat mseg~dmbtr mseg~ebeln
*    INTO CORRESPONDING FIELDS OF TABLE pt_mseg
*    FROM mseg
*     FOR ALL ENTRIES IN lt_mkpf
*   WHERE mblnr = lt_mkpf-mblnr
*     AND mseg~matnr IN gr_matnr
* %_HINTS ORACLE '&max_in_blocking_factor 1000&'.

*  SELECT mseg~mblnr mseg~matnr mseg~werks mseg~umwrk mseg~bwart " по просьбе Зубова Николая
  SELECT mseg~mblnr mseg~zeile mseg~matnr mseg~werks mseg~umwrk mseg~bwart  ##TOO_MANY_ITAB_FIELDS " по просьбе Зубова Николая
         mseg~menge mseg~shkzg mseg~ummat mseg~dmbtr mseg~ebeln
    INTO CORRESPONDING FIELDS OF TABLE pt_mseg
    FROM mkpf
    JOIN mseg
      ON mkpf~mblnr = mseg~mblnr
*<< закоментировано Лобанов А. 10.07.2012 // причина - ускоряет быстродействия
* за счет использования MKPF~BUD без посл. доступа к MKPF, и при условии что у нас номерация
* ДМ в системе не зависит от года
    " AND mkpf~mjahr = mseg~mjahr
*{ Брюхов А.А.
*    WHERE mseg~matnr IN gr_matnr
*      AND mkpf~budat IN gr_budat.
    FOR ALL ENTRIES IN gr_matnr
    WHERE mseg~matnr EQ gr_matnr-low
      AND mkpf~budat IN gr_budat.
*} Брюхов А.А.

*  SELECT mseg~mblnr mseg~matnr mseg~werks mseg~umwrk mseg~bwart
*         mseg~menge mseg~shkzg mseg~ummat mseg~dmbtr mseg~ebeln
*    INTO CORRESPONDING FIELDS OF TABLE pt_mseg
*    FROM mseg
*   WHERE mseg~matnr IN gr_matnr
*     AND mseg~budat_mkpf IN gr_budat.

  LOOP AT pt_mseg INTO ls_mseg.
    ls_mvtpk-bwart = ls_mseg-bwart.
    ls_mvtpk-shkzg = ls_mseg-shkzg.
    COLLECT ls_mvtpk INTO lt_mvtpk.

    IF ls_mseg-werks IS NOT INITIAL.
      ls_bwkey-werks = ls_mseg-werks.
      COLLECT ls_bwkey INTO lt_bwkey.
    ENDIF.
    IF ls_mseg-umwrk IS NOT INITIAL.
      ls_bwkey-werks = ls_mseg-umwrk.
      COLLECT ls_bwkey INTO lt_bwkey.
    ENDIF.

    IF ls_mseg-ebeln IS NOT INITIAL.
      ls_ebeln-ebeln = ls_mseg-ebeln.
      COLLECT ls_ebeln INTO lt_ebeln.
    ENDIF.
  ENDLOOP.

  IF lt_mvtpk[] IS NOT INITIAL.
    SELECT bwart shkzg intr mvmtp16 FROM zmm_mvtp_rasp16
      INTO TABLE lt_mvtp
      FOR ALL ENTRIES IN lt_mvtpk[]
      WHERE bwart = lt_mvtpk-bwart AND shkzg = lt_mvtpk-shkzg.
  ENDIF.

  IF lt_bwkey[] IS NOT INITIAL.
    SELECT a~werks b~bwmod FROM t001w AS a
      INNER JOIN t001k AS b
      ON b~bwkey = a~bwkey
      INTO TABLE lt_t001k
      FOR ALL ENTRIES IN lt_bwkey[]
      WHERE a~werks = lt_bwkey-werks.
  ENDIF.

  IF lt_ebeln[] IS NOT INITIAL.
    SELECT ebeln bsakz FROM ekko
      INTO TABLE lt_ekko
      FOR ALL ENTRIES IN lt_ebeln[]
      WHERE ebeln = lt_ebeln-ebeln.
  ENDIF.

  LOOP AT pt_mseg INTO ls_mseg.
    READ TABLE lt_mvtp INTO ls_mvtp WITH TABLE KEY bwart = ls_mseg-bwart
                                                   shkzg = ls_mseg-shkzg.
    IF sy-subrc = 0.
      ls_mseg-mvmtp16 = ls_mvtp-mvmtp16.
      ls_mseg-intr = ls_mvtp-intr.
    ENDIF.

    READ TABLE lt_t001k INTO ls_t001k WITH TABLE KEY werks = ls_mseg-werks.
    IF sy-subrc = 0.
      ls_mseg-bwmod = ls_t001k-bwmod.
    ENDIF.
    READ TABLE lt_t001k INTO ls_t001k WITH TABLE KEY werks = ls_mseg-umwrk.
    IF sy-subrc = 0.
      ls_mseg-bwmod_u = ls_t001k-bwmod.
    ENDIF.

    READ TABLE lt_ekko INTO ls_ekko WITH TABLE KEY ebeln = ls_mseg-ebeln.
    IF sy-subrc = 0.
      ls_mseg-ebeln = ls_ekko-ebeln.
    ENDIF.

    MODIFY pt_mseg FROM ls_mseg.
  ENDLOOP.


*    SELECT mseg~mblnr matnr mvmtp16 werks umwrk t001k~bwmod t001k_u~bwmod AS bwmod_u mseg~bwart
*           bsakz menge mseg~shkzg ummat dmbtr
*      INTO CORRESPONDING FIELDS OF TABLE gt_mseg
*      FROM mseg
*      JOIN mkpf
*        ON mkpf~mblnr = mseg~mblnr
*       AND mkpf~mjahr = mseg~mjahr
*      LEFT JOIN zmm_mvtp_rasp16
*        ON zmm_mvtp_rasp16~bwart = mseg~bwart
*       AND zmm_mvtp_rasp16~shkzg = mseg~shkzg
*      JOIN t001k
*        ON t001k~bwkey = mseg~werks
*      LEFT JOIN t001k AS t001k_u
*        ON t001k_u~bwkey = mseg~umwrk
*      LEFT JOIN ekko
*        ON ekko~ebeln = mseg~ebeln
*     WHERE matnr IN gr_matnr
*       AND budat IN gr_budat.

ENDFORM.                    " GET_MSEG_DATA

* --{  RT0K909832.SAPERP-193
*&---------------------------------------------------------------------*
*&      Form  SAVE_HISTORY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM save_history
  USING    ic_mode           TYPE           c
           is_data           TYPE           zmmcorr16_hist
  CHANGING ei_retval         TYPE           i
           es_message        TYPE           bapiret2.

* -----------------------------------------------
  CLEAR: ei_retval, es_message.

  CASE  ic_mode.
    WHEN 'POST'.  "
      UPDATE zmmcorr16_hist
         SET belnr_st = is_data-belnr_st
             gjahr_st = is_data-gjahr_st
             monat_st = is_data-monat_st
             aenam    = is_data-aenam
             aedat    = is_data-aedat
             aetim    = is_data-aetim
       WHERE bukrs    = is_data-bukrs     AND
             matnr    = is_data-matnr     AND
             spmon    = is_data-spmon     AND
             belnr_fi = is_data-belnr_fi  AND
             gjahr_fi = is_data-gjahr_fi.
      IF sy-subrc <> 0.
        INSERT zmmcorr16_hist FROM is_data.
        IF sy-subrc <> 0.
*          es_message-type       = 'E'.
*          es_message-id         = 'ZMM'.
*          es_message-number     = 106.
*          es_message-message_v1 = 'Ошибки записи данных в таблицу'(005).
*          es_message-message_v2 = 'ZMMCORR16_HIST'.
*          es_message-message_v3 = ''.
*          es_message-message_v4 = ''.
          MESSAGE a135.
        ENDIF.
      ENDIF.

    WHEN  'STORNO'.  "
      UPDATE zmmcorr16_hist
         SET belnr_st = is_data-belnr_st
             gjahr_st = is_data-gjahr_st
             monat_st = is_data-monat_st
             aenam    = is_data-aenam
             aedat    = is_data-aedat
             aetim    = is_data-aetim
       WHERE belnr_fi = is_data-belnr_fi  AND
             gjahr_fi = is_data-gjahr_fi  AND
             BELNR_KOR16 = ''.
      IF sy-subrc <> 0.
*        es_message-type       = 'E'.
*        es_message-id         = 'ZMM'.
*        es_message-number     = 106.
*        es_message-message_v1 = 'Ошибки записи данных в таблицу'(005).
*        es_message-message_v2 = 'ZMMCORR16_HIST'.
*        es_message-message_v3 = ''.
*        es_message-message_v4 = ''.
        MESSAGE a135.
      ENDIF.

    WHEN OTHERS.
      RETURN.
  ENDCASE.
ENDFORM.                    " SAVE_HISTORY
* --}  RT0K909832.SAPERP-193

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  CONVTB_OUT2ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM convtb_out2alv
  USING
    it_data_out              TYPE           tt_output
    is_ctrl_alv              TYPE           t_ctrl_alv
  CHANGING
    et_data_alv              TYPE           tt_data_alv.

* -----------------------------------------------
  DATA:
    ls_data_out              TYPE           t_output   ,
    ls_data_alv              TYPE           t_data_alv ,
    lt_data_alv              TYPE           tt_data_alv.

  FIELD-SYMBOLS:
    <fs_data_alv>            TYPE           t_data_alv.
*
* -----------------------------------------------
  CLEAR: et_data_alv.

  LOOP AT it_data_out INTO ls_data_out.
    MOVE-CORRESPONDING ls_data_out TO ls_data_alv.
    APPEND ls_data_alv TO lt_data_alv.
  ENDLOOP.

* Изменение параметров отображения ALV на основе данных в таблице
  LOOP AT lt_data_alv ASSIGNING <fs_data_alv>.
* -- Для поля 'STOCK_16_FIN_KOR'
    CASE is_ctrl_alv-s_kor16-cell_mode.
      WHEN cc_cell_mode_chg.                          " C (Change)
        PERFORM mdfy_alv_cell_outpar_row
          USING    'STOCK_16_FIN_KOR'
                   cl_gui_alv_grid=>mc_style_enabled
          CHANGING <fs_data_alv>.

      WHEN OTHERS.                                    " D (Display)
        PERFORM mdfy_alv_cell_outpar_row
          USING    'STOCK_16_FIN_KOR'
                   cl_gui_alv_grid=>mc_style_disabled
          CHANGING <fs_data_alv>.
    ENDCASE.

* -- Для поля '...'
*   <...>
  ENDLOOP.

* Возврат значений
  et_data_alv = lt_data_alv.

ENDFORM.                    " CONVTB_OUT2ALV
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  CONVTB_ALV2OUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM convtb_alv2out
  USING
    it_data_alv              TYPE           tt_data_alv
  CHANGING
    et_data_out              TYPE           tt_output.

* -----------------------------------------------
  DATA:
    ls_data_out              TYPE           t_output,
    ls_data_alv              TYPE           t_data_alv,
    lt_data_out              TYPE           tt_output.
*
* -----------------------------------------------
  CLEAR: et_data_out.

  LOOP AT it_data_alv INTO ls_data_alv.
    CLEAR: ls_data_out.
    MOVE-CORRESPONDING ls_data_alv TO ls_data_out.
    APPEND ls_data_out TO lt_data_out.
  ENDLOOP.

* Возврат значений
  et_data_out = lt_data_out.
ENDFORM.                    " CONVTB_ALV2OUT
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  MDFY_ALV_CELL_OUTPAR_ROW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM mdfy_alv_cell_outpar_row
  USING
    ic_fname                 TYPE           c
    icr_cell_mode            TYPE           raw4
  CHANGING
    es_data_alv              TYPE           t_data_alv.

* -----------------------------------------------
  DATA:
    ls_styles                TYPE           lvc_s_styl.
  DATA:
    lv_r_cell_mode           TYPE           raw4.

  FIELD-SYMBOLS:
    <fs_styles>              TYPE           lvc_s_styl.
*
* -----------------------------------------------
* Инициализация
*  es_data_out не очищается!!!
  CASE ic_fname.
    WHEN 'STOCK_16_FIN_KOR'.
* -- Определяется действующий режим для поля
      CLEAR: lv_r_cell_mode.
      IF  icr_cell_mode  = cl_gui_alv_grid=>mc_style_enabled  AND
          ( (     es_data_alv-belnr_kor16    IS INITIAL AND          " ----  RT0K915819.ERP-266
                  es_data_alv-gjahr_kor16    IS INITIAL )   OR       " ----  RT0K915819.ERP-266
            ( NOT es_data_alv-belnr_kor16    IS INITIAL AND          " ----  RT0K915819.ERP-266
              NOT es_data_alv-gjahr_kor16    IS INITIAL AND          " ----  RT0K915819.ERP-266
              NOT es_data_alv-belnr_kor16_st IS INITIAL AND          " ----  RT0K915819.ERP-266
              NOT es_data_alv-gjahr_kor16_st IS INITIAL ) )   AND    " ----  RT0K915819.ERP-266
          es_data_alv-status = icon_complete.                 " Статус - завершен (в табл.ZMMCORR16)
        lv_r_cell_mode = cl_gui_alv_grid=>mc_style_enabled.
      ELSE.
        lv_r_cell_mode = cl_gui_alv_grid=>mc_style_disabled.
      ENDIF.

* -- Запись признака режима для соотв.поля
      READ TABLE es_data_alv-cellstyles ASSIGNING <fs_styles>
        WITH TABLE KEY fieldname = ic_fname.
      IF sy-subrc <> 0.
        CLEAR ls_styles.
        ls_styles-fieldname = ic_fname.
        ls_styles-style = lv_r_cell_mode.
        INSERT ls_styles INTO TABLE es_data_alv-cellstyles.
      ELSE.
        <fs_styles>-style  = lv_r_cell_mode.
        UNASSIGN <fs_styles>.
      ENDIF.

    WHEN OTHERS.
*     <...do_nothing>
  ENDCASE.

ENDFORM.                    " MDFY_ALV_CELL_OUTPAR_ROW
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  OUTPUT_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM output_alv .
* -----------------------------------------------
*
* -----------------------------------------------
  _show_statusbar_message '' 'Формирование вывода...'(079).
  CLEAR: gs_ctrl_alv.

* Инициализация ALV-Контролей
  PERFORM init_alv_ctrl
    CHANGING  gs_ctrl_alv.

* Преобразование данных в формат для вывода в редактируемом ALV
  PERFORM convtb_out2alv
    USING     gt_output[]
              gs_ctrl_alv
    CHANGING  gt_data_alv.

* ВЫвод ALV Grid
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program                = sy-cprog
      i_callback_pf_status_set          = 'PF_STATUS_SET'
      i_callback_user_command           = 'USER_COMMAND'
      is_layout_lvc                     = gs_ctrl_alv-s_layo
      it_fieldcat_lvc                   = gs_ctrl_alv-t_fcat
      it_sort_lvc                       = gs_ctrl_alv-t_sort
      i_save                            = 'A'
*    IMPORTING
*      E_EXIT_CAUSED_BY_CALLER           =
*      ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = gt_data_alv
    EXCEPTIONS
      OTHERS                            = 2.
  IF sy-subrc <> 0.
    MESSAGE 'Ошибка при выводе ALV'(074) TYPE 'A'.
  ENDIF.

ENDFORM.                    " OUTPUT_ALV
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  PREP_ALV_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM prep_alv_fcat
  CHANGING
    et_fcat                  TYPE           lvc_t_fcat.

* -----------------------------------------------
  DATA:
    lt_fcat                  TYPE           lvc_t_fcat,
    lv_c_fname               TYPE           lvc_s_fcat-fieldname,
    lv_i_col_pos             TYPE           lvc_s_fcat-col_pos.

* ----
  FIELD-SYMBOLS:
    <fs_fcat>                TYPE           lvc_s_fcat.

* -----------------------------------------------
  DEFINE alv_fcat_mdfyrow.
    read table lt_fcat with key fieldname = &1 assigning <fs_fcat>.
    if sy-subrc <> 0.
      append initial line to lt_fcat assigning <fs_fcat>.
      <fs_fcat>-fieldname = &1.
    endif.
  END-OF-DEFINITION.

* -----------------------------------------------
  CLEAR: et_fcat.

* Инициализация Fieldcat
* -- Retrieve данных из DDIC
  PERFORM get_alv_ddic_fcat
    USING    'ZMMCORR16'
    CHANGING lt_fcat.

* -- Сброc признаков по всем полям
  LOOP AT lt_fcat ASSIGNING <fs_fcat>.
    CLEAR <fs_fcat>-col_pos.                          " Очистка № колонки в ALV
    <fs_fcat>-no_out  = abap_true.                    " Поле не Выводится в ALV - YES
  ENDLOOP.

* Установка для полей парметров вывода в ALV
  DO 1 TIMES.
    CHECK lines( lt_fcat ) > 0.

* Поля ALV по порядку при выводе на экран:
*    DO 37 TIMES.  	              " ----   RT0K916109.RTKDEVSAP-33, Закомментировано
    DO 39 TIMES.                  " ----   RT0K916109.RTKDEVSAP-33
      CLEAR:  lv_c_fname.
      UNASSIGN <fs_fcat>.
      lv_i_col_pos = sy-index.

      CASE lv_i_col_pos.
* 1. STATUS
        WHEN 1.
          lv_c_fname = 'STATUS'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                      " Номер столбца
            <fs_fcat>-no_out    = abap_false  .                      " Поле выводится
            <fs_fcat>-key       = abap_true   .                      " Поле ключевое
            <fs_fcat>-icon      = abap_true   .                      " отобр.поля как иконки
            <fs_fcat>-no_zero   = abap_false  .                      " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false  .                      " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 4           .                      " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Стс'(032)  .                      " Метка поля в ALV
            <fs_fcat>-tabname   = '1'         .                      "
          ENDIF.

* 2. WARNING
        WHEN 2.
          lv_c_fname = 'WARNING'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                      " Номер столбца
            <fs_fcat>-no_out    = abap_false  .                      " Поле выводится
            <fs_fcat>-key       = abap_true   .                      " Поле ключевое
            <fs_fcat>-icon      = abap_true   .                      " отобр.поля как иконки
            <fs_fcat>-no_zero   = abap_false  .                      " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false  .                      " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 4           .                      " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Рсх'(033)  .                      " Метка поля в ALV
            <fs_fcat>-tabname   = '1'         .                      "
          ENDIF.

* 3. MATNR
        WHEN 3.
          lv_c_fname = 'MATNR'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos  .                    " Номер столбца
            <fs_fcat>-no_out    = abap_false    .                    " Поле выводится
            <fs_fcat>-key       = abap_true     .                    " Поле ключевое
            <fs_fcat>-no_zero   = abap_false    .                    " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false    .                    " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 12            .                    " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Артикул'(034).                    " Метка поля в ALV
          ENDIF.
* 4. MAKTX
        WHEN 4.
          lv_c_fname = 'MAKTX'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos        .              " Номер столбца
            <fs_fcat>-no_out    = abap_false          .              " Поле выводится
            <fs_fcat>-key       = abap_true           .              " Поле ключевое
            <fs_fcat>-no_zero   = abap_false          .              " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false          .              " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 40                  .              " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Краткий Текст'(035).              " Метка поля в ALV
            <fs_fcat>-tabname   = '1'                 .              "
          ENDIF.

* 5. LIFNR
        WHEN 5.
          lv_c_fname = 'LIFNR'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos    .                  " Номер столбца
            <fs_fcat>-no_out    = abap_false      .                  " Поле выводится
            <fs_fcat>-key       = abap_false      .                  " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_false      .                  " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false      .                  " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 10              .                  " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Поставщик'(036).                  " Метка поля в ALV
          ENDIF.

* 6. NAME
        WHEN 6.
          lv_c_fname = 'NAME'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                      " Номер столбца
            <fs_fcat>-no_out    = abap_false  .                      " Поле выводится
            <fs_fcat>-key       = abap_false  .                      " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_false  .                      " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false  .                      " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 20          .                      " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Имя'(037)  .                      " Метка поля в ALV
            <fs_fcat>-tabname   = '1'         .                      "
          ENDIF.

* 7. STOCK_41
        WHEN 7.
          lv_c_fname = 'STOCK_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos      .                " Номер столбца
            <fs_fcat>-no_out    = abap_true         .                " Поле скрыто
            <fs_fcat>-key       = abap_false        .                " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true         .                " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true         .                " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                .                " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ОстНачПер41'(038).                " Метка поля в ALV
            <fs_fcat>-tabname   = '1'               .                "
          ENDIF.

* 8. GRS_41
        WHEN 8.
          lv_c_fname = 'GRS_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos        .              " Номер столбца
            <fs_fcat>-no_out    = abap_true           .              " Поле скрыто
            <fs_fcat>-key       = abap_false          .              " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true           .              " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true           .              " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                  .              " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ПостОтПствщ41'(039).              " Метка поля в ALV
            <fs_fcat>-tabname   = '1'                 .              "
          ENDIF.

* 9. GRO_41
        WHEN 9.
          lv_c_fname = 'GRO_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos       .               " Номер столбца
            <fs_fcat>-no_out    = abap_true          .               " Поле скрыто
            <fs_fcat>-key       = abap_false         .               " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true          .               " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true          .               " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 13                 .               " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ПрочПоступ41'(040).               " Метка поля в ALV
            <fs_fcat>-tabname   = '1'                .               "
          ENDIF.

* 10. GR_16
        WHEN 10.
          lv_c_fname = 'GR_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos      .                " Номер столбца
            <fs_fcat>-no_out    = abap_true         .                " Поле скрыто
            <fs_fcat>-key       = abap_false        .                " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true         .                " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true         .                " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                .                " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ПостЗаПер16'(041).                " Метка поля в ALV
            <fs_fcat>-tabname   = '1'               .                "
          ENDIF.

* 11. GI_9002
        WHEN 11.
          lv_c_fname = 'GI_9002'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos   .                   " Номер столбца
            <fs_fcat>-no_out    = abap_true      .                   " Поле скрыто
            <fs_fcat>-key       = abap_false     .                   " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true      .                   " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true      .                   " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17             .                   " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Спис9002'(042).                   " Метка поля в ALV
            <fs_fcat>-tabname   = '1'            .                   "
          ENDIF.

* 12. GI_9102
        WHEN 12.
          lv_c_fname = 'GI_9102'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos   .                   " Номер столбца
            <fs_fcat>-no_out    = abap_true      .                   " Поле скрыто
            <fs_fcat>-key       = abap_false     .                   " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true      .                   " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true      .                   " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17             .                   " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Спис9102'(043).                   " Метка поля в ALV
            <fs_fcat>-tabname   = '1'            .                   "
          ENDIF.

* 13. GI_94
        WHEN 13.
          lv_c_fname = 'GI_94'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                      " Номер столбца
            <fs_fcat>-no_out    = abap_true    .                     " Поле скрыто
            <fs_fcat>-key       = abap_false   .                     " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true    .                     " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true    .                     " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17           .                     " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Спис94'(044).                     " Метка поля в ALV
            <fs_fcat>-tabname   = '1'          .                     "
          ENDIF.

* 14. W_STOCK_41
        WHEN 14.
          lv_c_fname = 'W_STOCK_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos         .             " Номер столбца
            <fs_fcat>-no_out    = abap_false           .             " Поле выводится
            <fs_fcat>-key       = abap_false           .             " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true            .             " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true            .             " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                   .             " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумОстНачПер41'(031).             " Метка поля в ALV
          ENDIF.

* 15. W_GRS_41
        WHEN 15.
          lv_c_fname = 'W_GRS_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos           .           " Номер столбца
            <fs_fcat>-no_out    = abap_false             .           " Поле выводится
            <fs_fcat>-key       = abap_false             .           " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true              .           " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true              .           " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 18                     .           " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумПостОтПствщ41'(030).           " Метка поля в ALV
          ENDIF.

* 16. W_GRO_41
        WHEN 16.
          lv_c_fname = 'W_GRO_41'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos          .            " Номер столбца
            <fs_fcat>-no_out    = abap_false            .            " Поле выводится
            <fs_fcat>-key       = abap_false            .            " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true             .            " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true             .            " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 18                    .            " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумПрочПоступ41'(029).            " Метка поля в ALV
          ENDIF.

* 17. W_STOCK_16
        WHEN 17.
          lv_c_fname = 'W_STOCK_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos         .             " Номер столбца
            <fs_fcat>-no_out    = abap_false           .             " Поле выводится
            <fs_fcat>-key       = abap_false           .             " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true            .             " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true            .             " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                   .             " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумОстНачПер16'(028).             " Метка поля в ALV
          ENDIF.

* 18. W_GR_16
        WHEN 18.
          lv_c_fname = 'W_GR_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos         .             " Номер столбца
            <fs_fcat>-no_out    = abap_false           .             " Поле выводится
            <fs_fcat>-key       = abap_false           .             " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true            .             " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true            .             " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                   .             " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумПостЗаПер16'(027).             " Метка поля в ALV
          ENDIF.

* 19. KOEF_OUT
        WHEN 19.
          lv_c_fname = 'KOEF_OUT'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                      " Номер столбца
            <fs_fcat>-no_out    = abap_false  .                      " Поле выводится
            <fs_fcat>-key       = abap_false  .                      " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_false  .                      " Отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false  .                      " НЕ суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17          .                      " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Коэф'(026) .                      " Метка поля в ALV
            <fs_fcat>-tabname   = '1'         .                      "
          ENDIF.

* ----------------- MM: Ретрокоррекция, деление по счетам 9002
* 20. W_GI_9002
        WHEN 20.
          lv_c_fname = 'W_GI_9002'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos         .             " Номер столбца
            <fs_fcat>-no_out    = abap_false           .             " Поле выводится
            <fs_fcat>-key       = abap_false           .             " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true            .             " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true            .             " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                   .             " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписТов9002'(025).             " Метка поля в ALV
          ENDIF.

* 21. W_GI_900201
        WHEN 21.
          lv_c_fname = 'W_GI_900201'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos           .           " Номер столбца
            <fs_fcat>-no_out    = abap_false             .           " Поле выводится
            <fs_fcat>-key       = abap_false             .           " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true              .           " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true              .           " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 19                     .           " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписТов900201'(024).           " Метка поля в ALV
          ENDIF.

* 22. W_GI_900202
        WHEN 22.
          lv_c_fname = 'W_GI_900202'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos           .           " Номер столбца
            <fs_fcat>-no_out    = abap_false             .           " Поле выводится
            <fs_fcat>-key       = abap_false             .           " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true              .           " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true              .           " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 19                     .           " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписТов900202'(023).           " Метка поля в ALV
          ENDIF.

* ----------------- MM: Ретрокоррекция, деление по счетам 9002
* 23. W_GI_9102
        WHEN 23.
          lv_c_fname = 'W_GI_9102'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos            .          " Номер столбца
            <fs_fcat>-no_out    = abap_false              .          " Поле выводится
            <fs_fcat>-key       = abap_false              .          " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true               .          " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true               .          " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                      .          " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписТовара9102'(014).          " Метка поля в ALV
          ENDIF.

* 24. W_GI_94
        WHEN 24.
          lv_c_fname = 'W_GI_94'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos          .            " Номер столбца
            <fs_fcat>-no_out    = abap_false            .            " Поле выводится
            <fs_fcat>-key       = abap_false            .            " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true             .            " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true             .            " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                    .            " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписТовара94'(013).            " Метка поля в ALV
          ENDIF.

* ----------------- MM: Ретрокоррекция, деление по счетам 9002
* 25. W_GI_9002_16
        WHEN 25.
          lv_c_fname = 'W_GI_9002_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos          .            " Номер столбца
            <fs_fcat>-no_out    = abap_false            .            " Поле выводится
            <fs_fcat>-key       = abap_false            .            " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true             .            " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true             .            " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                    .            " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписОткл9002'(012).            " Метка поля в ALV
          ENDIF.

* 26. W_GI_900201_16
        WHEN 26.
          lv_c_fname = 'W_GI_900201_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos            .          " Номер столбца
            <fs_fcat>-no_out    = abap_false              .          " Поле выводится
            <fs_fcat>-key       = abap_false              .          " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true               .          " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true               .          " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 19                      .          " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписОткл900201'(011).          " Метка поля в ALV
          ENDIF.

* 27. W_GI_900202_16
        WHEN 27.
          lv_c_fname = 'W_GI_900202_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos            .          " Номер столбца
            <fs_fcat>-no_out    = abap_false              .          " Поле выводится
            <fs_fcat>-key       = abap_false              .          " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true               .          " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true               .          " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 19                      .          " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписОткл900202'(010).          " Метка поля в ALV
          ENDIF.

* ----------------- MM: Ретрокоррекция, деление по счетам 9002
* 28. W_GI_9102_16
        WHEN 28.
          lv_c_fname = 'W_GI_9102_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos          .            " Номер столбца
            <fs_fcat>-no_out    = abap_false            .            " Поле выводится
            <fs_fcat>-key       = abap_false            .            " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true             .            " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true             .            " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                    .            " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписОткл9102'(009).            " Метка поля в ALV
          ENDIF.

* 29. W_GI_94_16
        WHEN 29.
          lv_c_fname = 'W_GI_94_16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos        .              " Номер столбца
            <fs_fcat>-no_out    = abap_false          .              " Поле выводится
            <fs_fcat>-key       = abap_false          .              " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true           .              " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true           .              " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                  .              " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумСписОткл94'(008).              " Метка поля в ALV
          ENDIF.

* 30. W_STOCK_16_FIN
        WHEN 30.
          lv_c_fname = 'W_STOCK_16_FIN'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos         .             " Номер столбца
            <fs_fcat>-no_out    = abap_false           .             " Поле выводится
            <fs_fcat>-key       = abap_false           .             " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true            .             " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true            .             " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                   .             " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СумОстКонПер16'(022).             " Метка поля в ALV
          ENDIF.

* -------------------------------------------------------------------------------
* 31. BELNR_FI
        WHEN 31.
          lv_c_fname = 'BELNR_FI'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos                         .  " Номер столбца
            <fs_fcat>-no_out    = abap_false                           .  " Поле выводится
            <fs_fcat>-key       = abap_false                           .  " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                            .  " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                           .  " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 12                                   .  " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Проводка16/9*'(021)                 .  " Метка поля в ALV
            <fs_fcat>-reptext   = 'Финансовый документ 16/9*'(096)     .  " Текст Вспл.подсказки  " ----   RT0K916270.RTKDEVSAP-33
          ENDIF.

* 32. GJAHR_FI
        WHEN 32.
          lv_c_fname = 'GJAHR_FI'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname  .
            <fs_fcat>-col_pos   = lv_i_col_pos                           .   " Номер столбца
*            <fs_fcat>-no_out    = abap_true                              .  " Поле скрыто         " ----   RT0K916270.RTKDEVSAP-33
            <fs_fcat>-no_out    = abap_false                             .   " Поле отображается   " ----   RT0K916270.RTKDEVSAP-33
            <fs_fcat>-key       = abap_false                             .   " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                              .   " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                             .   " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 5                                      .   " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ГдДкм16/9*'(020)                           .   " Метка поля в ALV
            <fs_fcat>-reptext   = 'Год финанасового документа 16/9*'(095).   " Текст Вспл.подсказки  " ----   RT0K916270.RTKDEVSAP-33
          ENDIF.

* 33. BELNR_ST
        WHEN 33.
          lv_c_fname = 'BELNR_ST'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos               .       " Номер столбца
            <fs_fcat>-no_out    = abap_false                 .       " Поле выводится
            <fs_fcat>-key       = abap_false                 .       " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                  .       " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                 .       " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 12                         .       " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'Сторно16/9*'(019)         .       " Метка поля в ALV
            <fs_fcat>-reptext   = 'Фин.док.сторно 16/9*'(094).       " Текст Вспл.подсказки  " ----   RT0K916270.RTKDEVSAP-33
          ENDIF.

* 34. GJAHR_ST
        WHEN 34.
          lv_c_fname = 'GJAHR_ST'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos                   .   " Номер столбца
*            <fs_fcat>-no_out    = abap_true                     .   " Поле скрыто         " ----   RT0K916270.RTKDEVSAP-33
            <fs_fcat>-no_out    = abap_false                     .   " Поле отображается   " ----   RT0K916270.RTKDEVSAP-33
            <fs_fcat>-key       = abap_false                     .   " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                      .   " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                     .   " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 5                              .   " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ГдСтрн16/9*'(092)             .   " Метка поля в ALV      " ----   RT0K916270.RTKDEVSAP-33
            <fs_fcat>-reptext   = 'Год фин.док.сторно 16/9*'(093).   " Текст Вспл.подсказки  " ----   RT0K916270.RTKDEVSAP-33
          ENDIF.


* 35. STOCK_16_FIN_KOR
        WHEN 35.
          lv_c_fname = 'STOCK_16_FIN_KOR'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos        .              " Номер столбца
            <fs_fcat>-no_out    = abap_false          .              " Поле выводится
            <fs_fcat>-key       = abap_false          .              " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true           .              " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_true           .              " Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 17                  .              " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'КоррОстКнцПер'(017).              " Метка поля в ALV
            <fs_fcat>-reptext   = 'Сумма бух.документа кррекции'(091). " Текст Вспл.подсказки  " ----   RT0K916270.RTKDEVSAP-33
*            <fs_fcat>-edit      = abap_true           .              " Поле редактируеется в ALV
          ENDIF.

* 36. BELNR_KOR16
        WHEN 36.
          lv_c_fname = 'BELNR_KOR16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos       .                    " Номер столбца
            <fs_fcat>-no_out    = abap_false         .                    " Поле выводится
            <fs_fcat>-key       = abap_false         .                    " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true          .                    " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false         .                    " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 12                 .                    " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'НмрБухДкКорр'(016).                    " Метка поля в ALV
            <fs_fcat>-reptext   = 'Номер бух.документа кррекции'(078).    " Текст Вспл.подсказки
          ENDIF.

* 37. GJAHR_KOR16
        WHEN 37.
          lv_c_fname = 'GJAHR_KOR16'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos.                           " Номер столбца
            <fs_fcat>-no_out    = abap_false  .                           " Поле выводится
            <fs_fcat>-key       = abap_false  .                           " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true   .                           " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false  .                           " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 5           .                           " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'ГдКор'(015).                           " Метка поля в ALV
            <fs_fcat>-reptext   = 'Год бух.документа кррекции'(080).      " Текст Вспл.подсказки
          ENDIF.

* 38. BELNR_KOR16_ST
        WHEN 38.
          lv_c_fname = 'BELNR_KOR16_ST'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos                              .  " Номер столбца
            <fs_fcat>-no_out    = abap_false                                .  " Поле выводится
            <fs_fcat>-key       = abap_false                                .  " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                                 .  " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                                .  " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 12                                        .  " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СтрнНмБухДкКорр'(048)                    .  " Метка поля в ALV
            <fs_fcat>-reptext   = 'Номер бух.документа кррекции сторно'(054).  " Текст Вспл.подсказки
          ENDIF.

* 39. GJAHR_KOR16_ST
        WHEN 39.
          lv_c_fname = 'GJAHR_KOR16_ST'.
          alv_fcat_mdfyrow  lv_c_fname.
          IF <fs_fcat> IS ASSIGNED AND <fs_fcat>-fieldname = lv_c_fname.
            <fs_fcat>-col_pos   = lv_i_col_pos                      .          " Номер столбца
            <fs_fcat>-no_out    = abap_false                        .          " Поле выводится
            <fs_fcat>-key       = abap_false                        .          " Поле НЕ ключевое
            <fs_fcat>-no_zero   = abap_true                         .          " НЕ отобр.в зн.поля ведущие нули
            <fs_fcat>-do_sum    = abap_false                        .          " НЕ Суммировать значения в ALV по полю
            <fs_fcat>-outputlen = 5                                 .          " Длина вывода поля в ALV
            <fs_fcat>-coltext   = 'СтрнГдКор'(049)                  .          " Метка поля в ALV
            <fs_fcat>-reptext   = 'Год бух.док.кррекции сторно'(059).          " Текст Вспл.подсказки
          ENDIF.

        WHEN OTHERS.
          CONTINUE.
      ENDCASE.
    ENDDO.

    SORT  lt_fcat BY col_pos.
  ENDDO.

  et_fcat = lt_fcat.
ENDFORM.                    " PREP_ALV_FCAT
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  GET_ALV_DDIC_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM get_alv_ddic_fcat
  USING
    ic_tabname               TYPE           c
  CHANGING
    et_fcat                  TYPE           lvc_t_fcat.

* ---------------------------
  DATA:
    lv_c_tabname             TYPE           dd02l-tabname,
    lr_cx_root               TYPE REF TO    cx_root,
    lv_s_msgtext             TYPE           string .
*
* ---------------------------
  CLEAR et_fcat.
  lv_c_tabname = ic_tabname.

  TRY.
      CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
        EXPORTING
          i_buffer_active        = abap_false
          i_structure_name       = ic_tabname
          i_bypassing_buffer     = abap_true
*         i_internal_tabname     = 'LTB_MAIN'
*         i_client_never_display = 'X'
        CHANGING
          ct_fieldcat            = et_fcat
        EXCEPTIONS
*         inconsistent_interface = 1
*         program_error          = 2
          OTHERS                 = 4.
      IF sy-subrc <> 0.
        CONCATENATE
          'Ошибка при получении объекта Field Catalog для структуры'(075) lv_c_tabname
            INTO lv_s_msgtext SEPARATED BY space.
        MESSAGE lv_s_msgtext TYPE 'A'.        " Exit program
      ENDIF.

    CATCH cx_root INTO lr_cx_root           ##CATCH_ALL.
      lv_s_msgtext = lr_cx_root->get_text( ).
      MESSAGE lv_s_msgtext TYPE 'A'.        " Exit program
  ENDTRY.

ENDFORM.                    " GET_ALV_DDIC_FCAT
* ---- } RT0K915737.ERP-259

** ---- { RT0K915737.ERP-259
**&---------------------------------------------------------------------*
**&      Form  PREP_ALV_FCAT_MDFYROW
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM prep_alv_fcat_mdfyrow
*  USING
*    is_fcat                  TYPE           lvc_s_fcat
*  CHANGING
*    et_fcat                  TYPE           lvc_t_fcat.
** -----------------------------------------------
*  DATA:
*    ls_details               TYPE           abap_compdescr    ,
*    lt_details               TYPE           abap_compdescr_tab,
*    lr_descr                 TYPE REF TO    cl_abap_structdescr.
*
*  FIELD-SYMBOLS:
*   <fs_any_src>              TYPE           any       ,
*   <fs_any_dst>              TYPE           any       ,
*   <fs_fcat>                 TYPE           lvc_s_fcat.
**
** -----------------------------------------------
**  et_fcat  - не очищатся!!!!
*
*  IF is_fcat-fieldname IS INITIAL. RETURN. ENDIF.
*
*  READ TABLE et_fcat ASSIGNING <fs_fcat>
*    WITH KEY fieldname = is_fcat-fieldname.
*  IF sy-subrc <> 0. " поле отсутствует в Field Catalog'е: добавление параметров вывода поля в ALV
*    APPEND is_fcat TO et_fcat.
*
*  ELSE.             " поле приутствует в Field Catalog'е: Изменение параметров вывода поля в ALV
**  -- получение компонентов структуры
*    lr_descr   ?= cl_abap_typedescr=>describe_by_data( is_fcat ).
*    lt_details = lr_descr->components[].
*    LOOP AT lt_details INTO ls_details.
*      DO 1 TIMES.
*        ASSIGN COMPONENT ls_details-name OF STRUCTURE is_fcat   TO <fs_any_src>. CHECK sy-subrc = 0.
*        CHECK NOT <fs_any_src> IS INITIAL.
*        ASSIGN COMPONENT ls_details-name OF STRUCTURE <fs_fcat> TO <fs_any_dst>. CHECK sy-subrc = 0.
*        <fs_any_dst> = <fs_any_src>.    " Если в стр-ре-источнике поле заполлнено -> перезапись в стр-ре-приемнике
*      ENDDO.
*      UNASSIGN: <fs_any_dst>, <fs_any_src>.
*    ENDLOOP.
*  ENDIF.
*
*ENDFORM.                    " PREP_ALV_FCAT_MDFYROW
** ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  PREP_ALV_SORTING
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM prep_alv_sorting
  CHANGING
    et_sort                  TYPE           lvc_t_sort.

* -----------------------------------------------
  DATA:
    ls_sort                  TYPE           lvc_s_sort.
*
* -----------------------------------------------
  CLEAR: et_sort.

  DO 1 TIMES.
    CASE sy-index.
      WHEN 1.
        CLEAR ls_sort.
        ls_sort-spos      = sy-index.
        ls_sort-fieldname = 'MATNR'.
        ls_sort-up        = abap_true.
        ls_sort-subtot    = abap_false.
        APPEND ls_sort TO et_sort.
      WHEN OTHERS.
*       <...>
    ENDCASE.
  ENDDO.

ENDFORM.                    " PREP_ALV_SORTING
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  INIT_ALV_CTRL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM init_alv_ctrl
  CHANGING
    es_ctrl_alv              TYPE           t_ctrl_alv .
* -----------------------------------------------
*
* -----------------------------------------------
  CLEAR: es_ctrl_alv.

* Поготовка объектов ALV:
* -- ALV: Fieldcatalog
  PERFORM prep_alv_fcat
    CHANGING es_ctrl_alv-t_fcat.

* -- ALV: Layout
  es_ctrl_alv-s_layo-zebra      = abap_true   .
  es_ctrl_alv-s_layo-totals_bef = abap_true   .       " Вывод строк промежуточного копирования ПЕРЕД строками ALV
  es_ctrl_alv-s_layo-info_fname = 'ROWCOLOR'  .       " ROW colouring
  es_ctrl_alv-s_layo-ctab_fname = 'CELLCOLORS'.       " Cell colouring
  es_ctrl_alv-s_layo-stylefname = 'CELLSTYLES'.       " Cell style
  es_ctrl_alv-s_layo-box_fname  = 'SELECTED'  .       " Selected rows contain 'X'

* -- ALV: Sotring table
  PERFORM prep_alv_sorting
    CHANGING es_ctrl_alv-t_sort.

* -- ALV Флаги
  es_ctrl_alv-s_kor16-cell_mode = cc_cell_mode_dsp.
ENDFORM.                    " INIT_ALV_CTRL
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  CONV_ALV_FCAT4CM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM conv_alv_fcat4cm
  USING
    it_fcat_src              TYPE           lvc_t_fcat
  CHANGING
    value(et_fcat_dst)       TYPE           lvc_t_fcat.

* -----------------------------------------------
  FIELD-SYMBOLS:
    <fs_fcat>                TYPE           lvc_s_fcat.
*
* -----------------------------------------------
* -- инициализация
  et_fcat_dst = it_fcat_src.

  LOOP AT et_fcat_dst ASSIGNING <fs_fcat>.
* -- отмена суммирования по полям
    DO 1 TIMES.
      CHECK <fs_fcat>-do_sum = abap_true.
      <fs_fcat>-do_sum = abap_false.
    ENDDO.

** -- ...
*    DO 1 TIMES.
*    ENDDO.

  ENDLOOP.
ENDFORM.                    " CONV_ALV_FCAT4CM
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  CONV_ALV_FCAT4DM
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM conv_alv_fcat4dm
  USING
    it_fcat_src              TYPE           lvc_t_fcat
  CHANGING
    et_fcat_dst              TYPE           lvc_t_fcat.

* -----------------------------------------------
  DATA:
    ls_fcat                  TYPE           lvc_s_fcat.

  FIELD-SYMBOLS:
    <fs_fcat>                TYPE           lvc_s_fcat.
*
* -----------------------------------------------
* -- инициализация
*  et_fcat_dst не очищается!!!

  LOOP AT it_fcat_src  INTO ls_fcat.
    READ TABLE et_fcat_dst ASSIGNING <fs_fcat>
      WITH KEY fieldname = ls_fcat-fieldname.
    CHECK sy-subrc = 0.

* -- восстановление суммирования по полям
    DO 1 TIMES.
      CHECK ls_fcat-do_sum = abap_true.
      <fs_fcat>-do_sum = ls_fcat-do_sum.
    ENDDO.

** -- ...
*    DO 1 TIMES.
*    ENDDO.

  ENDLOOP.

ENDFORM.                    " CONV_ALV_FCAT4DM
* ---- } RT0K915737.ERP-259

* ---- } RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  TRGR_ALV_KOR16_MODE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM trgr_alv_kor16_mode
  CHANGING
    es_ctrl_alv       TYPE    t_ctrl_alv.

* -----------------------------------------------
  DATA:
    lv_r_cell_mode_kor16       TYPE           raw4      ,
    ls_stable                  TYPE           lvc_s_stbl.
*    lt_fcat                    TYPE           lvc_t_fcat,
*    lt_sel_cells               TYPE           lvc_t_cell.

  FIELD-SYMBOLS:
    <fs_fcat>                  TYPE           lvc_s_fcat,
    <fs_data_alv>              TYPE           t_data_alv.
*
* -----------------------------------------------
* инициализация
*  es_ctrl_alv   не очищается!!!

* Получение текущих значений объектов управления ALV
* -- Field Catalog: trigger entire column to Dispaly/ Change...
* Текущее значение FIELDCAT
  es_ctrl_alv-r_alv->get_frontend_fieldcatalog(
    IMPORTING et_fieldcatalog = es_ctrl_alv-t_fcat* ).

* Модификация объектов управления ALV
* ---- Объекты ALV (Field Catalog, Layout, Selected cell ) получаются из ALV при выполнении USER_COMMAND
* ---- Установка режима для ALV (KORR16)
  DO 1 TIMES.
    READ TABLE es_ctrl_alv-t_fcat* ASSIGNING <fs_fcat>
      WITH KEY fieldname = 'STOCK_16_FIN_KOR'.
    CHECK sy-subrc = 0.

    CASE es_ctrl_alv-s_kor16-cell_mode.
      WHEN cc_cell_mode_chg.                        " 'C' (Change) cc_cell_mode_chg
        <fs_fcat>-edit       = abap_true.
        lv_r_cell_mode_kor16 = cl_gui_alv_grid=>mc_style_enabled.

* ------ Конвертация Field Catalog для режима ИЗМЕНЕНИЯ ALV
*       - Отмена суммирования по колонкам [DUMP!], ...
        PERFORM conv_alv_fcat4cm
          USING     es_ctrl_alv-t_fcat*
          CHANGING  es_ctrl_alv-t_fcat*.

      WHEN OTHERS.                                  " 'D' (Dispaly) cc_cell_mode_dsp.
        <fs_fcat>-edit       = abap_false.
        lv_r_cell_mode_kor16 = cl_gui_alv_grid=>mc_style_disabled.

* ------ Конвертация Field Catalog для режима ПРОСМОТРА ALV
*       - Восстановление суммирования по колонкам в режиме просмотра

* -------- Если нет сохраненного последнего FCAT для Display -> использ.оригинальный
        IF lines( es_ctrl_alv-t_fcat_lst_dm* ) = 0.
          es_ctrl_alv-t_fcat_lst_dm* = es_ctrl_alv-t_fcat.
        ENDIF.

* -------- ...
        PERFORM conv_alv_fcat4dm
          USING     es_ctrl_alv-t_fcat_lst_dm*
          CHANGING  es_ctrl_alv-t_fcat*.
    ENDCASE.
  ENDDO.

* ---- Установка режима для ALV (...)
  DO 1 TIMES       ##NEEDED.
*       <...>
  ENDDO.

* -- Set Style for cell particularly
* Изменение параметров отображения ALV на основе данных в таблице
  LOOP AT gt_data_alv ASSIGNING <fs_data_alv>.
* ---- Для поля 'STOCK_16_FIN_KOR'
    PERFORM mdfy_alv_cell_outpar_row
      USING    'STOCK_16_FIN_KOR'
               lv_r_cell_mode_kor16
      CHANGING <fs_data_alv>.

* ---- Для поля '...'
*       <...>
  ENDLOOP.

* Применение к ALV модифицированных объектов управления
* -- Field Catalog
  IF lines( es_ctrl_alv-t_fcat* ) > 0.
    es_ctrl_alv-r_alv->set_frontend_fieldcatalog(
      EXPORTING it_fieldcatalog =  es_ctrl_alv-t_fcat* ).
  ENDIF.

* -- <...>

* Refresh table Display
  ls_stable-row = ls_stable-col = abap_true.
  es_ctrl_alv-r_alv->refresh_table_display(
    EXPORTING  is_stable      = ls_stable
    EXCEPTIONS OTHERS         = 0 ).

ENDFORM.                    " TRGR_ALV_KOR16_MODE
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*---------------------------------------------------------------------*
*      Form  SAVE_KOR16_VAL
*---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
* Использование глобальных переменных
*  - p_bukrs
*  - so_matnr
*  - p_spmon
*  -...
*
* Изменение глобальных переменных
*  -...
*----------------------------------------------------------------------*
FORM save_kor16_val
  USING
    it_output                TYPE           tt_output
    ic_commit                TYPE           boole_d
    ic_allmsg2jrn            TYPE           boole_d
  CHANGING
    ec_error                 TYPE           boole_d
    et_return                TYPE           bapirettab.

* -----------------------------------------------
  DATA:
    ls_zmmcorr16_db         TYPE            zmmcorr16,
    ls_output               TYPE            t_output ,
    ls_message              TYPE            symsg    ,
    lv_c_spmon(7)           TYPE            c.
  DATA:
    lv_s_msgtext            TYPE            string,
    lr_cx_root              TYPE REF TO     cx_root.
  DATA:
    lt_zmmcorr16            TYPE STANDARD TABLE OF    zmmcorr16
                              WITH NON-UNIQUE KEY primary_key COMPONENTS mandt bukrs matnr spmon.

* -----------------------------------------------
* инициализация
  CLEAR: ec_error, et_return.
  CALL FUNCTION 'CONVERSION_EXIT_PERI_OUTPUT'
    EXPORTING
      input  = p_spmon
    IMPORTING
      output = lv_c_spmon.

* ----
  SELECT * INTO TABLE lt_zmmcorr16
    FROM zmmcorr16
    WHERE bukrs =  p_bukrs  AND
          matnr IN so_matnr AND
          spmon =  p_spmon.

  LOOP AT it_output INTO ls_output.
    CHECK ls_output-status = icon_complete.

* ---- {  RT0K916270.RTKDEVSAP-33
** ---- { RT0K915925.ERP-259
*    CHECK  ls_output-gjahr_kor16 IS INITIAL AND    " Уже имеется документ корректировки KOR16
*           ls_output-belnr_kor16 IS INITIAL.
** ---- } RT0K915925.ERP-259
*
* ----
    CHECK (     ls_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - Не создавался
                ls_output-gjahr_kor16    IS INITIAL )   OR
          ( NOT ls_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - был создаван и сторнирован
            NOT ls_output-gjahr_kor16    IS INITIAL AND
            NOT ls_output-belnr_kor16_st IS INITIAL AND
            NOT ls_output-gjahr_kor16_st IS INITIAL ).
* ---- }  RT0K916270.RTKDEVSAP-33

* проверки по позиции
* -- Ошибка
* ---- {  RT0K916270.RTKDEVSAP-33
*    IF NOT ls_output-gjahr_kor16 IS INITIAL OR    " Уже имеется документ корректировки KOR16
*       NOT ls_output-belnr_kor16 IS INITIAL.
*
* ----
    IF ( NOT ls_output-gjahr_kor16    IS INITIAL OR    " Уже имеется несторнировнный документ корректировки KOR16
         NOT ls_output-belnr_kor16    IS INITIAL )  AND
       (     ls_output-belnr_kor16_st IS INITIAL OR
             ls_output-gjahr_kor16_st IS INITIAL ).
* ---- }  RT0K916270.RTKDEVSAP-33
      ls_message-msgid = 'ZMM2'.
      ls_message-msgty = 'E'   .
      ls_message-msgno = '017' .        " Для записи & документ коррекции сальдо 16 сч. & &. &
      ls_message-msgv1 = ls_output-bukrs && ':' && ls_output-matnr && ':' && lv_c_spmon.
      ls_message-msgv2 = ls_output-belnr_kor16 && '/' && ls_output-gjahr_kor16.
      ls_message-msgv3 = 'уже создан'(046).
      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
      CONTINUE.

* -- Ошибка
    ELSEIF ( ls_output-gjahr_fi IS INITIAL AND        " Бухгалтерский документ не создан
             ls_output-belnr_fi IS INITIAL )  AND
           ( ls_output-gjahr_st IS INITIAL AND
             ls_output-belnr_st IS INITIAL ) .
      ls_message-msgid = 'ZMM2'.
      ls_message-msgty = 'E'   .
      ls_message-msgno = '018' .        " Для записи & бухгалтерский документ не создан. & & &
      ls_message-msgv1 = ls_output-bukrs && ':' && ls_output-matnr && ':' && lv_c_spmon.
      ls_message-msgv2 = 'Сначала выполните проводку бух.документа'(045).
      ls_message-msgv3 = space.
      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
      CONTINUE.

* -- Ошибка
    ELSEIF ( NOT ls_output-gjahr_fi IS INITIAL OR     " Бухгалтерский документ сторнирован
             NOT ls_output-belnr_fi IS INITIAL )  AND
           ( NOT ls_output-gjahr_st IS INITIAL OR
             NOT ls_output-belnr_st IS INITIAL ) .
      ls_message-msgid = 'ZMM2'.
      ls_message-msgty = 'E'   .
      ls_message-msgno = '019' .        " Для записи & бухгалтерский документ & сторнирован & &
      ls_message-msgv1 = ls_output-bukrs    && ':' && ls_output-matnr && ':' && lv_c_spmon.
      ls_message-msgv2 = ls_output-belnr_fi && '/' && ls_output-gjahr_fi.
      ls_message-msgv3 = ls_output-belnr_st && '/' && ls_output-gjahr_st.
      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
      CONTINUE.
    ENDIF.

    READ TABLE lt_zmmcorr16 INTO ls_zmmcorr16_db
      WITH TABLE KEY  mandt = sy-mandt
                      bukrs = p_bukrs
                      matnr = ls_output-matnr
                      spmon = p_spmon.
    IF sy-subrc = 0.
      ls_zmmcorr16_db-stock_16_fin_kor = ls_output-stock_16_fin_kor.

    ELSE.
* -- Ошибка
      ls_message-msgid = 'ZMM2'.
      ls_message-msgty = 'E'   .
      ls_message-msgno = '016' .        " Запись & отсутствует в БД &. & &
      ls_message-msgv1 = ls_output-bukrs && ':' && ls_output-matnr && ':' && lv_c_spmon.
      ls_message-msgv2 = 'ZMMCORR16'.
      ls_message-msgv3 = 'Обновление невозможно.'(047).
      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
      CONTINUE.
    ENDIF.

* Обновление поля STOCK_16_FIN_KOR корреспондирующей записи
    TRY.
        UPDATE zmmcorr16
          SET stock_16_fin_kor  = ls_zmmcorr16_db-stock_16_fin_kor
          WHERE  bukrs =  ls_zmmcorr16_db-bukrs AND
                 matnr =  ls_zmmcorr16_db-matnr AND
                 spmon =  ls_zmmcorr16_db-spmon.
        IF sy-subrc = 0.
          IF ic_allmsg2jrn = abap_true.
            ls_message-msgid = 'ZMM2'.                  " Успешное обновлене данных в БД
            ls_message-msgty = 'S'   .
            ls_message-msgno = '013' .        " Значение &4 успешно обновлено в БД &1, (ключ &2&3)
            ls_message-msgv1 = 'ZMMCORR16'.
            ls_message-msgv2 = ls_output-bukrs    && ':' && ls_output-matnr && ':' && lv_c_spmon..
            ls_message-msgv3 = space.
            ls_message-msgv4 = 'STOCK_16_FIN_KOR' && '=' && ls_zmmcorr16_db-stock_16_fin_kor.
            _add_bapi_message:
              et_return ls_message-msgty ls_message-msgno ls_message-msgid
                ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
          ENDIF.
        ELSE.
          ec_error = abap_true.
          ls_message-msgid = 'ZMM2'.                  " Ошибка обновления данных в БД
          ls_message-msgty = 'E'   .
          ls_message-msgno = '014' .        " Ошибка при сохранении в БД &1, (ключ &2&3) &4
          ls_message-msgv1 = 'ZMMCORR16'.
          ls_message-msgv2 = ls_output-bukrs    && ':' && ls_output-matnr && ':' && lv_c_spmon..
          ls_message-msgv3 = space.
          ls_message-msgv4 = space.
          _add_bapi_message:
            et_return ls_message-msgty ls_message-msgno ls_message-msgid
              ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.

*          MESSAGE ID ls_message-msgid TYPE 'I' NUMBER ls_message-msgno
*            WITH ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4
*            DISPLAY LIKE ls_message-msgty.
          EXIT.
        ENDIF.

      CATCH cx_root INTO lr_cx_root         ##CATCH_ALL.
        lv_s_msgtext = lr_cx_root->get_text( ).
        ec_error = abap_true.
        MESSAGE lv_s_msgtext TYPE 'I' DISPLAY LIKE 'E'.
        EXIT.
    ENDTRY.
  ENDLOOP.

  IF ic_commit = abap_true.
    CASE ec_error.
      WHEN abap_true.
        ROLLBACK WORK .
        _add_bapi_message et_return 'E' '024' 'ZMM2'      " & & & &
          'Обновление данных БД отменено'(058) space space space.
      WHEN OTHERS.
        COMMIT WORK AND WAIT.
        WAIT UP TO 1 SECONDS.
    ENDCASE.
  ENDIF.

ENDFORM.                    " SAVE_KOR16_VAL
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  POST_KOR16_DOCS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
* Использование глобальных переменных
*  - p_spmon
*  - p_bukrs
*  - gv_c_single_lifnr
*  -...
*
* Изменение глобальных переменных
*  -...
*----------------------------------------------------------------------*
FORM post_kor16_docs
  USING
    it_output                TYPE           tt_output
    ic_commit                TYPE           boole_d
  CHANGING
    ec_error                 TYPE           boole_d
    et_return                TYPE           bapirettab.

* -----------------------------------------------
  DATA:
    ls_bapi_accdocpost_if    TYPE           t_bapi_accdocpost_if,
    ls_key_db                TYPE           t_zmmcorr16_key,
    lt_key_db                TYPE           tt_zmmcorr16_key.
*  DATA:
*    ls_output                TYPE           t_output,          " ----   RT0K916270.RTKDEVSAP-33
*    lt_output                TYPE           tt_output.         " ----   RT0K916270.RTKDEVSAP-33
  DATA:
    lv_c_belnr_kor16         TYPE           bkpf-belnr          , " Номер документа корректировки по 16сч.
    lv_c_gjahr_kor16         TYPE           bkpf-gjahr          , " Год   документа корректировки по 16сч.
    lv_c_monat_kor16         TYPE           bkpf-monat,
    lv_c_lifnr               TYPE           lfa1-lifnr          , " Поставщик
    lv_d_post_date           TYPE           bkpf-budat          , " Дата проводки в документе
    lv_d_doc_date            TYPE           bkpf-bldat          , " Дата документа
    lv_c_strn_reas_dummy     TYPE           t041c-stgrd         . " Причина сторно или обратной проводки
  DATA:
    lv_s_msgtext             TYPE           string  ##NEEDED,
    ls_message               TYPE           symsg           ,
    ls_return                TYPE           bapiret2        ,
    lv_i_retcode             TYPE           i               ,
    lv_c_endwhile            TYPE           boole_d
                              VALUE abap_false.
*  DATA:                                                        " ----   RT0K916109.RTKDEVSAP-33
*    ls_output                TYPE           t_output.          " ----   RT0K916109.RTKDEVSAP-33

* ---- { RT0K915819.ERP-266
  DATA:
    lv_c_belnr_dummy         TYPE           bkpf-belnr,     " Номер сторно док.корр.по 16сч. =<Empty>
    lv_n_gjahr_dummy         TYPE           bkpf-gjahr,     " Год   сторно док.корр.по 16сч. =<Empty>
    lv_n_monat_dummy         TYPE           bkpf-monat.
* ---- } RT0K915819.ERP-266

* ---- {  RT0K916335.RTKDEVSAP-33
  DATA                                  " для записей не попавших в обработку
    lt_key_db_nopost         TYPE           tt_zmmcorr16_key.
* ---- }  RT0K916335.RTKDEVSAP-33

* ---- {  RT0K916651.RTKDEVSAP-33
  DATA:
    ls_output                TYPE           t_output,
    lv_c_tabix(11)           TYPE           c       ,
    lv_c_f16_fin_kor(16)     TYPE           c       .
* ---- }  RT0K916651.RTKDEVSAP-33

*
* -----------------------------------------------
* инициализация
  CLEAR: ec_error, et_return.

* ---- { RT0K915819.ERP-266
** ---- {  RT0K916270.RTKDEVSAP-33
*  LOOP AT it_output INTO ls_output.
*    CHECK ls_output-belnr_kor16      IS INITIAL      AND  "
*          ls_output-gjahr_kor16      IS INITIAL      AND  "
*          ls_output-stock_16_fin_kor <> 0            AND  "
*          ls_output-status           =  icon_complete.    "
*    APPEND ls_output TO lt_output.
*  ENDLOOP.
** ---- }  RT0K916270.RTKDEVSAP-33
*
** ---- {  RT0K916109.RTKDEVSAP-33
** -- проверка грида на единственное значение в поле 'поставщик' (LIFNR)
*  PERFORM get_single_lifnr
*    USING     lt_output
*    CHANGING  lv_c_lifnr.
** ---- }  RT0K916109.RTKDEVSAP-33
*
* ----
  IF gv_c_single_lifnr IS INITIAL.
    MESSAGE text-m20          " Поставшик однознчно не определен
      TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
    RETURN.
  ELSE.                                     " ----   RT0K916335.RTKDEVSAP-33
    lv_c_lifnr = gv_c_single_lifnr.         " ----   RT0K916335.RTKDEVSAP-33
  ENDIF.
* ---- } RT0K915819.ERP-266

  WHILE lv_c_endwhile = abap_false.
* Ввод данных на всплывающем экране
    PERFORM scr_popup_kor16
      USING     cc_fc_postkor16       " Режим: Проводка
                p_spmon
      CHANGING  lv_c_lifnr
                lv_d_post_date
                lv_d_doc_date
                lv_c_strn_reas_dummy  " Причина сторно или обратной проводки - заглушка
                lv_i_retcode.
    IF lv_i_retcode = ci_retval_w.
      lv_c_endwhile = abap_true.
      MESSAGE text-062          " 'Операция отменена пользователем'
        TYPE cc_msgty_e DISPLAY LIKE cc_msgty_e.
      STOP.

    ELSEIF lv_i_retcode > ci_retval_w.
      lv_c_endwhile = abap_true.
      MESSAGE text-063          " 'Внутренняя ошибка'
        TYPE cc_msgty_e.
      STOP.
    ENDIF.

* Проверка допустимых значений на всплывающем экране
    PERFORM scr_popup_kor16_chkval
      USING     it_output
                lv_c_lifnr
                lv_d_post_date
                lv_d_doc_date
      CHANGING  lv_i_retcode
                ls_message.
    IF lv_i_retcode > ci_retval_w.
      MESSAGE ID ls_message-msgid TYPE cc_msgty_i NUMBER ls_message-msgno
        WITH ls_message-msgv1  ls_message-msgv2  ls_message-msgv3  ls_message-msgv4
        DISPLAY LIKE ls_message-msgty.
      CONTINUE.
    ENDIF.

    lv_c_endwhile = abap_true.
  ENDWHILE.

* ---- {  RT0K916651.RTKDEVSAP-33
* Проверка допустимости проведения корректировки для всех позиций ALV по вендору
* -- Поиск первой строки уже имеющую НЕ сторнированную корректировку
  LOOP AT it_output INTO ls_output WHERE  lifnr            =  lv_c_lifnr    AND   " Вендор
                                    ( NOT belnr_kor16      IS INITIAL OR          " номер бух.документа Кор16
                                      NOT gjahr_kor16      IS INITIAL     ) AND   " год   бух.документа Кор16
                                          stock_16_fin_kor <> 0             AND   " Сумма коректировки
                                    (     belnr_kor16_st   IS INITIAL OR          " номер бух.документа Кор16 сторно
                                          gjahr_kor16_st   IS INITIAL     ).      " год   бух.документа Кор16 сторно
    ec_error = abap_true.               " ошибка    " ----   RT0K916655.RTKDEVSAP-33

    CLEAR: ls_message.
    ls_message-msgid = 'ZMM2'    .
    ls_message-msgty = cc_msgty_e.
    ls_message-msgno = '039'     . "Коррекция сальдо 16сч. & & & &
    ls_message-msgv1 = 'не разрешена.'(100).                                         " MSGV1
    WRITE sy-tabix TO lv_c_tabix.  CONDENSE lv_c_tabix .                             " MSGV2
    CONCATENATE:
      'Строка'(101) lv_c_tabix
         INTO ls_message-msgv2 SEPARATED BY space.
    WRITE ls_output-stock_16_fin_kor TO lv_c_f16_fin_kor. CONDENSE lv_c_f16_fin_kor ##UOM_IN_MES. " MSGV3
    CONCATENATE:
       'уже содержит значение корректировки'(102)  lv_c_f16_fin_kor
         INTO ls_message-msgv3 SEPARATED BY space.

    MESSAGE ID ls_message-msgid TYPE cc_msgty_i NUMBER ls_message-msgno         " Ошибка -> Выход
      WITH ls_message-msgv1  ls_message-msgv2  ls_message-msgv3  ls_message-msgv4
      DISPLAY LIKE ls_message-msgty.
    RETURN.
  ENDLOOP.
* ---- }  RT0K916651.RTKDEVSAP-33

* Проведение документов коррекции сальдо 16 сч
  DO 1 TIMES.
    CHECK ec_error = abap_false.
    PERFORM prep_kor16_bapi_data_in
      USING     it_output
                p_bukrs
                p_spmon
                lv_c_lifnr
                lv_d_post_date
                lv_d_doc_date
      CHANGING  ls_bapi_accdocpost_if
                lt_key_db
                lv_i_retcode
                ls_message.

    IF lv_i_retcode > ci_retval_w.
      ec_error = abap_true.
*      ls_message-msgid = 'ZMM2'.
*      ls_message-msgty = 'E'   .
*      ls_message-msgno = 'xxx' .                                                            " <...>
*      ls_message-msgv1 = ls_output-bukrs && ':' && ls_output-matnr && ':' && lv_c_spmon.    " Ключ записи
*      ls_message-msgv2 = space.
*      ls_message-msgv3 = space.
*      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
    ENDIF.
  ENDDO.

  DO 1 TIMES.
    CHECK ec_error = abap_false.  " Call BAPI

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader    = ls_bapi_accdocpost_if-import-s_documentheader
        customercpd       = ls_bapi_accdocpost_if-import-s_customercpd
        contractheader    = ls_bapi_accdocpost_if-import-s_contractheader
      IMPORTING
        obj_type          = ls_bapi_accdocpost_if-export-obj_type
        obj_key           = ls_bapi_accdocpost_if-export-obj_key
        obj_sys           = ls_bapi_accdocpost_if-export-obj_sys
      TABLES
        accountgl         = ls_bapi_accdocpost_if-tables-t_accountgl
        accountreceivable = ls_bapi_accdocpost_if-tables-t_accountreceivable
        accountpayable    = ls_bapi_accdocpost_if-tables-t_accountpayable
        accounttax        = ls_bapi_accdocpost_if-tables-t_accounttax
        currencyamount    = ls_bapi_accdocpost_if-tables-t_currencyamount
        criteria          = ls_bapi_accdocpost_if-tables-t_criteria
        valuefield        = ls_bapi_accdocpost_if-tables-t_valuefield
        extension1        = ls_bapi_accdocpost_if-tables-t_extension1
        return            = ls_bapi_accdocpost_if-tables-t_return
        paymentcard       = ls_bapi_accdocpost_if-tables-t_paymentcard
        contractitem      = ls_bapi_accdocpost_if-tables-t_contractitem
        extension2        = ls_bapi_accdocpost_if-tables-t_extension2
        realestate        = ls_bapi_accdocpost_if-tables-t_realestate
        accountwt         = ls_bapi_accdocpost_if-tables-t_accountwt.
    IF lines( ls_bapi_accdocpost_if-tables-t_return ) > 0.
      APPEND LINES OF ls_bapi_accdocpost_if-tables-t_return TO et_return.
      PERFORM define_bapi_result
        USING    ls_bapi_accdocpost_if-tables-t_return
        CHANGING lv_i_retcode
                 ls_message.
      IF lv_i_retcode > ci_retval_w.
        ec_error = abap_true.
      ELSE.
* ---- { RT0K915931.ERP-259
*        READ TABLE ls_bapi_accdocpost_if-tables-t_return INTO ls_return
*          WITH KEY id = 'RW' number = '605'.
*        IF sy-subrc = 0.
*          lv_c_belnr_kor16 = ls_return-message_v2(10)  .      "  Номер документа корректировки по 16сч.
*          lv_c_gjahr_kor16 = ls_return-message_v2+14(4).      "  Год   документа корректировки по 16сч.
*        ELSE.
*          ec_error = abap_true.
*          lv_s_msgtext = 'Не удалось определить номер бух.документа корректировки остатов 16сч.'(076).
*          ls_message = cl_uso_aw_su01=>utils_tfr_strtxt2msg( ).
*          _add_bapi_message:
*            et_return  ls_message-msgty ls_message-msgno ls_message-msgid
*              ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
*        ENDIF.
* ----
        IF ls_bapi_accdocpost_if-export-obj_key IS INITIAL.
          ec_error = abap_true.
          lv_s_msgtext = 'Не удалось определить номер бух.документа корректировки остатов 16сч.'(076).
          ls_message = cl_uso_aw_su01=>utils_tfr_strtxt2msg( ).
          _add_bapi_message:
            et_return  ls_message-msgty ls_message-msgno ls_message-msgid
              ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
        ELSE.
          lv_c_belnr_kor16 = ls_bapi_accdocpost_if-export-obj_key(10)  .      "  Номер документа корректировки по 16сч.
          lv_c_gjahr_kor16 = ls_bapi_accdocpost_if-export-obj_key+14(4).      "  Год   документа корректировки по 16сч.
          lv_c_monat_kor16 = ls_bapi_accdocpost_if-import-s_documentheader-pstng_date+4(2).      "  Месяц  документа корректировки по 16сч.
        ENDIF.
* ---- } RT0K915931.ERP-259

      ENDIF.
    ENDIF.
  ENDDO.

* Обновление БД: ZMMCORR16
* -- строки попавшие в обработку
  DO 1 TIMES.
    CHECK:
     ec_error           = abap_false,
     lines( lt_key_db ) > 0.
    LOOP AT lt_key_db INTO ls_key_db.
      UPDATE zmmcorr16
        SET belnr_kor16    = lv_c_belnr_kor16
            gjahr_kor16    = lv_c_gjahr_kor16
            monat_kor16    = lv_c_monat_kor16
            belnr_kor16_st = lv_c_belnr_dummy          " ----  RT0K915819.ERP-266
            gjahr_kor16_st = lv_n_gjahr_dummy          " ----  RT0K915819.ERP-266
            monat_kor16_st = lv_n_monat_dummy
         WHERE bukrs = ls_key_db-bukrs AND
               matnr = ls_key_db-matnr AND
               spmon = ls_key_db-spmon  .
      IF sy-subrc <> 0.
        ec_error = abap_true.       " Ошибка обновления данных в БД
        ls_message-msgid = 'ZMM2'.
        ls_message-msgty = 'E'   .
        ls_message-msgno = '014' .        " Ошибка при сохранении в БД &1, (ключ &2&3) &4
        ls_message-msgv1 = 'ZMMCORR16'.
        ls_message-msgv2 = ls_key_db-bukrs  && ':' && ls_key_db-matnr && ':' && ls_key_db-spmon.
        ls_message-msgv3 = space.
        ls_message-msgv4 = space.
        _add_bapi_message:
          et_return ls_message-msgty ls_message-msgno ls_message-msgid
            ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
        EXIT.
* {RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
      ELSE.
        DATA: wa_hist TYPE zmmcorr16_hist.

        SELECT SINGLE * FROM zmmcorr16 INTO CORRESPONDING FIELDS OF wa_hist
           WHERE bukrs = ls_key_db-bukrs AND
                 matnr = ls_key_db-matnr AND
                 spmon = ls_key_db-spmon.
        IF sy-subrc = 0.
          wa_hist-belnr_kor16    = lv_c_belnr_kor16.
          wa_hist-gjahr_kor16    = lv_c_gjahr_kor16.
          wa_hist-monat_kor16    = lv_c_monat_kor16.
          wa_hist-belnr_kor16_st = lv_c_belnr_dummy.
          wa_hist-gjahr_kor16_st = lv_n_gjahr_dummy.
          wa_hist-monat_kor16_st = lv_n_monat_dummy.
          wa_hist-aenam          = sy-uname.
          wa_hist-aedat          = sy-datum.
          wa_hist-aetim          = sy-uzeit.
          INSERT INTO zmmcorr16_hist VALUES wa_hist.
        ENDIF.
* }RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
      ENDIF.
    ENDLOOP.
  ENDDO.

* ---- {  RT0K916335.RTKDEVSAP-33
* -- строки НЕ попавшие в обработку
  DO 1 TIMES.
    PERFORM prep_kor16_key_db_nopost
      USING    it_output
               p_bukrs
               p_spmon
               lv_c_lifnr
      CHANGING lt_key_db_nopost.

    CHECK:
     ec_error           = abap_false,
     lines( lt_key_db_nopost ) > 0.

    CLEAR: lv_c_belnr_dummy, lv_n_gjahr_dummy, lv_n_monat_dummy.
    LOOP AT lt_key_db_nopost INTO ls_key_db.
      UPDATE zmmcorr16
        SET stock_16_fin_kor = 0
            belnr_kor16      = lv_c_belnr_dummy
            gjahr_kor16      = lv_n_gjahr_dummy
            monat_kor16      = lv_n_monat_dummy
            belnr_kor16_st   = lv_c_belnr_dummy
            gjahr_kor16_st   = lv_n_gjahr_dummy
            monat_kor16_st   = lv_n_monat_dummy
         WHERE bukrs = ls_key_db-bukrs AND
               matnr = ls_key_db-matnr AND
               spmon = ls_key_db-spmon  .
      IF sy-subrc <> 0.
        ec_error = abap_true.       " Ошибка обновления данных в БД
        ls_message-msgid = 'ZMM2'.
        ls_message-msgty = 'E'   .
        ls_message-msgno = '014' .        " Ошибка при сохранении в БД &1, (ключ &2&3) &4
        ls_message-msgv1 = 'ZMMCORR16'.
        ls_message-msgv2 = ls_key_db-bukrs  && ':' && ls_key_db-matnr && ':' && ls_key_db-spmon.
        ls_message-msgv3 = space.
        ls_message-msgv4 = space.
        _add_bapi_message:
          et_return ls_message-msgty ls_message-msgno ls_message-msgid
            ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
        EXIT.
* {RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
*      ELSE.
*        SELECT SINGLE * FROM zmmcorr16_hist INTO  wa_hist
*           WHERE bukrs = ls_key_db-bukrs AND
*                 matnr = ls_key_db-matnr AND
*                 spmon = ls_key_db-spmon AND
*                 belnr_st = space AND
*                 belnr_kor16 = space.
*        IF sy-subrc = 0.
*          wa_hist-stock_16_fin_kor    = 0.
*          wa_hist-belnr_kor16    = lv_c_belnr_kor16.
*          wa_hist-gjahr_kor16    = lv_c_gjahr_kor16.
*          wa_hist-belnr_kor16_st = lv_c_belnr_dummy.
*          wa_hist-gjahr_kor16_st = lv_n_gjahr_dummy.
*          wa_hist-aenam          = sy-uname.
*          wa_hist-aedat          = sy-datum.
*          wa_hist-aetim          = sy-uzeit.
*          INSERT INTO zmmcorr16_hist VALUES wa_hist.
*        ENDIF.

* }RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
      ENDIF.
    ENDLOOP.
  ENDDO.
* ---- }  RT0K916335.RTKDEVSAP-33

* Проведение документов коррекции сальдо 16 сч
  DO 1 TIMES.
    CHECK ic_commit = abap_true.

    IF ec_error = abap_false.  " Commit
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait   = abap_true
        IMPORTING
          return = ls_return.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
        IMPORTING
          return = ls_return.
    ENDIF.

    IF NOT ls_return IS INITIAL.
      CASE ls_return-type.
        WHEN cc_msgty_s OR cc_msgty_i.                          " Success
          ec_error = abap_false.
        WHEN cc_msgty_w.                                        " Warning
          ec_error = abap_false.
        WHEN OTHERS.                                            " Error  (A/ X/ E)
          ROLLBACK WORK.
          ec_error = abap_true.
          ls_message = cl_uso_aw_su01=>utils_tfr_bapiret2_2msg( ls_return ).
          MESSAGE ID ls_message-msgid TYPE cc_msgty_e NUMBER ls_message-msgno
            WITH ls_message-msgv1  ls_message-msgv2  ls_message-msgv3  ls_message-msgv4
            DISPLAY LIKE ls_message-msgty.
      ENDCASE.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
    ENDIF.
  ENDDO.

ENDFORM.                    " POST_KOR16_DOCS
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  SCR_POPUP_KOR16
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
* Использование глобальных переменных
*  - gv_c_single_lifnr
*  -...
*
* Изменение глобальных переменных
*  -...
*----------------------------------------------------------------------*
FORM scr_popup_kor16
  USING
    ic_mode                  TYPE           c
    id_spmon                 TYPE           spmon
  CHANGING
    ec_lifnr                 TYPE           c
    ed_post                  TYPE           d
    ed_doc                   TYPE           d
    ec_stgrd                 TYPE           c   " ----   RT0K916270.RTKDEVSAP-33
    ei_retcode               TYPE           i.
*
* -----------------------------------------------
  DATA:
    ls_fields                TYPE           sval,
    lt_fields                TYPE TABLE OF  sval,
*    lv_d_1st_date            TYPE           datum,
    lv_d_last_date           TYPE           datum,
    lv_c_retcode             TYPE           c.
* ---- {  RT0K916270.RTKDEVSAP-33
  DATA:
    lv_s_title               TYPE           string.
* ---- }  RT0K916270.RTKDEVSAP-33
*
* -----------------------------------------------
* инициализация
  CLEAR:  ei_retcode, ec_stgrd.
* ed_post, ed_doc, ec_lifnr - не очищается!!!

* -- Определение последненго дня месяца в периоде
* ---- {  RT0K916109.RTKDEVSAP-33
*  lv_d_1st_date = id_spmon && '01'.
*  CALL FUNCTION 'LAST_DAY_OF_MONTHS'
*    EXPORTING
*      day_in            = lv_d_1st_date
*    IMPORTING
*      last_day_of_month = lv_d_last_date
*    EXCEPTIONS
*      OTHERS            = 2.
*  IF sy-subrc <> 0.
*    MESSAGE i401(5d) WITH lv_d_1st_date
*      DISPLAY LIKE cc_msgty_e.
*    ei_retcode = ci_retval_e.
*    RETURN.
*  ENDIF.
*
* ----
  PERFORM get_last_day_of_period
    USING     id_spmon
    CHANGING  lv_d_last_date.
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- {  RT0K916270.RTKDEVSAP-33
** -- начальные значения
*  IF ed_doc  IS INITIAL. ed_doc  = lv_d_last_date. ENDIF.
*  IF ed_post IS INITIAL. ed_post = lv_d_last_date. ENDIF.
*
**  ВВод доп.параметров на всплывающем экране
*  DO 3 TIMES.
*    CLEAR ls_fields.
*    CASE sy-index.
*
*      WHEN 1.
*        ls_fields-tabname   = 'LFA1'.
*        ls_fields-fieldname = 'LIFNR'.
*        ls_fields-field_obl = abap_true.
**        ls_fields-fieldtext = 'Поставщик'.
*        ls_fields-value     = ec_lifnr.
*
*      WHEN 2.
*        ls_fields-tabname   = 'BKPF'.
*        ls_fields-fieldname = 'BUDAT'.
*        ls_fields-field_obl = abap_true.
**        ls_fields-fieldtext = 'Дата проводки'.
*        ls_fields-value     = ed_post.
*      WHEN 3.
*        ls_fields-tabname   = 'BKPF'.
*        ls_fields-fieldname = 'BLDAT'.
*        ls_fields-field_obl = abap_true.
**        ls_fields-fieldtext = 'Дата документа'.
*        ls_fields-value     = ed_doc.
*    ENDCASE.
*    APPEND ls_fields TO lt_fields.
*  ENDDO.
*
* ----
  CASE ic_mode.

* Режим - Проводка коррктировки сальдо по Корр16
* -----------------------------------------------
    WHEN cc_fc_postkor16.
* -- Начальные значения на вспл.экране

      IF ed_post  IS INITIAL. ed_post = lv_d_last_date. ENDIF.
      IF ed_doc   IS INITIAL. ed_doc  = lv_d_last_date. ENDIF.
      CLEAR ec_stgrd.
      lv_s_title = 'Введите доп.параметры проводки коррекции сальдо 16сч.'(060).

* -- Формирование доп.параметров на всплывающем экране
      DO 3 TIMES.
        CLEAR ls_fields.
        CASE sy-index.
          WHEN 1.                                     " параметр во всех режимах
            ls_fields-tabname   = 'LFA1' .
            ls_fields-fieldname = 'LIFNR'.
* ---- { RT0K915819.ERP-266
*            ls_fields-field_obl  = abap_true.
* ----
            IF gv_c_single_lifnr IS INITIAL.
              ls_fields-field_obl  = abap_true.
              ls_fields-field_attr = space    .         " ''-  Стандартная яркость, готово к вводу
            ELSE.
              ls_fields-field_obl  = abap_false.
              ls_fields-field_attr = '02'      .        " '02'- Стандартная яркость, не готово к вводу
            ENDIF.
* ---- } RT0K915819.ERP-266
*            ls_fields-fieldtext = 'Поставщик'.
            ls_fields-value     = ec_lifnr   .
          WHEN 2.                                     " параметр во всех режимах
            ls_fields-field_obl  = abap_true.
            ls_fields-field_attr = space    .         " ''-  Стандартная яркость, готово к вводу
            ls_fields-tabname    = 'BKPF'   .
            ls_fields-fieldname  = 'BUDAT'  .
*            ls_fields-fieldtext = 'Дата проводки'.
            ls_fields-value      = ed_post  .
          WHEN 3.
            ls_fields-tabname   = 'BKPF'   .
            ls_fields-fieldname = 'BLDAT'  .
            ls_fields-field_obl = abap_true.
*            ls_fields-fieldtext = 'Дата документа'.
            ls_fields-value     = ed_doc   .
        ENDCASE.
        APPEND ls_fields TO lt_fields.
      ENDDO.

* Режим - Сторно проводки коррктировки сальдо по Корр16
* -----------------------------------------------
    WHEN cc_fc_strnkor16.
* -- Начальные значения на вспл.экране
      IF ed_post  IS INITIAL. ed_post = sy-datum.       ENDIF.
      IF ed_doc   IS INITIAL. ed_doc  = lv_d_last_date. ENDIF.
      IF ec_stgrd IS INITIAL. ec_stgrd = '03'.          ENDIF.  " по умолч. - 03 ('Фактическое сторно в текущем периоде')

      lv_s_title = 'Введите доп.параметры проводки сторно проводки коррекции сальдо 16сч.'(064).

* -- Формирование доп.параметров на всплывающем экране
      DO 4 TIMES.
        CLEAR ls_fields.
        CASE sy-index.
          WHEN 1.
            ls_fields-tabname    = 'LFA1'    .              " Поставщик
            ls_fields-fieldname  = 'LIFNR'   .
            IF gv_c_single_lifnr IS INITIAL.
              ls_fields-field_obl  = abap_true.
              ls_fields-field_attr = space    .             " ''-  Стандартная яркость, готово к вводу
            ELSE.
              ls_fields-field_obl  = abap_false.
              ls_fields-field_attr = '02'      .            " '02'- Стандартная яркость, не готово к вводу
            ENDIF.
            ls_fields-value      = ec_lifnr  .
*            ls_fields-fieldtext  = 'Поставщик'.
          WHEN 2.                                           " Дата документа
            ls_fields-tabname   = 'BKPF'   .
            ls_fields-fieldname = 'BUDAT'  .
            ls_fields-field_obl = abap_true.
            ls_fields-value     = ed_post  .
*            ls_fields-fieldtext = 'Дата проводки'.
          WHEN 3.
            ls_fields-tabname    = 'BKPF'    .               " Дата проводки
            ls_fields-fieldname  = 'BLDAT'   .
            ls_fields-field_obl  = abap_false.
            ls_fields-field_attr = '02'      .        " '02'  (Стандартная яркость, не готово к вводу)
            ls_fields-value     = ed_doc     .
*            ls_fields-fieldtext = 'Дата документа'.
          WHEN 4.
            CHECK ic_mode       = cc_fc_strnkor16       .  " Причина сторно
            ls_fields-tabname   = 'TRLS_REVERSAL_REASON'.
            ls_fields-fieldname = 'STGRD'               .
            ls_fields-field_obl = abap_true             .
            ls_fields-value     = ec_stgrd              .
*            ls_fields-fieldtext = 'Причина сторно или обратной проводки'.
        ENDCASE.
        APPEND ls_fields TO lt_fields.
      ENDDO.

    WHEN OTHERS.
*      <...>
  ENDCASE.
* ---- }  RT0K916270.RTKDEVSAP-33


* Вызов всплывающего экрана
  CALL FUNCTION 'POPUP_GET_VALUES'
    EXPORTING
      popup_title = lv_s_title
    IMPORTING
      returncode  = lv_c_retcode
    TABLES
      fields      = lt_fields
    EXCEPTIONS
      OTHERS      = 2.
  IF sy-subrc IS NOT INITIAL.       " ошибка ФМ
    MESSAGE ID sy-msgid TYPE cc_msgty_i  NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
      DISPLAY LIKE sy-msgid.
    ei_retcode = ci_retval_e.
    RETURN.
  ELSEIF lv_c_retcode EQ 'A'.       " Отмена диалового окна
    ei_retcode = ci_retval_w.
    RETURN.
  ENDIF.

* Возврат значений
  READ TABLE lt_fields INTO ls_fields               " Поставщик
    WITH KEY tabname   = 'LFA1'
             fieldname = 'LIFNR'.
  IF sy-subrc = 0.
    ec_lifnr = ls_fields-value.
  ENDIF.

  READ TABLE lt_fields INTO ls_fields             " Дата проводки
    WITH KEY  tabname   = 'BKPF'
              fieldname = 'BUDAT'.
  IF sy-subrc = 0.
    ed_post = ls_fields-value.
  ENDIF.

  READ TABLE lt_fields INTO ls_fields               " Дата документа
    WITH KEY  tabname   = 'BKPF'
              fieldname = 'BLDAT'.
  IF sy-subrc = 0.
    ed_doc = ls_fields-value.
  ENDIF.

* ---- {  RT0K916270.RTKDEVSAP-33
  DO 1 TIMES.
    CHECK ic_mode = cc_fc_strnkor16.                " параметр в режиме "Cторно Кор16"
    READ TABLE lt_fields INTO ls_fields             " Причина сторно
      WITH KEY  tabname   = 'TRLS_REVERSAL_REASON'
                fieldname = 'STGRD'.
    CHECK sy-subrc = 0.
    ec_stgrd = ls_fields-value.
  ENDDO.
* ---- }  RT0K916270.RTKDEVSAP-33

ENDFORM.                    " SCR_POPUP_KOR16
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  SCR_POPUP_KOR16_CHKVAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM scr_popup_kor16_chkval
  USING
    it_output                TYPE           tt_output
    ic_lifnr                 TYPE           c         ##NEEDED
    id_post                  TYPE           d         ##NEEDED
    id_doc                   TYPE           d         ##NEEDED
  CHANGING
    ei_retcode               TYPE           i
    es_message               TYPE           symsg.
*
* -----------------------------------------------
  DATA:
    lv_s_msgtext             TYPE           string    ,
    lv_c_lifnr               TYPE           lfa1-lifnr.
* ---- {  RT0K916335.RTKDEVSAP-33
  DATA:
    lv_c_boole               TYPE           c,
    lv_c_no_rows             TYPE           c.
* ---- }  RT0K916335.RTKDEVSAP-33

*
* -----------------------------------------------
* Инициализация
  CLEAR: ei_retcode, es_message.
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
    EXPORTING
      input  = ic_lifnr
    IMPORTING
      output = lv_c_lifnr.

* Проверка наличия введеного Поставщика в строках ALV
  DO 1 TIMES.
    CHECK ei_retcode < ci_retval_e.
* ---- {  RT0K916335.RTKDEVSAP-33
*    LOOP AT it_output TRANSPORTING NO FIELDS
*      WHERE  lifnr            = ic_lifnr          AND
*             stock_16_fin_kor <> 0                AND
** ---- {  RT0K916270.RTKDEVSAP-33
**             belnr_kor16      IS INITIAL  AND
**             gjahr_kor16      IS INITIAL  AND
** ----
*             ( (     belnr_kor16 IS INITIAL AND       " док.корректировки 16сч. - Не создавался
*                     gjahr_kor16 IS INITIAL )   OR
*               ( NOT belnr_kor16 IS INITIAL AND       " док.корректировки 16сч. - был создаван и сторнирован
*                 NOT gjahr_kor16 IS INITIAL AND
*                 NOT belnr_kor16 IS INITIAL AND
*                 NOT gjahr_kor16 IS INITIAL ) )   AND
** ---- }  RT0K916270.RTKDEVSAP-33
*             status           = icon_complete.      " ----  RT0K915939.ERP-259
*    ENDLOOP.
*    IF sy-subrc <> 0.
*
* ----
    lv_c_no_rows = abap_true.
    LOOP AT it_output INTO ls_output.
      PERFORM chk_alvrow_post_allow_kor16
        USING     ic_lifnr
                  ls_output
        CHANGING  lv_c_boole.
      CHECK lv_c_boole = abap_true.
      lv_c_no_rows = abap_true.
      CLEAR lv_c_no_rows.
    ENDLOOP.
    IF lv_c_no_rows = abap_true.
* ---- }  RT0K916335.RTKDEVSAP-33
      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
      CONCATENATE:
        'Поставщик'(036) lv_c_lifnr 'отсутствует в списке допустимых значений для коррекции сальдо 16сч.'(061)
          INTO lv_s_msgtext SEPARATED BY space.
      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
      MOVE-CORRESPONDING sy TO es_message.
      es_message-msgty = cc_msgty_e.                              " Error
      EXIT.
    ENDIF.
  ENDDO.

** Проверка ...
*  DO 1 TIMES.
*    CHECK ei_retcode < ci_retval_e.
*     <... Check algorythm ...>
*
*    IF sy-subrc <> 0.
*      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
*      CONCATENATE:
*        '' ''
*          INTO lv_s_msgtext SEPARATED BY space.
*      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
*      MOVE-CORRESPONDING sy TO es_message.
*      EXIT.
*    ENDIF.
*
*  ENDDO.

ENDFORM.                    " SCR_POPUP_KOR16_CHKVAL
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  PREP_KOR16_BAPI_DATA_IN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM prep_kor16_bapi_data_in
  USING
    it_output                TYPE           tt_output
    ic_bukrs                 TYPE           bukrs
    id_period                TYPE           spmon
    ic_lifnr                 TYPE           c
    id_post                  TYPE           d
    id_doc                   TYPE           d
  CHANGING
    es_bapi_if_data          TYPE           t_bapi_accdocpost_if
    et_key_db                TYPE           tt_zmmcorr16_key
    ei_retcode               TYPE           i
    es_message               TYPE           symsg.
*
* -----------------------------------------------
  DATA:
    lv_i_posnr               TYPE           i         ,
    lv_c_period_txt(7)       TYPE           c         ,
    lv_s_msgtext             TYPE           string    ,
    lv_c_lifnr               TYPE           lfa1-lifnr  ##NEEDED.
  DATA:
    ls_key_db                TYPE           t_zmmcorr16_key,
    ls_accountgl             TYPE LINE OF   t_bapi_accdocpost_t-t_accountgl,
    ls_currencyamount        TYPE LINE OF   t_bapi_accdocpost_t-t_currencyamount.

* ---- {  RT0K916335.RTKDEVSAP-33
  DATA:
    ls_output                TYPE           t_output,
    lv_c_boole               TYPE           c       .
* ---- }  RT0K916335.RTKDEVSAP-33
*
* -----------------------------------------------
* Инициализация
  CLEAR: ei_retcode, es_message, es_bapi_if_data, et_key_db.
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
    EXPORTING
      input  = ic_lifnr
    IMPORTING
      output = lv_c_lifnr.
  WRITE: id_period TO lv_c_period_txt.

* ---
* Проверка наличия данных для создания документов коррекции сальдо 16сч.
  DO 1 TIMES.
    CHECK ei_retcode < ci_retval_e.
    LOOP AT it_output INTO ls_output .
* ----
      AT FIRST    ##LOOP_AT_OK.
* ------ Create Header
* ---- {  RT0K916109.RTKDEVSAP-33
*        es_bapi_if_data-import-s_documentheader-neg_postng = abap_true.   " Красное сальдо ON закомментировано
* ----
        es_bapi_if_data-import-s_documentheader-neg_postng = abap_false.   " Красное сальдо OFF
* ---- }  RT0K916109.RTKDEVSAP-33
        es_bapi_if_data-import-s_documentheader-username   = sy-uname .
        es_bapi_if_data-import-s_documentheader-bus_act    = 'RFBU'   .
        es_bapi_if_data-import-s_documentheader-comp_code  = ic_bukrs .
        es_bapi_if_data-import-s_documentheader-doc_date   = id_doc   .
        es_bapi_if_data-import-s_documentheader-pstng_date = id_post  .
        es_bapi_if_data-import-s_documentheader-doc_type   = 'AB'     .
        CONCATENATE: 'Кор16'(077) lv_c_period_txt ic_lifnr
         INTO es_bapi_if_data-import-s_documentheader-header_txt SEPARATED BY space.
      ENDAT.

* ----
* -- Фильтр обрабатываемых позиций
* ---- {  RT0K916335.RTKDEVSAP-33
*      CHECK ls_output-status          = icon_complete AND
*            ls_output-lifnr           = ic_lifnr      AND
*            ls_output-stock_16_fin_kor <> 0           AND
** ---- {  RT0K916270.RTKDEVSAP-33
**            ls_output-belnr_kor16     IS INITIAL      AND
**            ls_output-gjahr_kor16     IS INITIAL .
** ----
*        ( (     ls_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - Не создавался
*                ls_output-gjahr_kor16    IS INITIAL )   OR
*          ( NOT ls_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - был создаван и сторнирован
*            NOT ls_output-gjahr_kor16    IS INITIAL AND
*            NOT ls_output-belnr_kor16_st IS INITIAL AND
*            NOT ls_output-gjahr_kor16_st IS INITIAL ) ).
** ---- }  RT0K916270.RTKDEVSAP-33
*
* ----
      PERFORM chk_alvrow_post_allow_kor16
        USING     ic_lifnr
                  ls_output
        CHANGING  lv_c_boole.
      CHECK lv_c_boole = abap_true.
* ---- }  RT0K916335.RTKDEVSAP-33

* -- Отбор записей подходящих по критерию для коррекции сальдо по 16сч.
* ---- {  RT0K916270.RTKDEVSAP-33
*      IF NOT ls_output-gjahr_kor16 IS INITIAL OR      " Уже имеется документ корректировки KOR16
*         NOT ls_output-belnr_kor16 IS INITIAL.
*
* ----
      IF ( NOT ls_output-gjahr_kor16    IS INITIAL OR      " Уже имеется несторнированный документ корректировки KOR16
           NOT ls_output-belnr_kor16    IS INITIAL ) AND
         (     ls_output-belnr_kor16_st IS INITIAL OR
               ls_output-gjahr_kor16_st IS INITIAL ).
* ---- }  RT0K916270.RTKDEVSAP-33
        CONTINUE.
      ELSEIF ( ls_output-gjahr_fi IS INITIAL AND      " Бухгалтерский документ не создан
               ls_output-belnr_fi IS INITIAL )  AND
             ( ls_output-gjahr_st IS INITIAL AND
               ls_output-belnr_st IS INITIAL ) .
        CONTINUE.
      ELSEIF ( NOT ls_output-gjahr_fi IS INITIAL OR   " Бухгалтерский документ сторнирован
               NOT ls_output-belnr_fi IS INITIAL )  AND
             ( NOT ls_output-gjahr_st IS INITIAL OR
               NOT ls_output-belnr_st IS INITIAL ) .
        CONTINUE.
      ENDIF.

* ------ Create positions
      lv_i_posnr = lv_i_posnr + 1.
* -------- ACCOUNTGL.1601010000
      ls_accountgl-itemno_acc = lv_i_posnr     .                " № позиции документа
      ls_accountgl-comp_code  = ic_bukrs       .                " БЕ
      ls_accountgl-gl_account = '1601010000'   .                " Счет
      ls_accountgl-material   = ls_output-matnr.                " Артикул
      ls_accountgl-plant      = 'Z500'         .                "
      APPEND ls_accountgl TO es_bapi_if_data-tables-t_accountgl.
* -------- CURRENCYAMOUNT.1601010000
      ls_currencyamount-itemno_acc = lv_i_posnr.                " " № позиции документа
      ls_currencyamount-curr_type  = '00'.                      " Тип Валюты
      ls_currencyamount-currency   = 'RUB'.                     " Наименование Валюты
      ls_currencyamount-amt_doccur = ls_output-stock_16_fin_kor. " Значение корректировки
      APPEND ls_currencyamount TO es_bapi_if_data-tables-t_currencyamount.

      lv_i_posnr = lv_i_posnr + 1.
* -------- ACCOUNTGL.9002010000
      ls_accountgl-itemno_acc = lv_i_posnr     .                        " № позиции документа
      ls_accountgl-comp_code  = ic_bukrs       .                        " БЕ
      ls_accountgl-gl_account = '9002010000'   .                        " Счет
      ls_accountgl-material   = ls_output-matnr.                        " Артикул
      ls_accountgl-plant      = 'Z500'         .                        "
      APPEND ls_accountgl TO es_bapi_if_data-tables-t_accountgl.
* -------- CURRENCYAMOUNT.9002010000
      ls_currencyamount-itemno_acc = lv_i_posnr.                        " № позиции документа
      ls_currencyamount-curr_type  = '00'      .                        " Тип Валюты
      ls_currencyamount-currency   = 'RUB'     .                        " Наименование Валюты
      ls_currencyamount-amt_doccur = -1 * ls_output-stock_16_fin_kor .  " Значение корректировки (отриц.знач.)
      APPEND ls_currencyamount TO es_bapi_if_data-tables-t_currencyamount.

* ------- Формирование ключей записей обновления БД: ZMMCORR16
      MOVE-CORRESPONDING ls_output TO ls_key_db.          " MATNR, ...
      ls_key_db-bukrs = ic_bukrs.
      ls_key_db-spmon = id_period.
      APPEND ls_key_db TO et_key_db.
    ENDLOOP.

    IF lines( es_bapi_if_data-tables-t_accountgl ) = 0.
      CLEAR: es_bapi_if_data,  et_key_db.             " Очистка выходных данных
      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
      lv_s_msgtext = 'Отсутствуют данные для создания документов коррекции сальдо 16сч.'(065).
      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
      MOVE-CORRESPONDING sy TO es_message.
      es_message-msgty = cc_msgty_e.                              " Error
      EXIT.
    ENDIF.
  ENDDO.

ENDFORM.                    " PREP_KOR16_BAPI_DATa_IN
* ---- } RT0K915737.ERP-259

* ---- { RT0K915737.ERP-259
*&---------------------------------------------------------------------*
*&      Form  DEFINE_BAPI_RESULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM define_bapi_result
  USING
    it_return                TYPE           bapiret2_tab
  CHANGING
    ei_retcode               TYPE           i
    es_message               TYPE           symsg.
*
* -----------------------------------------------
  DATA:
    ls_return                TYPE           bapiret2.
*
* -----------------------------------------------
  CLEAR: ei_retcode, es_message.

  DO 1 TIMES.
    CHECK lines( it_return ) > 0.
    LOOP AT it_return INTO ls_return WHERE type = cc_msgty_x OR
                                           type = cc_msgty_a OR
                                           type = cc_msgty_e.
      ei_retcode = ci_retval_e.
      es_message = cl_uso_aw_su01=>utils_tfr_bapiret2_2msg( ls_return ).
      RETURN.
    ENDLOOP.

    CHECK sy-subrc <> 0.
    LOOP AT it_return  INTO ls_return WHERE type = cc_msgty_w.
      ei_retcode = ci_retval_w.
      es_message = cl_uso_aw_su01=>utils_tfr_bapiret2_2msg( ls_return ).
      RETURN.
    ENDLOOP.

    CHECK sy-subrc <> 0.
    LOOP AT it_return  INTO ls_return WHERE type = cc_msgty_i OR
                                            type = cc_msgty_s.
      ei_retcode = ci_retval_s.
      es_message = cl_uso_aw_su01=>utils_tfr_bapiret2_2msg( ls_return ).
      RETURN.
    ENDLOOP.
  ENDDO.
ENDFORM.                    " DEFINE_BAPI_RESULT
* ---- } RT0K915737.ERP-259

* ---- {  RT0K916109.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  CANCEL_POSTING_KOR16_DOCS
*&---------------------------------------------------------------------*
* Использование глобальных переменных
*  - p_spmon
*  - p_bukrs
*  -...
*
* Изменение глобальных переменных
*  -...
*----------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM cancel_posting_kor16_docs
  USING
    ic_commit                TYPE           boole_d
  CHANGING
    et_output                TYPE           tt_output
    es_ctrl_alv              TYPE           t_ctrl_alv  ##NEEDED
    ec_error                 TYPE           boole_d
    ev_s_msgtext             TYPE           string
    et_return                TYPE           bapirettab.
*
* -----------------------------------------------
  DATA:
    lv_c_tabix(11)           TYPE           c,
    ls_output                TYPE           t_output  ,
    lt_output                TYPE           tt_output ,
* ---- {  RT0K916335.RTKDEVSAP-33
*    lt_index_rows            TYPE           lvc_t_row     ,
*    ls_index_rows            TYPE           lvc_s_row     ,
**    lt_row_no                TYPE           lvc_t_roid    ,
**    ls_row_no                TYPE           lvc_s_roid    .
*    lt_rng_index             TYPE RANGE OF  syindex       ,
*    ls_rng_index             LIKE LINE OF   lt_rng_index  ,
*
* ----
    lv_c_boole               TYPE           c,
    lv_d_doc_date*           TYPE           bkpf-bldat       , " Дата документа - временн.хранение
    lv_c_doc_date_flg        TYPE           boole_d          . " флаг определения Дата документа в цикле
* ---- }  RT0K916335.RTKDEVSAP-33

  DATA:
    lv_c_lifnr               TYPE           lfa1-lifnr          , " Поставщик
    lv_d_post_date           TYPE           bkpf-budat          , " Дата проводки в документе
    lv_d_doc_date            TYPE           bkpf-bldat          , " Дата документа
    lv_c_strn_reas           TYPE           t041c-stgrd         . " Причина сторно или обратной проводки
  DATA:
    lt_bapi_accdocrevpost_if TYPE           tt_bapi_accdocrevpost_if,
    ls_bapi_accdocrevpost_if TYPE           t_bapi_accdocrevpost_if .
*    ls_key_db                TYPE           t_zmmcorr16_key         ,
*    lt_key_db                TYPE           tt_zmmcorr16_key        .
*  DATA:
*    lv_c_belnr_kor16         TYPE           bkpf-belnr,         " Номер документа корректировки по 16сч.
*    lv_c_gjahr_kor16         TYPE           bkpf-gjahr.         " Год   документа корректировки по 16сч.
  DATA:
    lv_s_msgtext             TYPE           string    ##NEEDED,
    ls_message               TYPE           symsg             ,
    ls_return                TYPE           bapiret2          ,
    lv_i_retcode             TYPE           i                 ,
    lv_c_endwhile            TYPE           boole_d
                              VALUE abap_false.

  FIELD-SYMBOLS:
   <fs_bapi_accdocrevpost_if> TYPE          t_bapi_accdocrevpost_if.
*
* -----------------------------------------------
* инициализация
  CLEAR: ec_error, et_return, ev_s_msgtext.
*   es_ctrl_alv - не очищается !!!
*   et_output   - не очищается !!!

  DO 1 TIMES.
* ---- {  RT0K916335.RTKDEVSAP-33
*    es_ctrl_alv-r_alv->get_selected_rows(
*      IMPORTING et_index_rows = lt_index_rows ).
*
** ---- {  RT0K916270.RTKDEVSAP-33
*    CASE lines( lt_index_rows ).
*      WHEN 0.
*        ec_error = abap_true.
*        ev_s_msgtext = text-m17.  " 'Выделите строку для проведения сторнирования по Кор16'
*        EXIT.
*      WHEN 1.
**        OK - nothing to do
*      WHEN OTHERS.
*        ec_error = abap_true.
*        ev_s_msgtext = text-m19.  " 'Выделите ОДНУ строку для проведения сторнирования по Кор16'
*        EXIT.
*    ENDCASE.
** ---- }  RT0K916270.RTKDEVSAP-33
*
*    CHECK lines( lt_index_rows ) > 0.
*    LOOP AT lt_index_rows INTO ls_index_rows.
*      ls_rng_index = 'IEQ'.
*      ls_rng_index-low = ls_index_rows-index.
*      APPEND ls_rng_index TO lt_rng_index.
*    ENDLOOP.
*
** Проверка допустимости сторно для выделенных строк
*    LOOP AT et_output INTO ls_output.
*      CHECK sy-tabix IN lt_rng_index.           " ----   RT0K916335.RTKDEVSAP-33
*      CLEAR ls_return.
*      WRITE sy-tabix  TO lv_c_tabix. CONDENSE lv_c_tabix.
*
*      IF ls_output-belnr_kor16 IS INITIAL OR                  " ...наличие документа проводки корр16сч
*         ls_output-gjahr_kor16 IS INITIAL.
*        ec_error = abap_true.
*        ls_return-id         = 'ZMM2'    .
*        ls_return-type       = cc_msgty_e.
*        ls_return-number     = '038'     . " Стр.&, Сторнирование коррекции сальдо 16сч. & & &
*        ls_return-message_v1 = lv_c_tabix.
*        ls_return-message_v2 = 'возможно для скорректированных позиций'(084).
*        ls_return-message_v3 = space.
*        ls_return-message_v4 = space.
*        APPEND ls_return TO et_return.
*
*      ELSEIF NOT ls_output-belnr_kor16_st IS INITIAL OR       " ...отсутствие документа сторно для проводки корр16сч
*             NOT ls_output-gjahr_kor16_st IS INITIAL.
*        ec_error = abap_true.
*        ls_return-id         = 'ZMM2'    .
*        ls_return-type       = cc_msgty_e.
*        ls_return-number     = '038'     . " Стр.&, Сторнирование коррекции сальдо 16сч. & & &
*        ls_return-message_v1 = lv_c_tabix.
*        ls_return-message_v2 = 'уже выполнено'(083).
*        ls_return-message_v3 = '(' && 'фин.док.' && ':' && ls_output-gjahr_kor16_st && '/' && ls_output-belnr_kor16_st.
*        ls_return-message_v4 = space.
*        APPEND ls_return TO et_return.
*
**      ELSEIF <...>.
**        <...>
*      ENDIF.
*    ENDLOOP.
*
*  Подготовка данных для сторнирования
*    CHECK ec_error = abap_false.
*    LOOP AT et_output INTO ls_output.
*      CHECK sy-tabix IN lt_rng_index.
*      APPEND ls_output TO lt_output.
*    ENDLOOP.
*
** Формирование вх.данных для вспл. экрана
*    DO 1 TIMES.
*** -- проверка грида на единственное значение в поле 'поставщик' (LIFNR)
**    PERFORM get_single_lifnr
**      USING     lt_output
**      CHANGING  lv_c_lifnr.
*
*      lv_d_post_date = sy-datum.
*      READ TABLE lt_output INTO ls_output INDEX 1.
*      CHECK sy-subrc = 0.
*      lv_c_lifnr    = ls_output-lifnr.
*      SELECT SINGLE budat INTO lv_d_doc_date
*        FROM bkpf
*        WHERE bukrs = ls_output-bukrs       AND
*              belnr = ls_output-belnr_kor16 AND
*              gjahr = ls_output-gjahr_kor16.
*      CHECK sy-subrc = 0.
*    ENDDO.
*
* ----
    IF gv_c_single_lifnr IS INITIAL.
      ec_error = abap_true.
      ev_s_msgtext  = 'Поставщик отсутствует или НЕ определен однозначно'(018).
      RETURN.
    ELSE.
      lv_c_lifnr = gv_c_single_lifnr.
    ENDIF.

* Проверка допустимости сторно для выделенных строк
    LOOP AT et_output INTO ls_output.
      WRITE sy-tabix  TO lv_c_tabix. CONDENSE lv_c_tabix.
      PERFORM chk_alvrow_cancel_allow_kor16
        USING     lv_c_lifnr
                  ls_output
        CHANGING  lv_c_boole.
      CHECK lv_c_boole = abap_true.

      IF ls_output-belnr_kor16 IS INITIAL OR                  " ...наличие документа проводки корр16сч
         ls_output-gjahr_kor16 IS INITIAL.
        ec_error = abap_true.
        ls_return-id         = 'ZMM2'    .
        ls_return-type       = cc_msgty_e.
        ls_return-number     = '038'     . " Стр.&, Сторнирование коррекции сальдо 16сч. & & &
        ls_return-message_v1 = lv_c_tabix.
        ls_return-message_v2 = 'возможно для скорректированных позиций'(084).
        ls_return-message_v3 = space.
        ls_return-message_v4 = space.
        APPEND ls_return TO et_return.

      ELSEIF NOT ls_output-belnr_kor16_st IS INITIAL OR       " ...отсутствие документа сторно для проводки корр16сч
             NOT ls_output-gjahr_kor16_st IS INITIAL.
        ec_error = abap_true.
        ls_return-id         = 'ZMM2'    .
        ls_return-type       = cc_msgty_e.
        ls_return-number     = '038'     . " Стр.&, Сторнирование коррекции сальдо 16сч. & & &
        ls_return-message_v1 = lv_c_tabix.
        ls_return-message_v2 = 'уже выполнено'(083).
        ls_return-message_v3 = '(' && 'фин.док.' && ':' && ls_output-gjahr_kor16_st && '/' && ls_output-belnr_kor16_st.
        ls_return-message_v4 = space.
        APPEND ls_return TO et_return.

*      ELSEIF <...>.
*        <...>
      ENDIF.

      CHECK ec_error = abap_false.
      APPEND ls_output TO lt_output.
    ENDLOOP.

    IF lines( lt_output ) = 0.
      ec_error      = abap_true.
      ev_s_msgtext  = 'Нет данных для обработки коррекции сальдо 16сч'(081).
      RETURN.
    ENDIF.

* -- предзаполнение поля в доп.экране (BKPF-BUDAT)
    lv_d_post_date = sy-datum.
    LOOP AT lt_output INTO ls_output .
* -- предзаполнение поля в доп.экране (BKPF-BLDAT)
      DO 1 TIMES.           " определение единственности значения BKPF-BLDAT в наборе для автоподстановки в поле "Дата документа" во вспл.окне
        CASE lv_c_doc_date_flg.
          WHEN abap_false.            " -- BKPF-BLDAT НЕ определялось в цикле
            CHECK lv_d_doc_date IS INITIAL.
            SELECT SINGLE bldat INTO lv_d_doc_date
              FROM bkpf
              WHERE bukrs = ls_output-bukrs       AND
                    belnr = ls_output-belnr_kor16 AND
                    gjahr = ls_output-gjahr_kor16.
            CHECK sy-subrc = 0.
            lv_c_doc_date_flg = abap_true.

          WHEN abap_true.             " -- BKPF-BLDAT уже определялось в цикле
            CHECK NOT lv_d_doc_date IS INITIAL.       " ---- Если более 2-х разных дат документа -
            SELECT SINGLE budat INTO lv_d_doc_date*   " ---- убирается автоподстановка в поле "Дата документа"
              FROM bkpf
              WHERE bukrs = ls_output-bukrs       AND
                    belnr = ls_output-belnr_kor16 AND
                    gjahr = ls_output-gjahr_kor16.
            CHECK sy-subrc       =  0 AND
                  lv_d_doc_date* <> lv_d_doc_date.
            CLEAR lv_d_doc_date.
        ENDCASE.
      ENDDO.
    ENDLOOP.
* ---- }  RT0K916335.RTKDEVSAP-33

    WHILE lv_c_endwhile = abap_false.
* Ввод данных на всплывающем экране
      PERFORM scr_popup_kor16
        USING     cc_fc_strnkor16         " Режим: Сторнирование
                  p_spmon
        CHANGING  lv_c_lifnr
                  lv_d_post_date
                  lv_d_doc_date
                  lv_c_strn_reas          " Причина сторно или обратной проводки 	" ----   RT0K916270.RTKDEVSAP-33
                  lv_i_retcode.
      IF lv_i_retcode = ci_retval_w.
        lv_c_endwhile = abap_true.
* ---- {  RT0K916335.RTKDEVSAP-33
*        MESSAGE 'Операция отменена пользователем'(062)
*          TYPE cc_msgty_e DISPLAY LIKE cc_msgty_e.
*        STOP.
* ----
        ec_error = abap_true.
        ev_s_msgtext  = 'Операция отменена пользователем'(062).
        RETURN.
* ---- }  RT0K916335.RTKDEVSAP-33

      ELSEIF lv_i_retcode > ci_retval_w.
        lv_c_endwhile = abap_true.
* ---- {  RT0K916335.RTKDEVSAP-33
*        MESSAGE 'Внутренняя ошибка'(063)
*          TYPE cc_msgty_e.
*        STOP.
* ----
        ec_error = abap_true.
        ev_s_msgtext  = 'Внутренняя ошибка'(063).
        RETURN.
* ---- }  RT0K916335.RTKDEVSAP-33
      ENDIF.

* Проверка допустимых значений на всплывающем экране
      PERFORM scr_popup_strn_kor16_chkval
        USING     et_output
                  lv_c_lifnr
                  lv_d_post_date
                  lv_d_doc_date
                  lv_c_strn_reas          " Причина сторно или обратной проводки    " ----   RT0K916270.RTKDEVSAP-33
        CHANGING  lv_i_retcode
                  ls_message.
      IF lv_i_retcode > ci_retval_w.
        MESSAGE ID ls_message-msgid TYPE cc_msgty_i NUMBER ls_message-msgno
          WITH ls_message-msgv1  ls_message-msgv2  ls_message-msgv3  ls_message-msgv4
          DISPLAY LIKE ls_message-msgty.
        CONTINUE.
      ENDIF.

      lv_c_endwhile = abap_true.
    ENDWHILE.
  ENDDO.

* Проведение документов коррекции сальдо 16 сч
  DO 1 TIMES.
    CHECK ec_error = abap_false.
    CHECK lines( lt_output ) > 0.
    PERFORM prep_strn_kor16_bapi_data_in
      USING     lt_output
                lv_c_lifnr              " Поставщик                               " ----   RT0K916335.RTKDEVSAP-33
                lv_d_post_date          " Дата проводки с вспл.экрана             " ----   RT0K916270.RTKDEVSAP-33
                lv_c_strn_reas          " Причина сторно или обратной проводки    " ----   RT0K916270.RTKDEVSAP-33
      CHANGING  lt_bapi_accdocrevpost_if
                lv_i_retcode
                ls_message.

    IF lv_i_retcode > ci_retval_w.
      ec_error = abap_true.
*      ls_message-msgid = 'ZMM2'.
*      ls_message-msgty = 'E'   .
*      ls_message-msgno = 'xxx' .                                                            " <...>
*      ls_message-msgv1 = ls_output-bukrs && ':' && ls_output-matnr && ':' && lv_c_spmon.    " Ключ записи
*      ls_message-msgv2 = space.
*      ls_message-msgv3 = space.
*      ls_message-msgv4 = space.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
    ENDIF.
  ENDDO.

  DO 1 TIMES.
    CHECK ec_error = abap_false.  " Call BAPI
    LOOP AT lt_bapi_accdocrevpost_if ASSIGNING <fs_bapi_accdocrevpost_if>.
      CALL FUNCTION 'BAPI_ACC_DOCUMENT_REV_POST'
        EXPORTING
          reversal = <fs_bapi_accdocrevpost_if>-import-s_reversal
          bus_act  = <fs_bapi_accdocrevpost_if>-import-bus_act
        IMPORTING
          obj_type = <fs_bapi_accdocrevpost_if>-export-obj_type
          obj_key  = <fs_bapi_accdocrevpost_if>-export-obj_key
          obj_sys  = <fs_bapi_accdocrevpost_if>-export-obj_sys
        TABLES
          return   = <fs_bapi_accdocrevpost_if>-tables-t_return.

      IF lines( <fs_bapi_accdocrevpost_if>-tables-t_return ) > 0.
        APPEND LINES OF <fs_bapi_accdocrevpost_if>-tables-t_return TO et_return.
        PERFORM define_bapi_result
          USING    <fs_bapi_accdocrevpost_if>-tables-t_return
          CHANGING lv_i_retcode
                   ls_message.
        IF lv_i_retcode > ci_retval_w.
          ec_error = abap_true.
        ELSE.
*        READ TABLE ls_bapi_accdocpost_if-tables-t_return INTO ls_return
*          WITH KEY id = 'RW' number = '605'.
*        IF sy-subrc = 0.
*          lv_c_belnr_kor16 = ls_return-message_v2(10)  .      "  Номер документа корректировки по 16сч.
*          lv_c_gjahr_kor16 = ls_return-message_v2+14(4).      "  Год   документа корректировки по 16сч.
*        ELSE.
*          ec_error = abap_true.
*          lv_s_msgtext = 'Не удалось определить номер бух.документа корректировки остатов 16сч.'(076).
*          ls_message = cl_uso_aw_su01=>utils_tfr_strtxt2msg( ).
*          _add_bapi_message:
*            et_return  ls_message-msgty ls_message-msgno ls_message-msgid
*              ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
*        ENDIF.
* ----
          IF <fs_bapi_accdocrevpost_if>-export-obj_key IS INITIAL.
            ec_error = abap_true.
            lv_s_msgtext = text-m15.  " Не удалось определить номер бух.документа сторно корректировки остатов 16сч.
            ls_message = cl_uso_aw_su01=>utils_tfr_strtxt2msg( ).
            _add_bapi_message:
              et_return  ls_message-msgty ls_message-msgno ls_message-msgid
                ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
          ELSE.
            <fs_bapi_accdocrevpost_if>-belnr_kor16_st = <fs_bapi_accdocrevpost_if>-export-obj_key(10)  .      "  Номер сторно документа корректировки по 16сч.
            <fs_bapi_accdocrevpost_if>-gjahr_kor16_st = <fs_bapi_accdocrevpost_if>-export-obj_key+14(4).      "  Год   сторно документа корректировки по 16сч.
            <fs_bapi_accdocrevpost_if>-monat_kor16_st = lv_d_post_date+4(2).      "  месяц  сторно документа корректировки по 16сч.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDDO.

* ---- {  RT0K916368.RTKDEVSAP-33
  DATA:
    ls_db_corr16_key         TYPE           t_zmmcorr16_key.
* ---- }  RT0K916368.RTKDEVSAP-33

* Обновление БД: ZMMCORR16
  DO 1 TIMES.
    CHECK: ec_error = abap_false.
    LOOP AT lt_bapi_accdocrevpost_if  INTO ls_bapi_accdocrevpost_if .
      LOOP AT ls_bapi_accdocrevpost_if-t_db_corr16_key INTO ls_db_corr16_key.   " ----   RT0K916368.RTKDEVSAP-33
* ---- {  RT0K916368.RTKDEVSAP-33
*      UPDATE zmmcorr16
*        SET   belnr_kor16_st = ls_bapi_accdocrevpost_if-belnr_kor16_st
*              gjahr_kor16_st = ls_bapi_accdocrevpost_if-gjahr_kor16_st
*        WHERE bukrs = ls_bapi_accdocrevpost_if-s_db_corr16_key-bukrs AND
*              matnr = ls_bapi_accdocrevpost_if-s_db_corr16_key-matnr AND
*              spmon = ls_bapi_accdocrevpost_if-s_db_corr16_key-spmon  .
*
* ----
        UPDATE zmmcorr16
          SET   belnr_kor16_st = ls_bapi_accdocrevpost_if-belnr_kor16_st
                gjahr_kor16_st = ls_bapi_accdocrevpost_if-gjahr_kor16_st
                monat_kor16_st = ls_bapi_accdocrevpost_if-monat_kor16_st
          WHERE bukrs = ls_db_corr16_key-bukrs AND
                matnr = ls_db_corr16_key-matnr AND
                spmon = ls_db_corr16_key-spmon.
* ---- }  RT0K916368.RTKDEVSAP-33

        IF sy-subrc <> 0.
          ec_error = abap_true.       " Ошибка обновления данных в БД
          ls_message-msgid = 'ZMM2'.
          ls_message-msgty = 'E'   .
          ls_message-msgno = '014' .        " Ошибка при сохранении в БД &1, (ключ &2&3) &4
          ls_message-msgv1 = 'ZMMCORR16'.
* ---- {  RT0K916368.RTKDEVSAP-33
*        ls_message-msgv2 = ls_bapi_accdocrevpost_if-s_db_corr16_key-bukrs  && ':' &&
*                           ls_bapi_accdocrevpost_if-s_db_corr16_key-matnr  && ':' &&
*                           ls_bapi_accdocrevpost_if-s_db_corr16_key-spmon.
*
* ----
          ls_message-msgv2 = ls_db_corr16_key-bukrs  && ':' &&
                             ls_db_corr16_key-matnr  && ':' &&
                             ls_db_corr16_key-spmon.
* ---- }  RT0K916368.RTKDEVSAP-33
          ls_message-msgv3 = space.
          ls_message-msgv4 = space.
          _add_bapi_message:
            et_return ls_message-msgty ls_message-msgno ls_message-msgid
              ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
          EXIT.
* {RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
        ELSE.
          DATA: wa_hist TYPE zmmcorr16_hist.
          SELECT SINGLE * FROM zmmcorr16 INTO CORRESPONDING FIELDS OF wa_hist
             WHERE bukrs = ls_db_corr16_key-bukrs AND
                   matnr = ls_db_corr16_key-matnr AND
                   spmon = ls_db_corr16_key-spmon.
          IF sy-subrc = 0.
            wa_hist-belnr_kor16_st = ls_bapi_accdocrevpost_if-belnr_kor16_st.
            wa_hist-gjahr_kor16_st = ls_bapi_accdocrevpost_if-gjahr_kor16_st.
            wa_hist-monat_kor16_st = ls_bapi_accdocrevpost_if-monat_kor16_st.
            wa_hist-aenam          = sy-uname.
            wa_hist-aedat          = sy-datum.
            wa_hist-aetim          = sy-uzeit.
            INSERT INTO zmmcorr16_hist VALUES wa_hist.
          ENDIF.
* }RT0K917934 ABRUKHOV  RTKDEVSAP-205 CQ 60599 Доработка Транзакций ZCORR* - 1
        ENDIF.
      ENDLOOP.

* ---- {  RT0K916368.RTKDEVSAP-33
      IF ec_error = abap_true.
        EXIT.
      ENDIF.
    ENDLOOP.
* ---- }  RT0K916368.RTKDEVSAP-33
  ENDDO.

* Проведение документов коррекции сальдо 16 сч
  DO 1 TIMES.
    CHECK ic_commit = abap_true.

    IF ec_error = abap_false.  " Commit
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait   = abap_true
        IMPORTING
          return = ls_return.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'
        IMPORTING
          return = ls_return.
    ENDIF.

    IF NOT ls_return IS INITIAL.
      CASE ls_return-type.
        WHEN cc_msgty_s OR cc_msgty_i.                          " Success
          ec_error = abap_false.
        WHEN cc_msgty_w.                                        " Warning
          ec_error = abap_false.
        WHEN OTHERS.                                            " Error  (A/ X/ E)
          ROLLBACK WORK.
          ec_error = abap_true.
          ls_message = cl_uso_aw_su01=>utils_tfr_bapiret2_2msg( ls_return ).
          MESSAGE ID ls_message-msgid TYPE cc_msgty_e NUMBER ls_message-msgno
            WITH ls_message-msgv1  ls_message-msgv2  ls_message-msgv3  ls_message-msgv4
            DISPLAY LIKE ls_message-msgty.
      ENDCASE.
      _add_bapi_message:
        et_return ls_message-msgty ls_message-msgno ls_message-msgid
          ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.
    ENDIF.
  ENDDO.

ENDFORM.                    " CANCEL_POSTING_KOR16_DOCS
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- {  RT0K916109.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  PREP_STRN_KOR16_BAPI_DATa_IN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM prep_strn_kor16_bapi_data_in
  USING
    it_output                TYPE           tt_output
    ic_lifnr                 TYPE           c         ##NEEDED    " ----   RT0K916335.RTKDEVSAP-33
    id_post                  TYPE           d         ##NEEDED    " ----   RT0K916270.RTKDEVSAP-33
    ic_stgrd                 TYPE           c         ##NEEDED    " ----   RT0K916270.RTKDEVSAP-33
  CHANGING
    et_bapi_if_data          TYPE           tt_bapi_accdocrevpost_if
    ei_retcode               TYPE           i
    es_message               TYPE           symsg.
*
* -----------------------------------------------
  DATA:
    ls_bapi_if_data          TYPE           t_bapi_accdocrevpost_if.
*  DATA:
*    ls_rev_key               TYPE           bapiacrev,
*    ls_doc_hdr               TYPE           bapiache09.
* ---- {  RT0K916335.RTKDEVSAP-33
  DATA:
    lv_c_boole               TYPE           c.
* ---- }  RT0K916335.RTKDEVSAP-33

* ---- {  RT0K916366.RTKDEVSAP-33
  TYPES:
    BEGIN OF t_belnr,
      belnr                  TYPE           bkpf-belnr,
      gjahr                  TYPE           bkpf-gjahr,
    END   OF t_belnr,
    tt_belnr                 TYPE HASHED TABLE OF t_belnr
                              WITH UNIQUE KEY belnr gjahr.
  DATA:
    lt_output_kor16st        TYPE           tt_output,
    lt_belnr_kor16           TYPE           tt_belnr ,
    ls_belnr_kor16           TYPE           t_belnr  .
* ---- }  RT0K916366.RTKDEVSAP-33

* ---- {  RT0K916368.RTKDEVSAP-33
  DATA:
    ls_db_corr16_key         TYPE           t_zmmcorr16_key.
* ---- }  RT0K916368.RTKDEVSAP-33

*
* -----------------------------------------------
* Инициализация
  CLEAR: ei_retcode, es_message, et_bapi_if_data.

* Выборка данных по сторнируемым документам
  IF lines( it_output ) > 0 ##NEEDED.
*    select * INTO
  ENDIF.

* Проверка наличия данных для создания документов коррекции сальдо 16сч.
  DO 1 TIMES.
    CHECK ei_retcode < ci_retval_e.
    LOOP AT it_output INTO ls_output .
      CLEAR: ls_bapi_if_data.
* ---- {  RT0K916335.RTKDEVSAP-33
*      CHECK NOT ls_output-belnr_kor16    IS INITIAL AND
*            NOT ls_output-gjahr_kor16    IS INITIAL.
*      CHECK     ls_output-belnr_kor16_st IS INITIAL AND
*                ls_output-gjahr_kor16_st IS INITIAL.
* ---- }  RT0K916335.RTKDEVSAP-33

      PERFORM chk_alvrow_cancel_allow_kor16
        USING     ic_lifnr
                  ls_output
        CHANGING  lv_c_boole.
      CHECK lv_c_boole = abap_true.

* ---- {  RT0K916366.RTKDEVSAP-33
      APPEND ls_output TO lt_output_kor16st.

      CLEAR: ls_belnr_kor16.
      ls_belnr_kor16-belnr = ls_output-belnr_kor16.
      ls_belnr_kor16-gjahr = ls_output-gjahr_kor16.

      INSERT ls_belnr_kor16 INTO TABLE lt_belnr_kor16.
    ENDLOOP.

    LOOP AT lt_belnr_kor16 INTO ls_belnr_kor16.
      LOOP AT lt_output_kor16st INTO ls_output
                                WHERE belnr_kor16 = ls_belnr_kor16-belnr AND
                                      gjahr_kor16 = ls_belnr_kor16-gjahr.
        AT FIRST  ##LOOP_AT_OK.
* ---- }  RT0K916366.RTKDEVSAP-33

* -- формирование параметров BAPI Importing
          ls_bapi_if_data-import-s_reversal-obj_type   = 'BKPFF'    .
          ls_bapi_if_data-import-s_reversal-obj_key_r  =
          ls_bapi_if_data-import-s_reversal-obj_key    =
* ---- {  RT0K916366.RTKDEVSAP-33
*            ls_output-belnr_kor16 && '1000' && ls_output-gjahr_kor16.
* ----
            ls_belnr_kor16-belnr && '1000' && ls_belnr_kor16-gjahr.
* ---- }  RT0K916366.RTKDEVSAP-33
          ls_bapi_if_data-import-s_reversal-pstng_date = id_post    . " дата проводки - с дата на вспл.экране
          ls_bapi_if_data-import-s_reversal-reason_rev = ic_stgrd   . " причина сторно - '03'(Факт.сторно в текущ.периоде)
          ls_bapi_if_data-import-bus_act               = 'RFBU'     .
        ENDAT.                                        " ----   RT0K916366.RTKDEVSAP-33

* -- формирование табл.ключей для ZMMCORR16
* ---- {  RT0K916368.RTKDEVSAP-33
*        ls_bapi_if_data-s_db_corr16_key-bukrs      = ls_output-bukrs.
*        ls_bapi_if_data-s_db_corr16_key-matnr      = ls_output-matnr.
*        ls_bapi_if_data-s_db_corr16_key-spmon      = ls_output-spmon.
* ----
        ls_db_corr16_key-bukrs      = ls_output-bukrs.
        ls_db_corr16_key-matnr      = ls_output-matnr.
        ls_db_corr16_key-spmon      = ls_output-spmon.
        APPEND ls_db_corr16_key TO ls_bapi_if_data-t_db_corr16_key.

        AT LAST  ##LOOP_AT_OK.
          SORT ls_bapi_if_data-t_db_corr16_key BY bukrs matnr spmon.
          DELETE ADJACENT DUPLICATES FROM ls_bapi_if_data-t_db_corr16_key
            COMPARING bukrs matnr spmon.
        ENDAT.
* ---- }  RT0K916368.RTKDEVSAP-33
      ENDLOOP.

      APPEND ls_bapi_if_data TO et_bapi_if_data.      " ----   RT0K916366.RTKDEVSAP-33
    ENDLOOP.                                          " ----   RT0K916364.RTKDEVSAP-33

*    IF <... error_criteria ...>.
*      CLEAR: et_bapi_if_data,  et_key_db.             " Очистка выходных данных
*      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
*      lv_s_msgtext = text-m14.  " Отсутствуют данные для сторнирования документов коррекции сальдо 16сч.
*      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
*      MOVE-CORRESPONDING sy TO es_message.
*      es_message-msgty = cc_msgty_e.                              " Error
*      EXIT.
*    ENDIF.
  ENDDO.

ENDFORM.                    "PREP_STRN_KOR16_BAPI_DATa_IN
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- {  RT0K916109.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  GET_SINGLE_LIFNR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM get_single_lifnr  ##CALLED
  USING
    it_output                TYPE           tt_output
  CHANGING
    ec_lifnr                 TYPE           c.
*
* -----------------------------------------------
  DATA:
    ls_output                TYPE           t_output.
*
* -----------------------------------------------
  CLEAR: ec_lifnr.

  DO 1 TIMES.
    CHECK lines( it_output ) > 0.
    READ TABLE it_output INTO ls_output INDEX 1.
    CHECK     sy-subrc = 0  AND
          NOT ls_output-lifnr IS INITIAL.

    ec_lifnr = ls_output-lifnr.
    LOOP AT it_output INTO ls_output
                      WHERE lifnr <> ec_lifnr.
      CLEAR ec_lifnr.
      RETURN.
    ENDLOOP.
  ENDDO.
ENDFORM.                    " GET_SINGLE_LIFNR
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- {  RT0K916109.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  GET_LAST_DAY_OF_PERIOD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM get_last_day_of_period
  USING
    id_spmon                 TYPE           spmon
  CHANGING
    ed_last_date             TYPE           d.
*
* -----------------------------------------------
  DATA:
    lv_d_1st_date            TYPE           d.
*
* -----------------------------------------------
  CLEAR: ed_last_date.

  DO 1 TIMES.
    CHECK NOT id_spmon IS INITIAL.

* -- Определение последненго дня месяца в периоде
    lv_d_1st_date = id_spmon && '01'.
    CALL FUNCTION 'LAST_DAY_OF_MONTHS'
      EXPORTING
        day_in            = lv_d_1st_date
      IMPORTING
        last_day_of_month = ed_last_date
      EXCEPTIONS
        OTHERS            = 2.
    IF sy-subrc <> 0.
      MESSAGE e401(5d) WITH lv_d_1st_date
        DISPLAY LIKE cc_msgty_i.
    ENDIF.
  ENDDO.
ENDFORM.                    " GET_LAST_DAY_OF_PERIOD
* ---- }  RT0K916109.RTKDEVSAP-33

* ---- {  RT0K916270.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  SCR_POPUP_STRN_KOR16_CHKVAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM scr_popup_strn_kor16_chkval
  USING
    it_output                TYPE           tt_output
    ic_lifnr                 TYPE           c         ##NEEDED
    id_post                  TYPE           d         ##NEEDED
    id_doc                   TYPE           d         ##NEEDED
    ic_stgrd                 TYPE           c         ##NEEDED    " ----   RT0K916270.RTKDEVSAP-33
  CHANGING
    ei_retcode               TYPE           i
    es_message               TYPE           symsg.
*
* -----------------------------------------------
  TYPES:
    BEGIN OF t_bkpf_sc,
      bukrs                  TYPE           bkpf-bukrs,
      belnr                  TYPE           bkpf-belnr,
      gjahr                  TYPE           bkpf-gjahr,
    END   OF t_bkpf_sc,
    tt_bkpf_sc               TYPE HASHED TABLE OF t_bkpf_sc
                              WITH UNIQUE KEY bukrs belnr gjahr,
    BEGIN OF t_bkpf_sel.
  INCLUDE                    TYPE           t_bkpf_sc.
  TYPES:
      bldat                  TYPE           bkpf-bldat,   " ----   RT0K916362.RTKDEVSAP-33
      budat                  TYPE           bkpf-budat,
    END   OF t_bkpf_sel,
    tt_bkpf_sel              TYPE STANDARD TABLE OF t_bkpf_sel
                                WITH NON-UNIQUE KEY primary_key COMPONENTS bukrs belnr gjahr.
* ----
  DATA:
    lv_s_msgtext             TYPE           string    ,
    lv_c_lifnr               TYPE           lfa1-lifnr,
    lv_c_date_doc(10)        TYPE           c.
  DATA:
    ls_output                TYPE           t_output   ,
    ls_bkpf_sc               TYPE           t_bkpf_sc  ,
    lt_bkpf_sc               TYPE           tt_bkpf_sc ,
    ls_bkpf_sel              TYPE           t_bkpf_sel ,
    lt_bkpf_sel              TYPE           tt_bkpf_sel.
*
* -----------------------------------------------
* Инициализация
  CLEAR: ei_retcode, es_message.
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
    EXPORTING
      input  = ic_lifnr
    IMPORTING
      output = lv_c_lifnr.
  WRITE id_doc TO lv_c_date_doc.

* Проверка наличия введеного Поставщика в строках ALV
  DO 1 TIMES.
    CHECK ei_retcode < ci_retval_e.
    LOOP AT it_output INTO ls_output
      WHERE  lifnr            = ic_lifnr      AND
             stock_16_fin_kor <> 0            AND
         NOT belnr_kor16      IS INITIAL      AND
         NOT gjahr_kor16      IS INITIAL      AND
             status           = icon_complete.
* -- критерии выборки для даты проводки сторнируемого документа ls_bkpf_sc
      CLEAR: ls_bkpf_sc.
      ls_bkpf_sc-bukrs = ls_output-bukrs      .
      ls_bkpf_sc-belnr = ls_output-belnr_kor16.
      ls_bkpf_sc-gjahr = ls_output-gjahr_kor16.
      INSERT ls_bkpf_sc INTO TABLE lt_bkpf_sc.

* -- критерии выборки ...
*     <...>
    ENDLOOP.
    IF sy-subrc <> 0.
      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
      CONCATENATE:
        'Поставщик'(036) lv_c_lifnr 'отсутствует в списке допустимых значений для сторно коррекции сальдо 16сч.'(085)
          INTO lv_s_msgtext SEPARATED BY space.
      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
      MOVE-CORRESPONDING sy TO es_message.
      es_message-msgty = cc_msgty_e.                              " Error
      EXIT.
    ENDIF.
  ENDDO.

* Проверка даты проводки сторнируемого документа введеного BUDAT в BKPF
  DO 1 TIMES.
    CHECK ei_retcode < ci_retval_e.
    CHECK lines( lt_bkpf_sc ) > 0.
* ---- {  RT0K916362.RTKDEVSAP-33
*    SELECT bukrs belnr gjahr budat
* ----
    SELECT bukrs belnr gjahr
           bldat budat
* ---- }  RT0K916362.RTKDEVSAP-33
      INTO TABLE lt_bkpf_sel
      FROM bkpf
      FOR ALL ENTRIES IN lt_bkpf_sc
      WHERE bukrs = lt_bkpf_sc-bukrs AND
            belnr = lt_bkpf_sc-belnr AND
            gjahr = lt_bkpf_sc-gjahr.
    IF sy-subrc <> 0.
      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
      CONCATENATE:
        'Для выбранных фин.документов'(086) 'отсутствуют записи в БД'(087) '(табл.BKPF)'(088)
          INTO lv_s_msgtext SEPARATED BY space.
      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
      MOVE-CORRESPONDING sy TO es_message.
      EXIT.
    ENDIF.

* ---- {  RT0K916362.RTKDEVSAP-33
*    DELETE lt_bkpf_sel WHERE budat NE id_doc.
* ----
    DELETE lt_bkpf_sel WHERE bldat NE id_doc.
* ---- }  RT0K916362.RTKDEVSAP-33
    LOOP AT it_output INTO ls_output
      WHERE  lifnr            =  ic_lifnr     AND
             stock_16_fin_kor <> 0            AND
         NOT belnr_kor16      IS INITIAL      AND
         NOT gjahr_kor16      IS INITIAL      AND
             status           = icon_complete.

      READ TABLE lt_bkpf_sel INTO ls_bkpf_sel
        WITH KEY  bukrs = ls_output-bukrs
                  belnr = ls_output-belnr_kor16
                  gjahr = ls_output-gjahr_kor16
* ---- {  RT0K916362.RTKDEVSAP-33
*                  budat = id_doc.
* ----
                  bldat = id_doc.
* ---- }  RT0K916362.RTKDEVSAP-33
      IF sy-subrc = 0.
        EXIT.                         " проверка Даты документа - ОК!
      ELSE.
        IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
        CONCATENATE:
          'Для выбранных фин.документов'(086) 'отсутствуют записи в БД'(087)
          'с датой документа'(089) lv_c_date_doc '(табл.BKPF)'(088)
            INTO lv_s_msgtext SEPARATED BY space.
        cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
        MOVE-CORRESPONDING sy TO es_message.
      ENDIF.
    ENDLOOP.
*    IF sy-subrc <> 0.
**     <Обработано на предыдущем этапе проверки>
*    ENDIF.
  ENDDO.

** Проверка ...
*  DO 1 TIMES.
*    CHECK ei_retcode < ci_retval_e.
*     <... Check algorythm ...>
*
*    IF sy-subrc <> 0.
*      IF ei_retcode < ci_retval_e. ei_retcode = ci_retval_e. ENDIF.
*      CONCATENATE:
*        '' ''
*          INTO lv_s_msgtext SEPARATED BY space.
*      cl_message_helper=>set_msg_vars_for_clike( lv_s_msgtext ).  " Set message to SY-MSG*
*      MOVE-CORRESPONDING sy TO es_message.
*      EXIT.
*    ENDIF.
*  ENDDO.

ENDFORM.                                  " SCR_POPUP_STRN_KOR16_CHKVAL
* ---- }  RT0K916270.RTKDEVSAP-33

* ---- { RT0K915819.ERP-266
*&---------------------------------------------------------------------*
*&      Form  CHK4SINGLE_SUPPLIER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  Использвание глобальных переменных
*  - so_lifnr
*  - <...>
*
*  Измененение глобальных переменных
*  - <...>
*
* -----------------------------------------------
FORM chk4single_supplier
  CHANGING
    ec_lifnr                 TYPE           c.
*
* -----------------------------------------------
  DATA:
    ls_lifnr                 TYPE                     lfa1-lifnr,
    lt_lifnr                 TYPE STANDARD TABLE OF   lfa1-lifnr.
*
* -----------------------------------------------
  CLEAR: ec_lifnr.

  DO 1 TIMES.
    CHECK NOT so_lifnr[] IS INITIAL.

    SELECT lifnr INTO TABLE lt_lifnr
      FROM  lfa1
      WHERE lifnr IN so_lifnr.
    IF lines( lt_lifnr ) = 0 OR
       lines( lt_lifnr ) > 1.
      RETURN.
    ELSEIF lines( lt_lifnr ) = 1.
      READ TABLE lt_lifnr INTO ls_lifnr INDEX 1.
      ec_lifnr = ls_lifnr.
    ENDIF.
  ENDDO.

  IF so_matnr[] IS NOT INITIAL.
    CLEAR ec_lifnr.
  ENDIF.

ENDFORM.                    " CHK4SINGLE_SUPPLIER
* ---- } RT0K915819.ERP-266

* ---- {  RT0K916335.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  chk_alvrow_post_allow_kor16
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  Использвание глобальных переменных
*  - <...>
*
*  Измененение глобальных переменных
*  - <...>
*
* -----------------------------------------------
FORM chk_alvrow_post_allow_kor16
  USING
    ic_lifnr                 TYPE           c
    is_output                TYPE           t_output
  CHANGING
    ec_alow                  TYPE           c.
*
* -----------------------------------------------
*
* -----------------------------------------------
  CLEAR: ec_alow.

  DO 1 TIMES.
    CHECK:
      NOT ic_lifnr IS INITIAL                            ,
          is_output-status            = icon_complete AND
          is_output-lifnr             = ic_lifnr      AND
          is_output-stock_16_fin_kor <> 0             AND
      ( (     is_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - Не создавался
              is_output-gjahr_kor16    IS INITIAL )  OR
        ( NOT is_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - был создаван и сторнирован
          NOT is_output-gjahr_kor16    IS INITIAL AND
          NOT is_output-belnr_kor16_st IS INITIAL AND
          NOT is_output-gjahr_kor16_st IS INITIAL ) ).
    ec_alow = abap_true.
  ENDDO.

ENDFORM.                    "chk_alvrow_post_allow_kor16
* ---- }  RT0K916335.RTKDEVSAP-33

* ---- {  RT0K916335.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  chk_alvrow_cancel_allow_kor16
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  Использвание глобальных переменных
*  - <...>
*
*  Измененение глобальных переменных
*  - <...>
*
* -----------------------------------------------
FORM chk_alvrow_cancel_allow_kor16
  USING
    ic_lifnr                 TYPE           c
    is_output                TYPE           t_output
  CHANGING
    ec_alow                  TYPE           c.
*
* -----------------------------------------------
*
* -----------------------------------------------
  CLEAR: ec_alow.

  DO 1 TIMES.
    CHECK:
      NOT ic_lifnr IS INITIAL ,
          is_output-status           = icon_complete AND
          is_output-lifnr            = ic_lifnr      AND
          is_output-stock_16_fin_kor <> 0            AND
        ( NOT is_output-belnr_kor16    IS INITIAL AND       " док.корруктировки 16сч. - был создаван и НЕ сторнирован
          NOT is_output-gjahr_kor16    IS INITIAL AND
              is_output-belnr_kor16_st IS INITIAL AND
              is_output-gjahr_kor16_st IS INITIAL ) .
    ec_alow = abap_true.
  ENDDO.

ENDFORM.                    "chk_alvrow_cancel_allow_kor16
* ---- }  RT0K916335.RTKDEVSAP-33

* ---- {  RT0K916335.RTKDEVSAP-33
*&---------------------------------------------------------------------*
*&      Form  PREP_KOR16_KEY_DB_NOPOST
*&---------------------------------------------------------------------*
*  подпрограмма подготовки ключей для обновления данных БД ZMMCORR16   *
*  в рамках доработки:                                                 *
* ' RTKDEVSAP-33 (http://jiraf.tsretail.ru/browse/RTKDEVSAP-33)        *
*    <...>                                                             *
*   C. при проведении корректирующей проводки (KORR_16)...             *
*     <...>                                                            *
*   ОСТАВШИЕСЯ записи ALV данные в полях: STOCK_16_FIN_KOR, BELNR_KOR16,*
*   GJAHR_KOR16, BELNR_KOR16_ST, GJAHR_KOR16_ST - очищаются            *
*     <...> '                                                          *
*----------------------------------------------------------------------*
FORM prep_kor16_key_db_nopost
  USING
    it_output                TYPE           tt_output
    ic_bukrs                 TYPE           bukrs
    id_period                TYPE           spmon
    ic_lifnr                 TYPE           c
  CHANGING
    et_key_db                TYPE           tt_zmmcorr16_key.
*
* -----------------------------------------------
  DATA:
    ls_output                TYPE           t_output        ,
    ls_key_db                TYPE           t_zmmcorr16_key,
    lv_c_boole               TYPE           c               .
*
* -----------------------------------------------
  CLEAR: et_key_db.

  LOOP AT it_output INTO ls_output.
* -- Фильтр для НЕ обрабатываемых позиций
    PERFORM chk_alvrow_post_allow_kor16
      USING     ic_lifnr
                ls_output
      CHANGING  lv_c_boole.
    CHECK lv_c_boole = abap_false.                      " для строк ALV НЕ попавших в обработку

* -- Формирование ключей записей обновления БД: ZMMCORR16
    CLEAR ls_key_db.
    MOVE-CORRESPONDING ls_output TO ls_key_db.          " MATNR, ...
    ls_key_db-bukrs = ic_bukrs.
    ls_key_db-spmon = id_period.
    APPEND ls_key_db TO et_key_db.
  ENDLOOP.

ENDFORM.                    " PREP_KOR16_KEY_DB_NOPOST
* ---- }  RT0K916335.RTKDEVSAP-33

* --------{ RT0K917548.RTKDEVSAP-184
FORM chk_movtypes
  USING
    ic_out_type              TYPE           i        " types output: 0- no_output/ 1- alv/ 2- write report
  CHANGING
    ec_start_allow_flg       TYPE           c
    es_ctrl_alv              TYPE           t_chkmvty_ctrl_alv
    et_data_alv              TYPE           tt_chkmvty_data_alv.

* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  TYPES:
    tt_t156_sel              TYPE HASHED TABLE OF   t_bwart_shkzg
                              WITH UNIQUE KEY bwart,
    tt_zmvtp_rasp16_sel      TYPE HASHED TABLE OF   t_bwart_shkzg
                              WITH UNIQUE KEY bwart  shkzg.
  DATA:
    ls_t156_sel               TYPE           t_bwart_shkzg      ,
    lt_t156_sel               TYPE           tt_t156_sel        ,
*    ls_mvtp_rasp16_sel        TYPE           t_bwart_shkzg      ,
    lt_mvtp_rasp16_sel        TYPE           tt_zmvtp_rasp16_sel,
    ls_data_diff              TYPE           t_bwart_shkzg      ,
    lt_data_diff              TYPE           tt_bwart_shkzg     .
  DATA:
    lv_s_msgtext              TYPE           string ,
    lv_c_title                TYPE           string ,
    lv_c_answer(1)            TYPE           c      ,
    lv_c_row_not_found        TYPE           boole_d,
    lv_i_out_type             TYPE           i      ,
    lv_i_rows                 TYPE           i      ,
    lv_c_rows(14)             TYPE           c      .

* -----------------------------------------------
* Initialize
  CLEAR: ec_start_allow_flg.
  CLEAR:  es_ctrl_alv, et_data_alv.

  lv_i_out_type = ic_out_type.

* Select from T156 (whole)
  SELECT bwart  shkzg
    FROM t156
    INTO TABLE lt_t156_sel.

* Select from ZMM_MVTP_RASP16
  DO 1 TIMES.
    IF lines( lt_t156_sel ) = 0.              " No start allowed
      lv_s_msgtext = 'Таблица мастер-данных T156 не содержит записей'(103).
      EXIT.
    ENDIF.

    SELECT bwart  shkzg
      FROM zmm_mvtp_rasp16
      INTO TABLE lt_mvtp_rasp16_sel
      FOR ALL ENTRIES IN lt_t156_sel
      WHERE bwart = lt_t156_sel-bwart AND
            shkzg = lt_t156_sel-shkzg.
    IF sy-subrc <> 0.                       " No start allowed
      lv_s_msgtext = 'Контрольная таблица ZMM_MVTP_RASP16 не содержит соответствующих записей для T156'(106).
      EXIT.
    ENDIF.

*  Check that all records of T156 are existing in ZMM_MVTP_RASP16
    LOOP AT lt_t156_sel INTO ls_t156_sel.
      READ TABLE lt_mvtp_rasp16_sel TRANSPORTING NO FIELDS
        WITH TABLE KEY bwart = ls_t156_sel-bwart
                       shkzg = ls_t156_sel-shkzg.
      CHECK sy-subrc <> 0.
      lv_c_row_not_found = abap_true.
      MOVE-CORRESPONDING ls_t156_sel TO ls_data_diff.
      APPEND ls_data_diff TO lt_data_diff.
    ENDLOOP.
    CASE lv_c_row_not_found.
      WHEN abap_false.
        ec_start_allow_flg = abap_true.
      WHEN OTHERS.
        IF lines( lt_data_diff ) > 0.
          lv_i_rows = lines( lt_data_diff ).
          WRITE lv_i_rows TO lv_c_rows. CONDENSE lv_c_rows.
        ELSE.
          lv_c_rows = '0'.
        ENDIF.
        CONCATENATE:
        lv_c_rows   'строк отсутствует в таблице T156.'(113)
        'Дальнейшее выполнение программы невозможно.'(111) 'Вывести расхождения?'(112)
          INTO lv_s_msgtext SEPARATED BY space.
    ENDCASE.
  ENDDO.

  CASE ec_start_allow_flg.
    WHEN abap_true.                         " Start allowed
* -- Display message
      IF NOT lv_s_msgtext IS INITIAL.
        MESSAGE lv_s_msgtext  TYPE 'I' DISPLAY LIKE 'S'.
      ENDIF.
      RETURN.

    WHEN OTHERS.                            " No start allowed
* -- Display message
      IF NOT lv_s_msgtext IS INITIAL.
        CASE  lv_c_row_not_found.
          WHEN abap_true.                   " POPUP_TO_CONFIRM
            CALL FUNCTION 'POPUP_TO_CONFIRM'
              EXPORTING
                titlebar              = lv_c_title
                text_question         = lv_s_msgtext
                text_button_1         = 'Да'(052)
                text_button_2         = 'Нет'(053)
                default_button        = '1'
                display_cancel_button = ''
                popup_type            = 'ICON_MESSAGE_CRITICAL'
              IMPORTING
                answer                = lv_c_answer
              EXCEPTIONS
                OTHERS                = 0.
            IF lv_c_answer <> '1'. lv_i_out_type = 99. ENDIF. " No output ALV-grid

          WHEN OTHERS.                      " MESSAGE type 'I'
            MESSAGE lv_s_msgtext  TYPE 'I' DISPLAY LIKE 'E'.
        ENDCASE.
      ENDIF.

* -- Output result
      CASE lv_i_out_type.
        WHEN 1.                   " ALV-Grid
          DO 1 TIMES.
            PERFORM start_alv_movty_diff
              USING     lt_data_diff
              CHANGING  es_ctrl_alv
                        et_data_alv.
          ENDDO.
        WHEN 2.                   " Write report
          MESSAGE 'Данный режим временно не поддерживается'(104)
            TYPE 'I' DISPLAY LIKE 'E'.
          RETURN.

        WHEN OTHERS.              " No output
*          <nothing to do>
      ENDCASE.
  ENDCASE.

ENDFORM.                    "chk_movtypes
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM start_alv_movty_diff
  USING
    it_data_sql              TYPE           tt_bwart_shkzg
  CHANGING
    es_ctrl_alv              TYPE           t_chkmvty_ctrl_alv
    et_data_alv              TYPE           tt_chkmvty_data_alv.
*
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  DATA:
     lv_c_title              TYPE           lvc_title,
     lv_i_rows               TYPE           int4,
     lv_c_rows(14)           TYPE           c.
*
* -----------------------------------------------
  DO 1 TIMES.
    CHECK lines( it_data_sql ) > 0.

* Initialize
    CLEAR:  es_ctrl_alv, et_data_alv.

*  Prepare Data
    PERFORM conv_chkmvty_data_sql2alv
      USING     it_data_sql
      CHANGING  et_data_alv.

*  Prepare Control
* -- Layout
    es_ctrl_alv-s_layo-zebra      = abap_true.
    es_ctrl_alv-s_layo-info_fname = 'ROWCOLOR'.
    es_ctrl_alv-s_layo-ctab_fname = 'CELLCOLORS'.  " Cell coloring
    es_ctrl_alv-s_layo-stylefname = 'CELLSTYLES'.
    es_ctrl_alv-s_layo-box_fname  = 'SEL'.
    es_ctrl_alv-s_layo-cwidth_opt = abap_true.
    es_ctrl_alv-s_layo-smalltitle = abap_true.

* -- Fieldcatalog
    es_ctrl_alv-fcat_tabname = 'ZMM_MVTP_RASP16'.
    PERFORM alv_chkmvty_prepfcat
      USING     es_ctrl_alv-fcat_tabname
      CHANGING  es_ctrl_alv-t_fcat.

* -- title
    lv_i_rows = lines( et_data_alv ).
    IF lv_i_rows > 0.
      WRITE lv_i_rows TO lv_c_rows. CONDENSE lv_c_rows.
    ENDIF.
    CONCATENATE:
      lv_c_rows 'строк для ZMM_MVTP_RASP16'(110)
        INTO lv_c_title SEPARATED BY space.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
      EXPORTING
*        i_interface_check           = SPACE                           " Interface consistency check log output
*        i_bypassing_buffer          =                                 " Skip All Buffers?
*        i_buffer_active             =                                 " Buffer active
        i_callback_program          = sy-cprog                        " Name of the calling program
        i_callback_pf_status_set    = 'ALV_CLBK_CHKMVTY_SET_STATUS'   " Set EXIT routine to status
        i_callback_user_command     = 'ALV_CLBK_CHKMVTY_UCOMM'        " EXIT routine for command handling
*        i_callback_top_of_page      = 'ALV_CLBK_TOP_OF_PAGE'          " EXIT routine for handling TOP-OF-PAGE
*        i_callback_html_top_of_page = SPACE                           " EXIT routine for HTML TOP-OF-PAGE
*        i_callback_html_end_of_list = SPACE                           " EXIT routine for HTML END-OF-LIST
*        i_structure_name            =                                 " Internal Output Table Structure Name
*        i_background_id             = SPACE                           " Object ID of wallpaper
        i_grid_title                =  lv_c_title                     " Control title
*        i_grid_settings             =                                 " Grid settings
        is_layout_lvc               = es_ctrl_alv-s_layo               " List Layout Specifications
        it_fieldcat_lvc             = es_ctrl_alv-t_fcat               " Field Catalog with Field Descriptions
*        it_excluding                =                                 " Table of inactive function codes
*        it_special_groups_lvc       =                                 " Grouping fields for column selection
*        it_sort_lvc                 =                                 " Sort criteria for first list display
*        it_filter_lvc               =                                 " Filter criteria for first list output
*        it_hyperlink                =                                 " Hyperlinks
*        is_sel_hide                 =                                 " Selection information modification
*        i_default                   = 'X'                             " Initial variant active/inactive logic
        i_save                      = es_ctrl_alv-save                " Variants Can be Saved
*        is_variant                  =                                 " Variant information
*        it_events                   =                                 " Table of events to perform
*        it_event_exit               =                                 " Standard fcode exit requests table
*        is_print_lvc                =                                 " Print information
*        is_reprep_id_lvc            =                                 " Initialization key for Re/Re interface
        i_screen_start_column       = 5                               " Coordinates for list in dialog box
        i_screen_start_line         = 1                               " Coordinates for list in dialog box
        i_screen_end_column         = 35                              " Coordinates for list in dialog box
        i_screen_end_line           = 30                              " Coordinates for list in dialog box
*        i_html_height_top           =
*        i_html_height_end           =
*        it_alv_graphics             =
*        it_except_qinfo_lvc         =
*        ir_salv_fullscreen_adapter  =
*     IMPORTING
*        e_exit_caused_by_caller     =                                " Delete list in CALLBACK_USER_COMMAND
*        es_exit_caused_by_user      =                                " How the user left the list
      TABLES
        t_outtab                    =    et_data_alv                  " Table with data to be displayed
      EXCEPTIONS
        OTHERS                      = 0.
  ENDDO.
ENDFORM.                    "start_alv_movty_diff
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM alv_clbk_chkmvty_ucomm  ##CALLED
   USING
     ic_ucomm                TYPE           c
     rs_selfield             TYPE           slis_selfield ##NEEDED.
*
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  CASE ic_ucomm.
    WHEN  '&IC1'.             " 'Double-click' от Cell
*     <...>
    WHEN OTHERS.
*     <...>
  ENDCASE.
ENDFORM.                    "start_alv_movty_diff
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM alv_clbk_chkmvty_set_status   ##CALLED
  USING
    extab                    TYPE           slis_t_extab ##NEEDED.
*
* -----------------------------------------------
*  Using global data:
*   - gs_chkmvty_ctrl_alv-r_alvgrid
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  DATA:
    lt_pfsta_excl            TYPE STANDARD TABLE OF   syucomm
                              WITH NON-UNIQUE KEY primary_key COMPONENTS table_line.

* -----------------------------------------------
* set PF-STATUS
  DO 2 TIMES.
    CASE sy-index.
      WHEN 1.
        APPEND '&EB9' TO lt_pfsta_excl.
      WHEN 2.
        APPEND '&ELP' TO lt_pfsta_excl.
    ENDCASE.
  ENDDO.
  SET PF-STATUS 'STDPOPBX_FS_LIGHT' EXCLUDING lt_pfsta_excl.

*  get ALV-object
  IF gs_chkmvty_ctrl_alv-r_alvgrid IS INITIAL.
    CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
      IMPORTING
        e_grid = gs_chkmvty_ctrl_alv-r_alvgrid.
  ENDIF.

  IF NOT gs_chkmvty_ctrl_alv-r_alvgrid IS INITIAL.
    gs_chkmvty_ctrl_alv-r_alvgrid->check_changed_data( ).
  ENDIF.
ENDFORM.                    "ALV_CLBK_CHKMVTY_SET_STATUS
* --------} RT0K917548.RTKDEVSAP-184


* --------{ RT0K917548.RTKDEVSAP-184
FORM alv_clbk_top_of_page  ##CALLED ##NEEDED.
*
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
* <...>

ENDFORM.                    "ALV_CLBK_TOP_OF_PAGE
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM alv_chkmvty_prepfcat
  USING
    ic_str_name             TYPE           c
  CHANGING
    et_fcat                 TYPE           lvc_t_fcat.
*
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  DATA:
    lr_oref                  TYPE REF TO    cx_root   ,
    ls_text                  TYPE           string    ,
    lv_c_tabname             TYPE           tabname   ,
    lt_fcat                  TYPE           lvc_t_fcat.

  FIELD-SYMBOLS:
    <fs_fcat>                TYPE           lvc_s_fcat.
*
* -----------------------------------------------
  CLEAR: et_fcat.
  lv_c_tabname = ic_str_name.

  TRY.
      CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
        EXPORTING
          i_buffer_active    = ''
          i_structure_name   = lv_c_tabname
          i_bypassing_buffer = abap_true
        CHANGING
          ct_fieldcat        = lt_fcat
        EXCEPTIONS
          OTHERS             = 0.
    CATCH cx_sy_dyn_call_illegal_type INTO lr_oref.
      ls_text = lr_oref->get_text( ).
      MESSAGE ls_text TYPE cc_msgty_i DISPLAY LIKE cc_msgty_e.
      RETURN.
  ENDTRY.

  LOOP AT lt_fcat ASSIGNING <fs_fcat>.
    CASE <fs_fcat>-fieldname.
      WHEN 'BWART'.
        <fs_fcat>-col_pos = 1.
        <fs_fcat>-key     = abap_true.

      WHEN 'SHKZG'.
        <fs_fcat>-col_pos = 2.
        <fs_fcat>-key     = abap_false.

      WHEN OTHERS.
        <fs_fcat>-no_out = abap_true.
    ENDCASE.
  ENDLOOP.

* Return
  et_fcat = lt_fcat.

ENDFORM.                    "alv_chkmvty_prepfcat
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM conv_chkmvty_data_sql2alv
  USING
    it_data_sql              TYPE           tt_bwart_shkzg
  CHANGING
    et_data_alv              TYPE           tt_chkmvty_data_alv.
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  DATA:
    ls_data_sql              TYPE           t_bwart_shkzg.

  FIELD-SYMBOLS:
    <ls_data_sql>            TYPE           t_chkmvty_data_alv.
*
* -----------------------------------------------
  CLEAR et_data_alv.

  LOOP AT it_data_sql INTO ls_data_sql.
    APPEND INITIAL LINE TO et_data_alv ASSIGNING <ls_data_sql>.
    MOVE-CORRESPONDING ls_data_sql TO <ls_data_sql>.
  ENDLOOP.
ENDFORM.                    "conv_chkmvty_data_sql2alv
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM init_fkey.
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - sscrfields
*   - ...
* -----------------------------------------------
  DATA:
    ls_fkeys                   TYPE           smp_dyntxt.
*
* -----------------------------------------------
* Function Key 1 (FC01)
  ls_fkeys-icon_id       = icon_moving_data_act.
  ls_fkeys-quickinfo     = 'Проверка видов движения'(107).
  ls_fkeys-icon_text     = 'ПровВидДв'(108).
  sscrfields-functxt_01 = ls_fkeys.

* Function Key 2 (FC02)
*  <...>

* Function Key 3 (FC03)
*  <...>

* Function Key 4 (FC04)
*  <...>

ENDFORM.                    "init_fkey
* --------} RT0K917548.RTKDEVSAP-184

* --------{ RT0K917548.RTKDEVSAP-184
FORM chg_stndt_sspfsta
  USING
    ic_start_allow_flg       TYPE                c.
* -----------------------------------------------
*  Using global data:
*   - ...
*  Changing global data:
*   - ...
* -----------------------------------------------
  DATA:
   lt_excl_fcode             TYPE STANDARD TABLE OF   syucomm   ,
   ls_fkeys                  TYPE                     rseul_keys,
   lt_fkeys                  TYPE STANDARD TABLE OF   rseul_keys.
*
* -----------------------------------------------
  CALL FUNCTION 'RS_CUA_GET_STATUS'
    EXPORTING
*     LANGUAGE = ' '
      program  = 'RSSYSTDB'  "
      status   = sy-pfkey    " %_00 - current PF-STATUS
    TABLES
      fkeys    = lt_fkeys
    EXCEPTIONS
      OTHERS   = 0.

  CASE ic_start_allow_flg.
    WHEN abap_false.            " проверка не проведена или отрицательный результат
      DO 1 TIMES.
        READ TABLE lt_fkeys INTO ls_fkeys
          WITH KEY code = 'ONLI'.           " F8 = Run report
        CHECK sy-subrc = 0.
        APPEND 'ONLI' TO lt_excl_fcode.     " Remove button F8 from statdard PF-STATUS %_00 ( pgm 'RSSYSTDB')
      ENDDO.

    WHEN OTHERS.                " 'X' - проверка пройдена
*     <... do_nothing>
  ENDCASE.

  CALL FUNCTION 'RS_SET_SELSCREEN_STATUS'
    EXPORTING
      p_status  = sy-pfkey
    TABLES
      p_exclude = lt_excl_fcode.

ENDFORM.                    "chg_stndt_sspfsta
* --------} RT0K917548.RTKDEVSAP-184
